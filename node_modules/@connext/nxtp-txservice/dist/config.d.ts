import { Static } from "@sinclair/typebox";
export declare const ProviderConfigSchema: import("@sinclair/typebox").TObject<{
    url: import("@sinclair/typebox").TString<"uri">;
    user: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
    password: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
    priority: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    weight: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    stallTimeout: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
}>;
export type ProviderConfig = Static<typeof ProviderConfigSchema>;
export declare const validateProviderConfig: import("ajv").ValidateFunction<{
    [x: string]: {};
}>;
declare const CoreChainConfigSchema: import("@sinclair/typebox").TObject<{
    gasStations: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>>;
    gasPriceInitialBoostPercent: import("@sinclair/typebox").TInteger;
    gasPriceReplacementBumpPercent: import("@sinclair/typebox").TInteger;
    gasPriceMaximum: import("@sinclair/typebox").TString<string>;
    gasPriceMinimum: import("@sinclair/typebox").TString<string>;
    gasPriceMaxIncreaseScalar: import("@sinclair/typebox").TInteger;
    hardcodedGasPrice: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
    gasLimitInflation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    confirmationTimeout: import("@sinclair/typebox").TInteger;
    confirmations: import("@sinclair/typebox").TInteger;
    maxProviderCPS: import("@sinclair/typebox").TInteger;
    syncProvidersInterval: import("@sinclair/typebox").TInteger;
    quorum: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    debug_logRpcCalls: import("@sinclair/typebox").TBoolean;
}>;
export type CoreChainConfig = Static<typeof CoreChainConfigSchema>;
declare const ChainConfigSchema: import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    providers: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        url: import("@sinclair/typebox").TString<"uri">;
        user: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
        password: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
        priority: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        weight: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        stallTimeout: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>>;
}>, import("@sinclair/typebox").TObject<{
    gasStations: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>>;
    gasPriceInitialBoostPercent: import("@sinclair/typebox").TInteger;
    gasPriceReplacementBumpPercent: import("@sinclair/typebox").TInteger;
    gasPriceMaximum: import("@sinclair/typebox").TString<string>;
    gasPriceMinimum: import("@sinclair/typebox").TString<string>;
    gasPriceMaxIncreaseScalar: import("@sinclair/typebox").TInteger;
    hardcodedGasPrice: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
    gasLimitInflation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    confirmationTimeout: import("@sinclair/typebox").TInteger;
    confirmations: import("@sinclair/typebox").TInteger;
    maxProviderCPS: import("@sinclair/typebox").TInteger;
    syncProvidersInterval: import("@sinclair/typebox").TInteger;
    quorum: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    debug_logRpcCalls: import("@sinclair/typebox").TBoolean;
}>]>;
export type ChainConfig = Static<typeof ChainConfigSchema>;
declare const TransactionServiceConfigSchema: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TIntersect<[import("@sinclair/typebox").TObject<{
    providers: import("@sinclair/typebox").TArray<import("@sinclair/typebox").TObject<{
        url: import("@sinclair/typebox").TString<"uri">;
        user: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
        password: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
        priority: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        weight: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
        stallTimeout: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TNumber>;
    }>>;
}>, import("@sinclair/typebox").TObject<{
    gasStations: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TArray<import("@sinclair/typebox").TString<string>>>;
    gasPriceInitialBoostPercent: import("@sinclair/typebox").TInteger;
    gasPriceReplacementBumpPercent: import("@sinclair/typebox").TInteger;
    gasPriceMaximum: import("@sinclair/typebox").TString<string>;
    gasPriceMinimum: import("@sinclair/typebox").TString<string>;
    gasPriceMaxIncreaseScalar: import("@sinclair/typebox").TInteger;
    hardcodedGasPrice: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TString<string>>;
    gasLimitInflation: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    confirmationTimeout: import("@sinclair/typebox").TInteger;
    confirmations: import("@sinclair/typebox").TInteger;
    maxProviderCPS: import("@sinclair/typebox").TInteger;
    syncProvidersInterval: import("@sinclair/typebox").TInteger;
    quorum: import("@sinclair/typebox").TOptional<import("@sinclair/typebox").TInteger>;
    debug_logRpcCalls: import("@sinclair/typebox").TBoolean;
}>]>>;
export type TransactionServiceConfig = Static<typeof TransactionServiceConfigSchema>;
export declare const validateTransactionServiceConfig: (_config: any) => TransactionServiceConfig;
export declare const DEFAULT_CHAIN_CONFIG: CoreChainConfig;
export declare const DEFAULT_CHAIN_CONFIG_VALUE_MINS: {
    gasPriceMaxIncreaseScalar: number;
    gasPriceReplacementBumpPercent: number;
    gasLimitInflation: number;
};
export {};
//# sourceMappingURL=config.d.ts.map