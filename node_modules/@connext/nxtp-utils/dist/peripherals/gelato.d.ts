import { BigNumber } from "ethers";
import { Logger } from "../logging/logger";
export declare const GELATO_SERVER = "https://relay.gelato.digital";
export declare const GELATO_RELAYER_ADDRESS = "0xaBcC9b596420A9E9172FD5938620E265a0f9Df92";
export declare const getGelatoEstimatedFee: (_chainId: number, paymentToken: string, gasLimit: number, isHighPriority: boolean, logger?: Logger) => Promise<BigNumber>;
/**
 * Get the conversion rate from the native token to the requested token
 * @param _chainId - The Id of chain where the conversion rate is estimated
 * @param to - The token address in which the conversion rate is estimated from the native token of the selected chain.
 *    If a value is not provided, it will default to the USDC address on the selected chain
 * @param logger - The logger instance
 * @returns The conversion rate in number
 */
export declare const getConversionRate: (_chainId: number, to?: string, logger?: Logger) => Promise<number>;
export declare const isOracleActive: (chainId: number) => Promise<boolean>;
export declare const getGelatoOracles: (logger?: Logger) => Promise<string[]>;
//# sourceMappingURL=gelato.d.ts.map