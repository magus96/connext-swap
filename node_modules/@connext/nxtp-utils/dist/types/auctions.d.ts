import { Static } from "@sinclair/typebox";
export declare const BidSchema: import("@sinclair/typebox").TObject<{
    routerVersion: import("@sinclair/typebox").TString<string>;
    transferId: import("@sinclair/typebox").TString<string>;
    origin: import("@sinclair/typebox").TString<string>;
    router: import("@sinclair/typebox").TString<string>;
    signatures: import("@sinclair/typebox").TRecord<import("@sinclair/typebox").TString<string>, import("@sinclair/typebox").TString<string>>;
}>;
export type Bid = Static<typeof BidSchema>;
export type BidSignatureDigest = {
    transferId: string;
    round: number;
    fee: string;
};
export declare const AuctionHeaderSchema: import("@sinclair/typebox").TObject<{
    timestamp: import("@sinclair/typebox").TString<string>;
    origin: import("@sinclair/typebox").TString<string>;
    destination: import("@sinclair/typebox").TString<string>;
}>;
export type AuctionHeader = Static<typeof AuctionHeaderSchema>;
export type Auction = AuctionHeader & {
    bids: {
        [router: string]: Bid;
    };
};
export type Status = {
    timestamp: string;
    status: string;
};
//# sourceMappingURL=auctions.d.ts.map