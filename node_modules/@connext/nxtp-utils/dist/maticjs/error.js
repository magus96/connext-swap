"use strict";
// custom error types for better error handling
Object.defineProperty(exports, "__esModule", { value: true });
exports.InfoError = exports.MaticJsErrorType = void 0;
var MaticJsErrorType;
(function (MaticJsErrorType) {
    MaticJsErrorType["BlockNotIncluded"] = "no_block_found";
    MaticJsErrorType["IncorrectTx"] = "incorrect_transaction";
    MaticJsErrorType["TxNotCheckpointed"] = "transaction_not_checkpointed";
})(MaticJsErrorType = exports.MaticJsErrorType || (exports.MaticJsErrorType = {}));
// custom errors for better error handling
// InfoError is thrown when the parameters received are valid but incorrect
class InfoError extends Error {
    constructor(type, message) {
        super(message);
        this.type = type;
    }
}
exports.InfoError = InfoError;
//# sourceMappingURL=error.js.map