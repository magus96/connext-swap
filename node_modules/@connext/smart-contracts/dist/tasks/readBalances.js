"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
const config_1 = require("hardhat/config");
exports.default = (0, config_1.task)("read-balances", "Read balances of accounts")
    .addOptionalParam("asset", "Transacting asset Id")
    .addOptionalParam("env", "Environment of contracts")
    .setAction(async ({ asset: _asset, env: _env }, hre) => {
    const accounts = await hre.ethers.getSigners();
    const asset = _asset ? _asset : ethers_1.constants.AddressZero;
    console.log(`Reading ${accounts.length} accounts`);
    console.log(`  Asset in question: ${asset}`);
    // Read balances
    const balances = new Map();
    for (let i = 0; i < accounts.length; i++) {
        let balance;
        if (asset === ethers_1.constants.AddressZero) {
            balance = await hre.ethers.provider.getBalance(accounts[i].address);
            console.log(`  Balance of ${accounts[i].address}: ${ethers_1.utils.formatEther(balance)}`);
        }
        else {
            const erc20 = await hre.ethers.getContractAt("TestERC20", asset, accounts[i]);
            balance = await erc20.balanceOf(accounts[i].address);
            console.log(`  Balance of ${accounts[i].address}: ${ethers_1.utils.formatUnits(balance)}`);
        }
        balances.set(accounts[i].address, balance);
    }
    return balances;
});
//# sourceMappingURL=readBalances.js.map