"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const ethers_1 = require("ethers");
const config_1 = require("hardhat/config");
const utils_1 = require("../src/utils");
exports.default = (0, config_1.task)("set-direct-price", "Set price directly")
    .addParam("token", "Token addresses")
    .addParam("price", "Direct price")
    .addOptionalParam("env", "Environment of contracts")
    .setAction(async ({ token, price, env: _env }, { deployments, ethers }) => {
    let { deployer } = await ethers.getNamedSigners();
    if (!deployer) {
        [deployer] = await ethers.getUnnamedSigners();
    }
    const env = (0, utils_1.mustGetEnv)(_env);
    console.log("env:", env);
    console.log("token: ", token);
    console.log("price: ", price);
    const cxtPriceOracleDeployment = await deployments.get((0, utils_1.getDeploymentName)("ConnextPriceOracle", env));
    console.log("PriceOracle: ", cxtPriceOracleDeployment.address);
    const priceOracle = new ethers_1.Contract(cxtPriceOracleDeployment.address, cxtPriceOracleDeployment.abi, deployer);
    const tx = await priceOracle.setDirectPrice(token, price);
    console.log("setDirectPrice tx: ", tx);
    const receipt = await tx.wait();
    console.log("setDirectPrice tx mined: ", receipt.transactionHash);
});
//# sourceMappingURL=setDirectPrice.js.map