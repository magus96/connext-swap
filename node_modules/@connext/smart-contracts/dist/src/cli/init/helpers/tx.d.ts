import { providers } from "ethers";
import { Deployment } from "../../types";
import { CallSchema } from "./types";
type WaitForTxArguments = {
    deployment: Deployment;
    tx: providers.TransactionResponse;
    name: string;
    checkResult?: {
        method: () => Promise<any>;
        desired?: any;
    };
    chainData?: any;
};
export declare const waitForTx: (args: WaitForTxArguments) => Promise<{
    receipt: providers.TransactionReceipt;
    result?: any;
}>;
export declare const updateIfNeeded: <T>(schema: CallSchema<T>) => Promise<void>;
export declare const assertValue: <T>(schema: CallSchema<T>) => Promise<void>;
export declare const getValue: <T>(schema: CallSchema<T>) => Promise<T>;
export {};
//# sourceMappingURL=tx.d.ts.map