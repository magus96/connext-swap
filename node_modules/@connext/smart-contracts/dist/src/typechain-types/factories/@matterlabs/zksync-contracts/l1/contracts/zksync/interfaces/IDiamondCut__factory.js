"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IDiamondCut__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "facet",
                        type: "address",
                    },
                    {
                        internalType: "enum Diamond.Action",
                        name: "action",
                        type: "uint8",
                    },
                    {
                        internalType: "bool",
                        name: "isFreezable",
                        type: "bool",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "selectors",
                        type: "bytes4[]",
                    },
                ],
                indexed: false,
                internalType: "struct Diamond.FacetCut[]",
                name: "_facetCuts",
                type: "tuple[]",
            },
            {
                indexed: false,
                internalType: "address",
                name: "_initAddress",
                type: "address",
            },
        ],
        name: "DiamondCutProposal",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [],
        name: "DiamondCutProposalCancelation",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "facet",
                                type: "address",
                            },
                            {
                                internalType: "enum Diamond.Action",
                                name: "action",
                                type: "uint8",
                            },
                            {
                                internalType: "bool",
                                name: "isFreezable",
                                type: "bool",
                            },
                            {
                                internalType: "bytes4[]",
                                name: "selectors",
                                type: "bytes4[]",
                            },
                        ],
                        internalType: "struct Diamond.FacetCut[]",
                        name: "facetCuts",
                        type: "tuple[]",
                    },
                    {
                        internalType: "address",
                        name: "initAddress",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "initCalldata",
                        type: "bytes",
                    },
                ],
                indexed: false,
                internalType: "struct Diamond.DiamondCutData",
                name: "_diamondCut",
                type: "tuple",
            },
        ],
        name: "DiamondCutProposalExecution",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "address",
                name: "_address",
                type: "address",
            },
        ],
        name: "EmergencyDiamondCutApproved",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [],
        name: "EmergencyFreeze",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [],
        name: "Unfreeze",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_diamondCutHash",
                type: "bytes32",
            },
        ],
        name: "approveEmergencyDiamondCutAsSecurityCouncilMember",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "cancelDiamondCutProposal",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "emergencyFreezeDiamond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "facet",
                                type: "address",
                            },
                            {
                                internalType: "enum Diamond.Action",
                                name: "action",
                                type: "uint8",
                            },
                            {
                                internalType: "bool",
                                name: "isFreezable",
                                type: "bool",
                            },
                            {
                                internalType: "bytes4[]",
                                name: "selectors",
                                type: "bytes4[]",
                            },
                        ],
                        internalType: "struct Diamond.FacetCut[]",
                        name: "facetCuts",
                        type: "tuple[]",
                    },
                    {
                        internalType: "address",
                        name: "initAddress",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "initCalldata",
                        type: "bytes",
                    },
                ],
                internalType: "struct Diamond.DiamondCutData",
                name: "_diamondCut",
                type: "tuple",
            },
        ],
        name: "executeDiamondCutProposal",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "facet",
                        type: "address",
                    },
                    {
                        internalType: "enum Diamond.Action",
                        name: "action",
                        type: "uint8",
                    },
                    {
                        internalType: "bool",
                        name: "isFreezable",
                        type: "bool",
                    },
                    {
                        internalType: "bytes4[]",
                        name: "selectors",
                        type: "bytes4[]",
                    },
                ],
                internalType: "struct Diamond.FacetCut[]",
                name: "_facetCuts",
                type: "tuple[]",
            },
            {
                internalType: "address",
                name: "_initAddress",
                type: "address",
            },
        ],
        name: "proposeDiamondCut",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "unfreezeDiamond",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IDiamondCut__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IDiamondCut__factory = IDiamondCut__factory;
IDiamondCut__factory.abi = _abi;
//# sourceMappingURL=IDiamondCut__factory.js.map