import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IKnownCodesStorage, IKnownCodesStorageInterface } from "../../../../../../@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IKnownCodesStorage";
export declare class IKnownCodesStorage__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bytecodeHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bool";
            readonly name: "sendBytecodeToL1";
            readonly type: "bool";
        }];
        readonly name: "MarkedAsKnown";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_hash";
            readonly type: "bytes32";
        }];
        readonly name: "getMarker";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bool";
            readonly name: "_shouldSendToL1";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes32[]";
            readonly name: "_hashes";
            readonly type: "bytes32[]";
        }];
        readonly name: "markFactoryDeps";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IKnownCodesStorageInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IKnownCodesStorage;
}
//# sourceMappingURL=IKnownCodesStorage__factory.d.ts.map