import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IImmutableSimulator, IImmutableSimulatorInterface } from "../../../../../../@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IImmutableSimulator";
export declare class IImmutableSimulator__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_dest";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_index";
            readonly type: "uint256";
        }];
        readonly name: "getImmutable";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_dest";
            readonly type: "address";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256";
                readonly name: "index";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "value";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct ImmutableData[]";
            readonly name: "immutables";
            readonly type: "tuple[]";
        }];
        readonly name: "setImmutables";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IImmutableSimulatorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IImmutableSimulator;
}
//# sourceMappingURL=IImmutableSimulator__factory.d.ts.map