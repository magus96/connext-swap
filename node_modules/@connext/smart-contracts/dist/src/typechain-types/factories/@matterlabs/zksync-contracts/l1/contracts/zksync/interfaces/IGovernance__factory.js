"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IGovernance__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "bool",
                name: "isPorterAvailable",
                type: "bool",
            },
        ],
        name: "IsPorterAvailableStatusUpdate",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "newGovernor",
                type: "address",
            },
        ],
        name: "NewGovernor",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "previousBytecodeHash",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "newBytecodeHash",
                type: "bytes32",
            },
        ],
        name: "NewL2BootloaderBytecodeHash",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "bytes32",
                name: "previousBytecodeHash",
                type: "bytes32",
            },
            {
                indexed: true,
                internalType: "bytes32",
                name: "newBytecodeHash",
                type: "bytes32",
            },
        ],
        name: "NewL2DefaultAccountBytecodeHash",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "oldPendingGovernor",
                type: "address",
            },
            {
                indexed: true,
                internalType: "address",
                name: "newPendingGovernor",
                type: "address",
            },
        ],
        name: "NewPendingGovernor",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "validatorAddress",
                type: "address",
            },
            {
                indexed: false,
                internalType: "bool",
                name: "isActive",
                type: "bool",
            },
        ],
        name: "ValidatorStatusUpdate",
        type: "event",
    },
    {
        inputs: [],
        name: "acceptGovernor",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_l2BootloaderBytecodeHash",
                type: "bytes32",
            },
        ],
        name: "setL2BootloaderBytecodeHash",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bytes32",
                name: "_l2DefaultAccountBytecodeHash",
                type: "bytes32",
            },
        ],
        name: "setL2DefaultAccountBytecodeHash",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_newPendingGovernor",
                type: "address",
            },
        ],
        name: "setPendingGovernor",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "bool",
                name: "_isPorterAvailable",
                type: "bool",
            },
        ],
        name: "setPorterAvailability",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "_validator",
                type: "address",
            },
            {
                internalType: "bool",
                name: "_active",
                type: "bool",
            },
        ],
        name: "setValidator",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
class IGovernance__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.IGovernance__factory = IGovernance__factory;
IGovernance__factory.abi = _abi;
//# sourceMappingURL=IGovernance__factory.js.map