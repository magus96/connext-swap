import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IAccountCodeStorage, IAccountCodeStorageInterface } from "../../../../../../@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IAccountCodeStorage";
export declare class IAccountCodeStorage__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_input";
            readonly type: "uint256";
        }];
        readonly name: "getCodeHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "codeHash";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_input";
            readonly type: "uint256";
        }];
        readonly name: "getCodeSize";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "codeSize";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_address";
            readonly type: "address";
        }];
        readonly name: "getRawCodeHash";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "codeHash";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_address";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_hash";
            readonly type: "bytes32";
        }];
        readonly name: "storeCodeHash";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IAccountCodeStorageInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IAccountCodeStorage;
}
//# sourceMappingURL=IAccountCodeStorage__factory.d.ts.map