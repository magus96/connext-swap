import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IGovernance, IGovernanceInterface } from "../../../../../../../@matterlabs/zksync-contracts/l1/contracts/zksync/interfaces/IGovernance";
export declare class IGovernance__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "isPorterAvailable";
            readonly type: "bool";
        }];
        readonly name: "IsPorterAvailableStatusUpdate";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newGovernor";
            readonly type: "address";
        }];
        readonly name: "NewGovernor";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "previousBytecodeHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "newBytecodeHash";
            readonly type: "bytes32";
        }];
        readonly name: "NewL2BootloaderBytecodeHash";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "previousBytecodeHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "newBytecodeHash";
            readonly type: "bytes32";
        }];
        readonly name: "NewL2DefaultAccountBytecodeHash";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "oldPendingGovernor";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newPendingGovernor";
            readonly type: "address";
        }];
        readonly name: "NewPendingGovernor";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "validatorAddress";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "bool";
            readonly name: "isActive";
            readonly type: "bool";
        }];
        readonly name: "ValidatorStatusUpdate";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "acceptGovernor";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_l2BootloaderBytecodeHash";
            readonly type: "bytes32";
        }];
        readonly name: "setL2BootloaderBytecodeHash";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_l2DefaultAccountBytecodeHash";
            readonly type: "bytes32";
        }];
        readonly name: "setL2DefaultAccountBytecodeHash";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_newPendingGovernor";
            readonly type: "address";
        }];
        readonly name: "setPendingGovernor";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bool";
            readonly name: "_isPorterAvailable";
            readonly type: "bool";
        }];
        readonly name: "setPorterAvailability";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_validator";
            readonly type: "address";
        }, {
            readonly internalType: "bool";
            readonly name: "_active";
            readonly type: "bool";
        }];
        readonly name: "setValidator";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IGovernanceInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IGovernance;
}
//# sourceMappingURL=IGovernance__factory.d.ts.map