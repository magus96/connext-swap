import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IContractDeployer, IContractDeployerInterface } from "../../../../../../@matterlabs/zksync-contracts/l2/system-contracts/interfaces/IContractDeployer";
export declare class IContractDeployer__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "deployerAddress";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "bytes32";
            readonly name: "bytecodeHash";
            readonly type: "bytes32";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "contractAddress";
            readonly type: "address";
        }];
        readonly name: "ContractDeployed";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_bytecodeHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_input";
            readonly type: "bytes";
        }];
        readonly name: "create";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "newAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "constructorRevertData";
            readonly type: "bytes";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_bytecodeHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_input";
            readonly type: "bytes";
        }];
        readonly name: "create2";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "newAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "constructorRevertData";
            readonly type: "bytes";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_bytecodeHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_input";
            readonly type: "bytes";
        }];
        readonly name: "create2Account";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "newAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "constructorRevertData";
            readonly type: "bytes";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_bytecodeHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_input";
            readonly type: "bytes";
        }];
        readonly name: "createAccount";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "newAddress";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "constructorRevertData";
            readonly type: "bytes";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_sender";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_senderNonce";
            readonly type: "uint256";
        }];
        readonly name: "getNewAddressCreate";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "newAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_sender";
            readonly type: "address";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_bytecodeHash";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_salt";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_input";
            readonly type: "bytes";
        }];
        readonly name: "getNewAddressCreate2";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "newAddress";
            readonly type: "address";
        }];
        readonly stateMutability: "pure";
        readonly type: "function";
    }];
    static createInterface(): IContractDeployerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IContractDeployer;
}
//# sourceMappingURL=IContractDeployer__factory.d.ts.map