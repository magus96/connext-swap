import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IExecutor, IExecutorInterface } from "../../../../../../../@matterlabs/zksync-contracts/l1/contracts/zksync/interfaces/IExecutor";
export declare class IExecutor__factory {
    static readonly abi: readonly [{
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly name: "BlockCommit";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint256";
            readonly name: "blockNumber";
            readonly type: "uint256";
        }];
        readonly name: "BlockExecution";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "totalBlocksCommitted";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "totalBlocksVerified";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "totalBlocksExecuted";
            readonly type: "uint256";
        }];
        readonly name: "BlocksRevert";
        readonly type: "event";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint64";
                readonly name: "blockNumber";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "indexRepeatedStorageChanges";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "numberOfLayer1Txs";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "priorityOperationsHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "l2LogsTreeRoot";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "timestamp";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "commitment";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IExecutor.StoredBlockInfo";
            readonly name: "_lastCommittedBlockData";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint64";
                readonly name: "blockNumber";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "timestamp";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "indexRepeatedStorageChanges";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "newStateRoot";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint16";
                readonly name: "ergsPerCodeDecommittmentWord";
                readonly type: "uint16";
            }, {
                readonly internalType: "uint256";
                readonly name: "numberOfLayer1Txs";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "l2LogsTreeRoot";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "priorityOperationsHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes";
                readonly name: "initialStorageChanges";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "repeatedStorageChanges";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes";
                readonly name: "l2Logs";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes[]";
                readonly name: "l2ArbitraryLengthMessages";
                readonly type: "bytes[]";
            }, {
                readonly internalType: "bytes[]";
                readonly name: "factoryDeps";
                readonly type: "bytes[]";
            }];
            readonly internalType: "struct IExecutor.CommitBlockInfo[]";
            readonly name: "_newBlocksData";
            readonly type: "tuple[]";
        }];
        readonly name: "commitBlocks";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint64";
                readonly name: "blockNumber";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "indexRepeatedStorageChanges";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "numberOfLayer1Txs";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "priorityOperationsHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "l2LogsTreeRoot";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "timestamp";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "commitment";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IExecutor.StoredBlockInfo[]";
            readonly name: "_blocksData";
            readonly type: "tuple[]";
        }];
        readonly name: "executeBlocks";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "uint64";
                readonly name: "blockNumber";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "indexRepeatedStorageChanges";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "numberOfLayer1Txs";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "priorityOperationsHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "l2LogsTreeRoot";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "timestamp";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "commitment";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IExecutor.StoredBlockInfo";
            readonly name: "_prevBlock";
            readonly type: "tuple";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint64";
                readonly name: "blockNumber";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "blockHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "indexRepeatedStorageChanges";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint256";
                readonly name: "numberOfLayer1Txs";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "priorityOperationsHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "l2LogsTreeRoot";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint256";
                readonly name: "timestamp";
                readonly type: "uint256";
            }, {
                readonly internalType: "bytes32";
                readonly name: "commitment";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct IExecutor.StoredBlockInfo[]";
            readonly name: "_committedBlocks";
            readonly type: "tuple[]";
        }, {
            readonly components: readonly [{
                readonly internalType: "uint256[]";
                readonly name: "recurisiveAggregationInput";
                readonly type: "uint256[]";
            }, {
                readonly internalType: "uint256[]";
                readonly name: "serializedProof";
                readonly type: "uint256[]";
            }];
            readonly internalType: "struct IExecutor.ProofInput";
            readonly name: "_proof";
            readonly type: "tuple";
        }];
        readonly name: "proveBlocks";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_blocksToRevert";
            readonly type: "uint256";
        }];
        readonly name: "revertBlocks";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IExecutorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IExecutor;
}
//# sourceMappingURL=IExecutor__factory.d.ts.map