import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ISpokeConnector, ISpokeConnectorInterface } from "../../../../../../contracts/core/connext/helpers/RelayerProxy.sol/ISpokeConnector";
export declare class ISpokeConnector__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "message";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes32[32]";
                readonly name: "path";
                readonly type: "bytes32[32]";
            }, {
                readonly internalType: "uint256";
                readonly name: "index";
                readonly type: "uint256";
            }];
            readonly internalType: "struct ISpokeConnector.Proof[]";
            readonly name: "_proofs";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_aggregateRoot";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32[32]";
            readonly name: "_aggregatePath";
            readonly type: "bytes32[32]";
        }, {
            readonly internalType: "uint256";
            readonly name: "_aggregateIndex";
            readonly type: "uint256";
        }];
        readonly name: "proveAndProcess";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_encodedData";
            readonly type: "bytes";
        }];
        readonly name: "send";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): ISpokeConnectorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ISpokeConnector;
}
//# sourceMappingURL=ISpokeConnector__factory.d.ts.map