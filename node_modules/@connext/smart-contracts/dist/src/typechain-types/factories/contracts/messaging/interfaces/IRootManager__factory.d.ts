import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IRootManager, IRootManagerInterface } from "../../../../contracts/messaging/interfaces/IRootManager";
export declare class IRootManager__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_domain";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_outbound";
            readonly type: "bytes32";
        }];
        readonly name: "aggregate";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address[]";
            readonly name: "_connectors";
            readonly type: "address[]";
        }, {
            readonly internalType: "uint256[]";
            readonly name: "_fees";
            readonly type: "uint256[]";
        }, {
            readonly internalType: "bytes[]";
            readonly name: "_encodedData";
            readonly type: "bytes[]";
        }];
        readonly name: "propagate";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): IRootManagerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IRootManager;
}
//# sourceMappingURL=IRootManager__factory.d.ts.map