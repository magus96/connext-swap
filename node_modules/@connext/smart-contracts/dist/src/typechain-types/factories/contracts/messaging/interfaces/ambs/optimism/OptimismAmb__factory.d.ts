import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { OptimismAmb, OptimismAmbInterface } from "../../../../../../contracts/messaging/interfaces/ambs/optimism/OptimismAmb";
export declare class OptimismAmb__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_target";
            readonly type: "address";
        }, {
            readonly internalType: "bytes";
            readonly name: "_message";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint32";
            readonly name: "_gasLimit";
            readonly type: "uint32";
        }];
        readonly name: "sendMessage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "xDomainMessageSender";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): OptimismAmbInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): OptimismAmb;
}
//# sourceMappingURL=OptimismAmb__factory.d.ts.map