import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IArbitrumRollup, IArbitrumRollupInterface } from "../../../../../../contracts/messaging/interfaces/ambs/arbitrum/IArbitrumRollup";
export declare class IArbitrumRollup__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint64";
            readonly name: "nodeNum";
            readonly type: "uint64";
        }];
        readonly name: "getNode";
        readonly outputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes32";
                readonly name: "stateHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "challengeHash";
                readonly type: "bytes32";
            }, {
                readonly internalType: "bytes32";
                readonly name: "confirmData";
                readonly type: "bytes32";
            }, {
                readonly internalType: "uint64";
                readonly name: "prevNum";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "deadlineBlock";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "noChildConfirmedBeforeBlock";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "stakerCount";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "childStakerCount";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "firstChildBlock";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "latestChildNumber";
                readonly type: "uint64";
            }, {
                readonly internalType: "uint64";
                readonly name: "createdAtBlock";
                readonly type: "uint64";
            }, {
                readonly internalType: "bytes32";
                readonly name: "nodeHash";
                readonly type: "bytes32";
            }];
            readonly internalType: "struct Node";
            readonly name: "";
            readonly type: "tuple";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): IArbitrumRollupInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IArbitrumRollup;
}
//# sourceMappingURL=IArbitrumRollup__factory.d.ts.map