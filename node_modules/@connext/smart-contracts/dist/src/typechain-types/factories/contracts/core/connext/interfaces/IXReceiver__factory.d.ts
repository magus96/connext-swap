import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IXReceiver, IXReceiverInterface } from "../../../../../contracts/core/connext/interfaces/IXReceiver";
export declare class IXReceiver__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "_transferId";
            readonly type: "bytes32";
        }, {
            readonly internalType: "uint256";
            readonly name: "_amount";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "_asset";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_originSender";
            readonly type: "address";
        }, {
            readonly internalType: "uint32";
            readonly name: "_origin";
            readonly type: "uint32";
        }, {
            readonly internalType: "bytes";
            readonly name: "_callData";
            readonly type: "bytes";
        }];
        readonly name: "xReceive";
        readonly outputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "";
            readonly type: "bytes";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }];
    static createInterface(): IXReceiverInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IXReceiver;
}
//# sourceMappingURL=IXReceiver__factory.d.ts.map