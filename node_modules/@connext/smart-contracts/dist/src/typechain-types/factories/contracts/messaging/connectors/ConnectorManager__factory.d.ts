import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ConnectorManager, ConnectorManagerInterface } from "../../../../contracts/messaging/connectors/ConnectorManager";
export declare class ConnectorManager__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "home";
        readonly outputs: readonly [{
            readonly internalType: "contract IOutbox";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_potentialReplica";
            readonly type: "address";
        }];
        readonly name: "isReplica";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "localDomain";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): ConnectorManagerInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): ConnectorManager;
}
//# sourceMappingURL=ConnectorManager__factory.d.ts.map