import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IArbitrumInbox, IArbitrumInboxInterface } from "../../../../../../contracts/messaging/interfaces/ambs/arbitrum/IArbitrumInbox";
export declare class IArbitrumInbox__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "destAddr";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "arbTxCallValue";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "maxSubmissionCost";
            readonly type: "uint256";
        }, {
            readonly internalType: "address";
            readonly name: "submissionRefundAddress";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "valueRefundAddress";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "maxGas";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "gasPriceBid";
            readonly type: "uint256";
        }, {
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }];
        readonly name: "createRetryableTicket";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
        readonly type: "function";
    }];
    static createInterface(): IArbitrumInboxInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): IArbitrumInbox;
}
//# sourceMappingURL=IArbitrumInbox__factory.d.ts.map