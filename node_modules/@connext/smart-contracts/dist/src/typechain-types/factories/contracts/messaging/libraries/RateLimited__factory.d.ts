import { Signer } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { RateLimited, RateLimitedInterface } from "../../../../contracts/messaging/libraries/RateLimited";
export declare class RateLimited__factory {
    static readonly abi: readonly [{
        readonly inputs: readonly [];
        readonly name: "RateLimited__rateLimited_messageSendRateExceeded";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "updater";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "newRateLimit";
            readonly type: "uint256";
        }];
        readonly name: "SendRateLimitUpdated";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "lastSentBlock";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "rateLimitBlocks";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }];
    static createInterface(): RateLimitedInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): RateLimited;
}
//# sourceMappingURL=RateLimited__factory.d.ts.map