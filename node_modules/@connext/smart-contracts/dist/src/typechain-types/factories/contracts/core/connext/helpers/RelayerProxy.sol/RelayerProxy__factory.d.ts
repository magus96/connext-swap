import { Signer, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type { RelayerProxy, RelayerProxyInterface } from "../../../../../../contracts/core/connext/helpers/RelayerProxy.sol/RelayerProxy";
type RelayerProxyConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class RelayerProxy__factory extends ContractFactory {
    constructor(...args: RelayerProxyConstructorParams);
    deploy(_connext: PromiseOrValue<string>, _spokeConnector: PromiseOrValue<string>, _gelatoRelayer: PromiseOrValue<string>, _feeCollector: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<RelayerProxy>;
    getDeployTransaction(_connext: PromiseOrValue<string>, _spokeConnector: PromiseOrValue<string>, _gelatoRelayer: PromiseOrValue<string>, _feeCollector: PromiseOrValue<string>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): RelayerProxy;
    connect(signer: Signer): RelayerProxy__factory;
    static readonly bytecode = "";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_connext";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_spokeConnector";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_gelatoRelayer";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_feeCollector";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__onlyOwner_notOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__onlyProposed_notProposedOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__proposeNewOwner_invalidProposal";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__proposeNewOwner_noOwnershipChange";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__renounceOwnership_invalidProposal";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__renounceOwnership_noProposal";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "updated";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previous";
            readonly type: "address";
        }];
        readonly name: "ConnextChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "updated";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previous";
            readonly type: "address";
        }];
        readonly name: "FeeCollectorChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "FundsDeducted";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "amount";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "balance";
            readonly type: "uint256";
        }];
        readonly name: "FundsReceived";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "updated";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previous";
            readonly type: "address";
        }];
        readonly name: "GelatoRelayerChanged";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "proposedOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipProposed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "relayer";
            readonly type: "address";
        }];
        readonly name: "RelayerAdded";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "relayer";
            readonly type: "address";
        }];
        readonly name: "RelayerRemoved";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "updated";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previous";
            readonly type: "address";
        }];
        readonly name: "SpokeConnectorChanged";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "acceptProposedOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_relayer";
            readonly type: "address";
        }];
        readonly name: "addRelayer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly name: "allowedRelayer";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "connext";
        readonly outputs: readonly [{
            readonly internalType: "contract IConnext";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "delay";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly components: readonly [{
                    readonly internalType: "uint32";
                    readonly name: "originDomain";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "destinationDomain";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "uint32";
                    readonly name: "canonicalDomain";
                    readonly type: "uint32";
                }, {
                    readonly internalType: "address";
                    readonly name: "to";
                    readonly type: "address";
                }, {
                    readonly internalType: "address";
                    readonly name: "delegate";
                    readonly type: "address";
                }, {
                    readonly internalType: "bool";
                    readonly name: "receiveLocal";
                    readonly type: "bool";
                }, {
                    readonly internalType: "bytes";
                    readonly name: "callData";
                    readonly type: "bytes";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "slippage";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "address";
                    readonly name: "originSender";
                    readonly type: "address";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "bridgedAmt";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "normalizedIn";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "uint256";
                    readonly name: "nonce";
                    readonly type: "uint256";
                }, {
                    readonly internalType: "bytes32";
                    readonly name: "canonicalId";
                    readonly type: "bytes32";
                }];
                readonly internalType: "struct TransferInfo";
                readonly name: "params";
                readonly type: "tuple";
            }, {
                readonly internalType: "address[]";
                readonly name: "routers";
                readonly type: "address[]";
            }, {
                readonly internalType: "bytes[]";
                readonly name: "routerSignatures";
                readonly type: "bytes[]";
            }, {
                readonly internalType: "address";
                readonly name: "sequencer";
                readonly type: "address";
            }, {
                readonly internalType: "bytes";
                readonly name: "sequencerSignature";
                readonly type: "bytes";
            }];
            readonly internalType: "struct ExecuteArgs";
            readonly name: "_args";
            readonly type: "tuple";
        }, {
            readonly internalType: "uint256";
            readonly name: "_fee";
            readonly type: "uint256";
        }];
        readonly name: "execute";
        readonly outputs: readonly [{
            readonly internalType: "bytes32";
            readonly name: "transferId";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "feeCollector";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "gelatoRelayer";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newlyProposed";
            readonly type: "address";
        }];
        readonly name: "proposeNewOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "proposed";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "proposedTimestamp";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly components: readonly [{
                readonly internalType: "bytes";
                readonly name: "message";
                readonly type: "bytes";
            }, {
                readonly internalType: "bytes32[32]";
                readonly name: "path";
                readonly type: "bytes32[32]";
            }, {
                readonly internalType: "uint256";
                readonly name: "index";
                readonly type: "uint256";
            }];
            readonly internalType: "struct ISpokeConnector.Proof[]";
            readonly name: "_proofs";
            readonly type: "tuple[]";
        }, {
            readonly internalType: "bytes32";
            readonly name: "_aggregateRoot";
            readonly type: "bytes32";
        }, {
            readonly internalType: "bytes32[32]";
            readonly name: "_aggregatePath";
            readonly type: "bytes32[32]";
        }, {
            readonly internalType: "uint256";
            readonly name: "_aggregateIndex";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_fee";
            readonly type: "uint256";
        }];
        readonly name: "proveAndProcess";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_relayer";
            readonly type: "address";
        }];
        readonly name: "removeRelayer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounced";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_encodedData";
            readonly type: "bytes";
        }, {
            readonly internalType: "uint256";
            readonly name: "_messageFee";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_relayerFee";
            readonly type: "uint256";
        }];
        readonly name: "send";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_connext";
            readonly type: "address";
        }];
        readonly name: "setConnext";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_feeCollector";
            readonly type: "address";
        }];
        readonly name: "setFeeCollector";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_gelatoRelayer";
            readonly type: "address";
        }];
        readonly name: "setGelatoRelayer";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_spokeConnector";
            readonly type: "address";
        }];
        readonly name: "setSpokeConnector";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "spokeConnector";
        readonly outputs: readonly [{
            readonly internalType: "contract ISpokeConnector";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "withdraw";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): RelayerProxyInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): RelayerProxy;
}
export {};
//# sourceMappingURL=RelayerProxy__factory.d.ts.map