import { Signer, ContractFactory, BigNumberish, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type { MultichainHubConnector, MultichainHubConnectorInterface } from "../../../../../contracts/messaging/connectors/multichain/MultichainHubConnector";
type MultichainHubConnectorConstructorParams = [signer?: Signer] | ConstructorParameters<typeof ContractFactory>;
export declare class MultichainHubConnector__factory extends ContractFactory {
    constructor(...args: MultichainHubConnectorConstructorParams);
    deploy(_domain: PromiseOrValue<BigNumberish>, _mirrorDomain: PromiseOrValue<BigNumberish>, _amb: PromiseOrValue<string>, _rootManager: PromiseOrValue<string>, _mirrorConnector: PromiseOrValue<string>, _mirrorChainId: PromiseOrValue<BigNumberish>, _gasCap: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): Promise<MultichainHubConnector>;
    getDeployTransaction(_domain: PromiseOrValue<BigNumberish>, _mirrorDomain: PromiseOrValue<BigNumberish>, _amb: PromiseOrValue<string>, _rootManager: PromiseOrValue<string>, _mirrorConnector: PromiseOrValue<string>, _mirrorChainId: PromiseOrValue<BigNumberish>, _gasCap: PromiseOrValue<BigNumberish>, overrides?: Overrides & {
        from?: PromiseOrValue<string>;
    }): TransactionRequest;
    attach(address: string): MultichainHubConnector;
    connect(signer: Signer): MultichainHubConnector__factory;
    static readonly bytecode = "0x6101406040523480156200001257600080fd5b5060405162001686380380620016868339810160408190526200003591620003d7565b848282808a8a858a8a84848484846200004e3362000296565b8463ffffffff16600003620000995760405162461bcd60e51b815260206004820152600c60248201526b32b6b83a3c903237b6b0b4b760a11b60448201526064015b60405180910390fd5b6001600160a01b038216620000e55760405162461bcd60e51b815260206004820152601160248201527032b6b83a3c903937b7ba26b0b730b3b2b960791b604482015260640162000090565b63ffffffff8086166080526001600160a01b0380851660a05283811660c05290851660e0528116156200011d576200011d81620002fb565b604080516001600160a01b0385811682528481166020830152831681830152905163ffffffff86811692908816917f4f9c27c2fe3f84576ea469d367d044da53c45e951617e8389f2b5ed8db9d25f09181900360600190a35050505050505050505062000190816200036460201b60201c565b5081600003620001d45760405162461bcd60e51b815260206004820152600e60248201526d085b5a5c9c9bdc90da185a5b925960921b604482015260640162000090565b826001600160a01b031663c34c08e56040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000213573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200023991906200045a565b6001600160a01b0316610100819052620002825760405162461bcd60e51b815260206004820152600960248201526810b2bc32b1baba37b960b91b604482015260640162000090565b5061012052506200047f9650505050505050565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b805163ffffffff81168114620003ba57600080fd5b919050565b80516001600160a01b0381168114620003ba57600080fd5b600080600080600080600060e0888a031215620003f357600080fd5b620003fe88620003a5565b96506200040e60208901620003a5565b95506200041e60408901620003bf565b94506200042e60608901620003bf565b93506200043e60808901620003bf565b925060a0880151915060c0880151905092959891949750929550565b6000602082840312156200046d57600080fd5b6200047882620003bf565b9392505050565b60805160a05160c05160e05161010051610120516111786200050e60003960008181610b4b01528181610c3e0152610db1015260008181610cb00152610d0e015260008181610136015261089301526000818161022c015281816103fa015261086c0152600081816103ad015281816104af015281816107a30152610a7e015260006101d801526111786000f3fe6080604052600436106101185760003560e01c80637850b020116100a0578063cc39428311610064578063cc39428314610332578063d1851c9214610352578063d232c22014610370578063d69f9d611461039b578063db1b7659146103cf57600080fd5b80637850b020146102915780638da5cb5b146102b15780639abaf479146102cf578063b1f8100d146102fd578063c5b350df1461031d57600080fd5b806352a9674b116100e757806352a9674b146101c65780635bd11efc146101fa5780635f61e3ec1461021a5780636a42b8f814610266578063715018a61461027c57600080fd5b806314168416146101245780633cf52ffb1461017257806348e6fa23146101915780634ff746f6146101a657600080fd5b3661011f57005b600080fd5b34801561013057600080fd5b506101587f000000000000000000000000000000000000000000000000000000000000000081565b60405163ffffffff90911681526020015b60405180910390f35b34801561017e57600080fd5b506002545b604051908152602001610169565b6101a461019f366004610e95565b6103ef565b005b3480156101b257600080fd5b506101a46101c1366004610ef9565b6104a4565b3480156101d257600080fd5b506101587f000000000000000000000000000000000000000000000000000000000000000081565b34801561020657600080fd5b506101a4610215366004610f4b565b61054a565b34801561022657600080fd5b5061024e7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610169565b34801561027257600080fd5b5062093a80610183565b34801561028857600080fd5b506101a4610581565b34801561029d57600080fd5b506101a46102ac366004610f6f565b610635565b3480156102bd57600080fd5b506000546001600160a01b031661024e565b3480156102db57600080fd5b506102ef6102ea366004610ef9565b610669565b604051610169929190610fce565b34801561030957600080fd5b506101a4610318366004610f4b565b61067b565b34801561032957600080fd5b506101a4610719565b34801561033e57600080fd5b5060035461024e906001600160a01b031681565b34801561035e57600080fd5b506001546001600160a01b031661024e565b34801561037c57600080fd5b506000546001600160a01b0316155b6040519015158152602001610169565b3480156103a757600080fd5b5061024e7f000000000000000000000000000000000000000000000000000000000000000081565b3480156103db57600080fd5b5061038b6103ea366004610f4b565b610789565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461045b5760405162461bcd60e51b815260206004820152600c60248201526b10b937b7ba26b0b730b3b2b960a11b60448201526064015b60405180910390fd5b610465828261079a565b7fdcaa37a042a0087de79018c629bbd29cee82ca80bd9be394e1696bf9e935507782823360405161049893929190610fe9565b60405180910390a15050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146105055760405162461bcd60e51b81526004016104529060208082526004908201526310a0a6a160e11b604082015260600190565b61050e816107d7565b7fb3abc57bfeebd2cac918901db582f71972a8e628bccf19f5ae3e3482b98a5ced813360405161053f929190611027565b60405180910390a150565b6000546001600160a01b03163314610575576040516311a8a1bb60e31b815260040160405180910390fd5b61057e8161091a565b50565b6000546001600160a01b031633146105ac576040516311a8a1bb60e31b815260040160405180910390fd5b62093a80600254426105be9190611067565b116105dc576040516324e0285f60e21b815260040160405180910390fd5b6002546000036105ff57604051630e4b303f60e21b815260040160405180910390fd5b6001546001600160a01b031615610629576040516323295ef960e01b815260040160405180910390fd5b6106336000610983565b565b6000546001600160a01b03163314610660576040516311a8a1bb60e31b815260040160405180910390fd5b61057e816109e8565b60006060610676836107d7565b915091565b6000546001600160a01b031633146106a6576040516311a8a1bb60e31b815260040160405180910390fd5b6001546001600160a01b0382811691161480156106c4575060025415155b156106e2576040516311bc066560e11b815260040160405180910390fd5b6000546001600160a01b0380831691160361071057604051634a2fb73f60e11b815260040160405180910390fd5b61057e81610a29565b6001546001600160a01b03163314610744576040516311a7f27160e11b815260040160405180910390fd5b62093a80600254426107569190611067565b11610774576040516324e0285f60e21b815260040160405180910390fd5b600154610633906001600160a01b0316610983565b600061079482610a77565b92915050565b6003546107d3907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b03168484610aa3565b5050565b6003546107ec906001600160a01b0316610a77565b6108275760405162461bcd60e51b815260206004820152600c60248201526b10b61921b7b73732b1ba37b960a11b6044820152606401610452565b80516020146108625760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b6044820152606401610452565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638e7d93fa7f00000000000000000000000000000000000000000000000000000000000000006108bb8461107a565b6040516001600160e01b031960e085901b16815263ffffffff9290921660048301526024820152604401600060405180830381600087803b1580156108ff57600080fd5b505af1158015610913573d6000803e3d6000fd5b5050505050565b600354604080516001600160a01b03928316815291831660208301527fc77bec288fc88f168427f2f7da682eadb26cac89d8d591af6e443da98dff2bbc910160405180910390a1600380546001600160a01b0319166001600160a01b0392909216919091179055565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b039092166001600160a01b0319928316178155600255600180549091169055565b60045460408051918252602082018390527f877a02cb809da0364d23adca3cd50c451b53f279d3df632e1fc11eb66335bce5910160405180910390a1600455565b42600255600180546001600160a01b0319166001600160a01b0383169081179091556040517f6ab4d119f23076e8ad491bc65ce85f017fb0591dce08755ba8591059cc51737a90600090a250565b60006107947f000000000000000000000000000000000000000000000000000000000000000083610ca3565b8151602014610ae35760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610452565b805115610b215760405162461bcd60e51b815260206004820152600c60248201526b042c8c2e8c240d8cadccee8d60a31b6044820152606401610452565b6000610b2c34610ddc565b6040516366c96b3760e01b8152606060048201526000606482018190527f00000000000000000000000000000000000000000000000000000000000000006024830152602060448301529192506001600160a01b038716906366c96b3790608401602060405180830381865afa158015610baa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bce91906110a1565b9050610bdb8260016110ba565b8110610c115760405162461bcd60e51b8152602060048201526005602482015264216665657360d81b6044820152606401610452565b60405163bd45c4e760e01b81526001600160a01b0387169063bd45c4e7908490610c6990899089906000907f0000000000000000000000000000000000000000000000000000000000000000906002906004016110cd565b6000604051808303818588803b158015610c8257600080fd5b505af1158015610c96573d6000803e3d6000fd5b5050505050505050505050565b6000336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d095760405162461bcd60e51b815260206004820152600960248201526810b2bc32b1baba37b960b91b6044820152606401610452565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0496d6a6040518163ffffffff1660e01b8152600401606060405180830381865afa158015610d6a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8e919061110b565b5091509150836001600160a01b0316826001600160a01b0316148015610dd357507f000000000000000000000000000000000000000000000000000000000000000081145b95945050505050565b6000600454821115610dee5760045491505b5090565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610e1957600080fd5b813567ffffffffffffffff80821115610e3457610e34610df2565b604051601f8301601f19908116603f01168101908282118183101715610e5c57610e5c610df2565b81604052838152866020858801011115610e7557600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060408385031215610ea857600080fd5b823567ffffffffffffffff80821115610ec057600080fd5b610ecc86838701610e08565b93506020850135915080821115610ee257600080fd5b50610eef85828601610e08565b9150509250929050565b600060208284031215610f0b57600080fd5b813567ffffffffffffffff811115610f2257600080fd5b610f2e84828501610e08565b949350505050565b6001600160a01b038116811461057e57600080fd5b600060208284031215610f5d57600080fd5b8135610f6881610f36565b9392505050565b600060208284031215610f8157600080fd5b5035919050565b6000815180845260005b81811015610fae57602081850181015186830182015201610f92565b506000602082860101526020601f19601f83011685010191505092915050565b8215158152604060208201526000610f2e6040830184610f88565b606081526000610ffc6060830186610f88565b828103602084015261100e8186610f88565b91505060018060a01b0383166040830152949350505050565b60408152600061103a6040830185610f88565b905060018060a01b03831660208301529392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561079457610794611051565b8051602080830151919081101561109b576000198160200360031b1b821691505b50919050565b6000602082840312156110b357600080fd5b5051919050565b8082018082111561079457610794611051565b600060018060a01b03808816835260a060208401526110ef60a0840188610f88565b9516604083015250606081019290925260809091015292915050565b60008060006060848603121561112057600080fd5b835161112b81610f36565b60208501516040909501519096949550939250505056fea264697066735822122031cfc3cb5a032f137de2cab84c416d16e895165d8b4efd56769ea027c640a62864736f6c63430008110033";
    static readonly abi: readonly [{
        readonly inputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "_domain";
            readonly type: "uint32";
        }, {
            readonly internalType: "uint32";
            readonly name: "_mirrorDomain";
            readonly type: "uint32";
        }, {
            readonly internalType: "address";
            readonly name: "_amb";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_rootManager";
            readonly type: "address";
        }, {
            readonly internalType: "address";
            readonly name: "_mirrorConnector";
            readonly type: "address";
        }, {
            readonly internalType: "uint256";
            readonly name: "_mirrorChainId";
            readonly type: "uint256";
        }, {
            readonly internalType: "uint256";
            readonly name: "_gasCap";
            readonly type: "uint256";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "constructor";
    }, {
        readonly inputs: readonly [];
        readonly name: "Connector__processMessage_notUsed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__onlyOwner_notOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__onlyProposed_notProposedOwner";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__ownershipDelayElapsed_delayNotElapsed";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__proposeNewOwner_invalidProposal";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__proposeNewOwner_noOwnershipChange";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__renounceOwnership_invalidProposal";
        readonly type: "error";
    }, {
        readonly inputs: readonly [];
        readonly name: "ProposedOwnable__renounceOwnership_noProposal";
        readonly type: "error";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_previous";
            readonly type: "uint256";
        }, {
            readonly indexed: false;
            readonly internalType: "uint256";
            readonly name: "_updated";
            readonly type: "uint256";
        }];
        readonly name: "GasCapUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }];
        readonly name: "MessageProcessed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "data";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "bytes";
            readonly name: "encodedData";
            readonly type: "bytes";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "caller";
            readonly type: "address";
        }];
        readonly name: "MessageSent";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "previous";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "current";
            readonly type: "address";
        }];
        readonly name: "MirrorConnectorUpdated";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "domain";
            readonly type: "uint32";
        }, {
            readonly indexed: true;
            readonly internalType: "uint32";
            readonly name: "mirrorDomain";
            readonly type: "uint32";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "amb";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "rootManager";
            readonly type: "address";
        }, {
            readonly indexed: false;
            readonly internalType: "address";
            readonly name: "mirrorConnector";
            readonly type: "address";
        }];
        readonly name: "NewConnector";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "proposedOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipProposed";
        readonly type: "event";
    }, {
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "previousOwner";
            readonly type: "address";
        }, {
            readonly indexed: true;
            readonly internalType: "address";
            readonly name: "newOwner";
            readonly type: "address";
        }];
        readonly name: "OwnershipTransferred";
        readonly type: "event";
    }, {
        readonly inputs: readonly [];
        readonly name: "AMB";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "DOMAIN";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "MIRROR_DOMAIN";
        readonly outputs: readonly [{
            readonly internalType: "uint32";
            readonly name: "";
            readonly type: "uint32";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "ROOT_MANAGER";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "acceptProposedOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_data";
            readonly type: "bytes";
        }];
        readonly name: "anyExecute";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "success";
            readonly type: "bool";
        }, {
            readonly internalType: "bytes";
            readonly name: "result";
            readonly type: "bytes";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "delay";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "mirrorConnector";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_data";
            readonly type: "bytes";
        }];
        readonly name: "processMessage";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "newlyProposed";
            readonly type: "address";
        }];
        readonly name: "proposeNewOwner";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "proposed";
        readonly outputs: readonly [{
            readonly internalType: "address";
            readonly name: "";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "proposedTimestamp";
        readonly outputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "";
            readonly type: "uint256";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [];
        readonly name: "renounced";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "view";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "bytes";
            readonly name: "_data";
            readonly type: "bytes";
        }, {
            readonly internalType: "bytes";
            readonly name: "_encodedData";
            readonly type: "bytes";
        }];
        readonly name: "sendMessage";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "uint256";
            readonly name: "_gasCap";
            readonly type: "uint256";
        }];
        readonly name: "setGasCap";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_mirrorConnector";
            readonly type: "address";
        }];
        readonly name: "setMirrorConnector";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly inputs: readonly [{
            readonly internalType: "address";
            readonly name: "_expected";
            readonly type: "address";
        }];
        readonly name: "verifySender";
        readonly outputs: readonly [{
            readonly internalType: "bool";
            readonly name: "";
            readonly type: "bool";
        }];
        readonly stateMutability: "nonpayable";
        readonly type: "function";
    }, {
        readonly stateMutability: "payable";
        readonly type: "receive";
    }];
    static createInterface(): MultichainHubConnectorInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): MultichainHubConnector;
}
export {};
//# sourceMappingURL=MultichainHubConnector__factory.d.ts.map