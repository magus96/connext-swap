{
  "_format": "ethers-rs-sol-cache-3",
  "paths": {
    "artifacts": "out",
    "build_infos": "out/build-info",
    "sources": "src/contract-examples",
    "tests": "test",
    "scripts": "script",
    "libraries": [
      "lib",
      "node_modules"
    ]
  },
  "files": {
    "lib/ds-test/src/test.sol": {
      "lastModificationDate": 1696686013998,
      "contentHash": "962996f0e05d5218857a538a62d7c47e",
      "sourceName": "lib/ds-test/src/test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.5.0",
      "artifacts": {
        "DSTest": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "test.sol/DSTest.json"
        }
      }
    },
    "lib/forge-std/src/Base.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "8f04bbbb2c16f79e14fdc321695a8ec2",
      "sourceName": "lib/forge-std/src/Base.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "CommonBase": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Base.sol/CommonBase.json"
        },
        "ScriptBase": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Base.sol/ScriptBase.json"
        },
        "TestBase": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Base.sol/TestBase.json"
        }
      }
    },
    "lib/forge-std/src/Script.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "83c39354c1e43190bce4dc43860dc786",
      "sourceName": "lib/forge-std/src/Script.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Script": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Script.sol/Script.json"
        }
      }
    },
    "lib/forge-std/src/StdAssertions.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "5bc6a90903a666d831370fa46838ed73",
      "sourceName": "lib/forge-std/src/StdAssertions.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/StdMath.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdAssertions": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdAssertions.sol/StdAssertions.json"
        }
      }
    },
    "lib/forge-std/src/StdChains.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "7e81ca873875f24995d81df8ccb66381",
      "sourceName": "lib/forge-std/src/StdChains.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdChains": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdChains.sol/StdChains.json"
        }
      }
    },
    "lib/forge-std/src/StdCheats.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "027b46591bff2397c69867fd06ddc0c1",
      "sourceName": "lib/forge-std/src/StdCheats.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdCheats": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdCheats.sol/StdCheats.json"
        },
        "StdCheatsSafe": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdCheats.sol/StdCheatsSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdError.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "64c896e1276a291776e5ea5aecb3870a",
      "sourceName": "lib/forge-std/src/StdError.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdError": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdError.sol/stdError.json"
        }
      }
    },
    "lib/forge-std/src/StdInvariant.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "12c06010ec43ce935ed209d5aca30828",
      "sourceName": "lib/forge-std/src/StdInvariant.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdInvariant": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdInvariant.sol/StdInvariant.json"
        }
      }
    },
    "lib/forge-std/src/StdJson.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "2e1d13674e152408867795362d833c24",
      "sourceName": "lib/forge-std/src/StdJson.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.0, <0.9.0",
      "artifacts": {
        "stdJson": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdJson.sol/stdJson.json"
        }
      }
    },
    "lib/forge-std/src/StdMath.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "9da8f453eba6bb98f3d75bc6822bfb29",
      "sourceName": "lib/forge-std/src/StdMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdMath": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdMath.sol/stdMath.json"
        }
      }
    },
    "lib/forge-std/src/StdStorage.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "3cb9868082df39a53927db09dbc21f23",
      "sourceName": "lib/forge-std/src/StdStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "stdStorage": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdStorage.sol/stdStorage.json"
        },
        "stdStorageSafe": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdStorage.sol/stdStorageSafe.json"
        }
      }
    },
    "lib/forge-std/src/StdUtils.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "45fc08daaa17b7908fa5de7d758d8c86",
      "sourceName": "lib/forge-std/src/StdUtils.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "StdUtils": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StdUtils.sol/StdUtils.json"
        }
      }
    },
    "lib/forge-std/src/Test.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "095f745449cb5b6ff27a2e53892b648f",
      "sourceName": "lib/forge-std/src/Test.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Test": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Test.sol/Test.json"
        }
      }
    },
    "lib/forge-std/src/Vm.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "86d01713430fa0877970a6ed8f99dc78",
      "sourceName": "lib/forge-std/src/Vm.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "Vm": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Vm.sol/Vm.json"
        },
        "VmSafe": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Vm.sol/VmSafe.json"
        }
      }
    },
    "lib/forge-std/src/console.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "100b8a33b917da1147740d7ab8b0ded3",
      "sourceName": "lib/forge-std/src/console.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "console.sol/console.json"
        }
      }
    },
    "lib/forge-std/src/console2.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "2096b4e5f252c5df9909cccbe3d2da2e",
      "sourceName": "lib/forge-std/src/console2.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.4.22, <0.9.0",
      "artifacts": {
        "console2": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "console2.sol/console2.json"
        }
      }
    },
    "lib/forge-std/src/interfaces/IMulticall3.sol": {
      "lastModificationDate": 1696686014018,
      "contentHash": "7b131ca1ca32ef6378b7b9ad5488b901",
      "sourceName": "lib/forge-std/src/interfaces/IMulticall3.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": ">=0.6.2, <0.9.0",
      "artifacts": {
        "IMulticall3": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IMulticall3.sol/IMulticall3.json"
        }
      }
    },
    "lib/interfaces/core/IConnext.sol": {
      "lastModificationDate": 1696686015154,
      "contentHash": "3fd1fcd3cb7203a5bc19af8939eb2963",
      "sourceName": "lib/interfaces/core/IConnext.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol"
      ],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "IConnext": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IConnext.sol/IConnext.json"
        }
      }
    },
    "lib/interfaces/core/IXReceiver.sol": {
      "lastModificationDate": 1696686015154,
      "contentHash": "c5dfce9f2aeaabab6fe6317952c1bd9b",
      "sourceName": "lib/interfaces/core/IXReceiver.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "IXReceiver": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IXReceiver.sol/IXReceiver.json"
        }
      }
    },
    "lib/interfaces/libraries/LibConnextStorage.sol": {
      "lastModificationDate": 1696686015154,
      "contentHash": "c4db4a0cbc223fd0c180094b771ca857",
      "sourceName": "lib/interfaces/libraries/LibConnextStorage.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "LibConnextStorage": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "LibConnextStorage.sol/LibConnextStorage.json"
        }
      }
    },
    "lib/interfaces/libraries/TokenId.sol": {
      "lastModificationDate": 1696686015154,
      "contentHash": "e0709e6d8e875286d6ecf69f80b49e12",
      "sourceName": "lib/interfaces/libraries/TokenId.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.17",
      "artifacts": {
        "TokenId": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "TokenId.sol/TokenId.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
      "lastModificationDate": 1696686060401,
      "contentHash": "10d65487f8dfb482f346cb4245d9321e",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AccessControl": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "AccessControl.sol/AccessControl.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol": {
      "lastModificationDate": 1696686060401,
      "contentHash": "b6d9b165dc57e9ad8153bdca05c783a4",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "AccessControlEnumerable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "AccessControlEnumerable.sol/AccessControlEnumerable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
      "lastModificationDate": 1696686060401,
      "contentHash": "57c84298234411cea19c7c284d86be8b",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IAccessControl": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IAccessControl.sol/IAccessControl.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
      "lastModificationDate": 1696686060401,
      "contentHash": "4e71cc90682e109e999ce2bd329f6572",
      "sourceName": "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IAccessControlEnumerable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IAccessControlEnumerable.sol/IAccessControlEnumerable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
      "lastModificationDate": 1696686060405,
      "contentHash": "25c8108f36fdd472bc78d4c4af240c11",
      "sourceName": "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Pausable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Pausable.sol/Pausable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
      "lastModificationDate": 1696686060405,
      "contentHash": "6ed89860245df37c4ee9b36b18f2c301",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC20.sol/ERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
      "lastModificationDate": 1696686060405,
      "contentHash": "d3f395dc838796643e7a71419900ab23",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC20.sol/IERC20.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
      "lastModificationDate": 1696686060405,
      "contentHash": "a1c7f80ae26f5b2d7d563475627fbf25",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20Burnable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC20Burnable.sol/ERC20Burnable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
      "lastModificationDate": 1696686060405,
      "contentHash": "8b94f945e489a3391949b39f127fe49c",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20Pausable": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC20Pausable.sol/ERC20Pausable.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
      "lastModificationDate": 1696686060405,
      "contentHash": "909ab67fc5c25033fe6cd364f8c056f9",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC20Metadata": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC20Metadata.sol/IERC20Metadata.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol": {
      "lastModificationDate": 1696686060409,
      "contentHash": "ca6cd8d752c4e75efa2a15734be0cb94",
      "sourceName": "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC20PresetMinterPauser": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC20PresetMinterPauser.sol/ERC20PresetMinterPauser.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
      "lastModificationDate": 1696686060409,
      "contentHash": "5f2c5c4b6af2dd4551027144797bc8be",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Context.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Context": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Context.sol/Context.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
      "lastModificationDate": 1696686060409,
      "contentHash": "2f6e4b113762028699e08ee1b6093f0c",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Strings": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Strings.sol/Strings.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
      "lastModificationDate": 1696686060409,
      "contentHash": "0e7db055ce108f9da7bb6686a00287c0",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol"
      ],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "ERC165": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ERC165.sol/ERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
      "lastModificationDate": 1696686060409,
      "contentHash": "03e6768535ac4da0e9756f1d8a4a018a",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "IERC165": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "IERC165.sol/IERC165.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
      "lastModificationDate": 1696686060409,
      "contentHash": "a3f54b5f791e71fcdde6fc1e8f562097",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "Math": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Math.sol/Math.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
      "lastModificationDate": 1696686060409,
      "contentHash": "9488ebd4daacfee8ad04811600d7d061",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "SignedMath": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SignedMath.sol/SignedMath.json"
        }
      }
    },
    "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
      "lastModificationDate": 1696686060409,
      "contentHash": "26ce6bc791a42a75d8ed701d0bb57031",
      "sourceName": "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [],
      "versionRequirement": "^0.8.0",
      "artifacts": {
        "EnumerableSet": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "EnumerableSet.sol/EnumerableSet.json"
        }
      }
    },
    "script/greeter/DestinationGreeter.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "37d21c5ac21397f5b2b2e78380f7cf15",
      "sourceName": "script/greeter/DestinationGreeter.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IXReceiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "src/contract-examples/greeter/DestinationGreeter.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "DeployDestinationGreeter": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "DestinationGreeter.s.sol/DeployDestinationGreeter.json"
        }
      }
    },
    "script/greeter/SourceGreeter.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "68896ec0bc44ededbed1b3cf005903b4",
      "sourceName": "script/greeter/SourceGreeter.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "src/contract-examples/greeter/SourceGreeter.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "DeploySourceGreeter": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SourceGreeter.s.sol/DeploySourceGreeter.json"
        }
      }
    },
    "script/greeter/UpdateGreeting.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "16dd4cae7f8bb20bcc05d13f8ae25a97",
      "sourceName": "script/greeter/UpdateGreeting.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "src/contract-examples/greeter/SourceGreeter.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "UpdateGreeting": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "UpdateGreeting.s.sol/UpdateGreeting.json"
        }
      }
    },
    "script/greeter-authenticated/DestinationGreeterAuthenticated.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "830b19786f26e629ccb58fc3f1d70746",
      "sourceName": "script/greeter-authenticated/DestinationGreeterAuthenticated.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IXReceiver.sol",
        "src/contract-examples/greeter-authenticated/DestinationGreeterAuthenticated.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "DeployDestinationGreeterAuthenticated": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "DestinationGreeterAuthenticated.s.sol/DeployDestinationGreeterAuthenticated.json"
        }
      }
    },
    "script/greeter-authenticated/SourceGreeterAuthenticated.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "a0763c7e4eaaba0f9e1fecd1ea01cc7c",
      "sourceName": "script/greeter-authenticated/SourceGreeterAuthenticated.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "src/contract-examples/greeter-authenticated/SourceGreeterAuthenticated.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "DeploySourceGreeterAuthenticated": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SourceGreeterAuthenticated.s.sol/DeploySourceGreeterAuthenticated.json"
        }
      }
    },
    "script/greeter-authenticated/UpdateGreetingAuthenticated.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "4625951dc820abc016f87babe81bca38",
      "sourceName": "script/greeter-authenticated/UpdateGreetingAuthenticated.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "src/contract-examples/greeter-authenticated/SourceGreeterAuthenticated.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "UpdateGreetingAuthenticated": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "UpdateGreetingAuthenticated.s.sol/UpdateGreetingAuthenticated.json"
        }
      }
    },
    "script/ping-pong/Ping.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "3144e79cdf247c5c1231f3569988491b",
      "sourceName": "script/ping-pong/Ping.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/core/IXReceiver.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "src/contract-examples/ping-pong/Ping.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "DeployPing": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Ping.s.sol/DeployPing.json"
        }
      }
    },
    "script/ping-pong/Pong.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "d80d9c0e83964e6e3ac2a69fca874612",
      "sourceName": "script/ping-pong/Pong.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/core/IXReceiver.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "src/contract-examples/ping-pong/Pong.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "DeployPong": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Pong.s.sol/DeployPong.json"
        }
      }
    },
    "script/ping-pong/StartPingPong.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "943283a551541ba9436beb0c477df259",
      "sourceName": "script/ping-pong/StartPingPong.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/core/IXReceiver.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "src/contract-examples/ping-pong/Ping.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "StartPingPong": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "StartPingPong.s.sol/StartPingPong.json"
        }
      }
    },
    "script/simple-bridge/SimpleBridge.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "2c4059888c5ca1ff74e0348b95bf41b9",
      "sourceName": "script/simple-bridge/SimpleBridge.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "src/contract-examples/simple-bridge/SimpleBridge.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "DeploySimpleBridge": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SimpleBridge.s.sol/DeploySimpleBridge.json"
        }
      }
    },
    "script/simple-bridge/Transfer.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "94c0e3bbfb3bab883d7fe9f6056e6616",
      "sourceName": "script/simple-bridge/Transfer.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "src/contract-examples/simple-bridge/SimpleBridge.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "Transfer": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Transfer.s.sol/Transfer.json"
        }
      }
    },
    "script/simple-bridge/TransferEth.s.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "096f5f00d23a82f1c7171a8fa225a84f",
      "sourceName": "script/simple-bridge/TransferEth.s.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/Script.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "src/contract-examples/simple-bridge/SimpleBridge.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "TransferEth": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "TransferEth.s.sol/TransferEth.json"
        }
      }
    },
    "src/contract-examples/greeter/DestinationGreeter.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "f1ccc9a2452bd4c785d03ea1fc5d5dfc",
      "sourceName": "src/contract-examples/greeter/DestinationGreeter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/interfaces/core/IXReceiver.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "DestinationGreeter": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "DestinationGreeter.sol/DestinationGreeter.json"
        }
      }
    },
    "src/contract-examples/greeter/SourceGreeter.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "9a3b474531b474cce04cfa9ac98a74f5",
      "sourceName": "src/contract-examples/greeter/SourceGreeter.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "ISourceGreeter": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SourceGreeter.sol/ISourceGreeter.json"
        },
        "SourceGreeter": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SourceGreeter.sol/SourceGreeter.json"
        }
      }
    },
    "src/contract-examples/greeter-authenticated/DestinationGreeterAuthenticated.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "d805caba4120cbcff258b4648f7bec5a",
      "sourceName": "src/contract-examples/greeter-authenticated/DestinationGreeterAuthenticated.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/interfaces/core/IXReceiver.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "DestinationGreeterAuthenticated": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "DestinationGreeterAuthenticated.sol/DestinationGreeterAuthenticated.json"
        }
      }
    },
    "src/contract-examples/greeter-authenticated/SourceGreeterAuthenticated.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "5be3d27da246da0d3846d47a84f89e64",
      "sourceName": "src/contract-examples/greeter-authenticated/SourceGreeterAuthenticated.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "ISourceGreeterAuthenticated": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SourceGreeterAuthenticated.sol/ISourceGreeterAuthenticated.json"
        },
        "SourceGreeterAuthenticated": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SourceGreeterAuthenticated.sol/SourceGreeterAuthenticated.json"
        }
      }
    },
    "src/contract-examples/ping-pong/Ping.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "a19e20c36426fe6da9d65561f786c699",
      "sourceName": "src/contract-examples/ping-pong/Ping.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/core/IXReceiver.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "IPing": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Ping.sol/IPing.json"
        },
        "Ping": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Ping.sol/Ping.json"
        }
      }
    },
    "src/contract-examples/ping-pong/Pong.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "b1e487ec17f31ac28c2235c36217ac31",
      "sourceName": "src/contract-examples/ping-pong/Pong.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/core/IXReceiver.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "IPong": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Pong.sol/IPong.json"
        },
        "Pong": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Pong.sol/Pong.json"
        }
      }
    },
    "src/contract-examples/simple-bridge/SimpleBridge.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "35d51199b58e1c702721a7de0ce2a542",
      "sourceName": "src/contract-examples/simple-bridge/SimpleBridge.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "ISimpleBridge": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SimpleBridge.sol/ISimpleBridge.json"
        },
        "IWETH": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SimpleBridge.sol/IWETH.json"
        },
        "SimpleBridge": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SimpleBridge.sol/SimpleBridge.json"
        }
      }
    },
    "src/contract-examples/test/greeter/DestinationGreeter.t.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "25aa6d0e28afddc948e68c4dc0c29f58",
      "sourceName": "src/contract-examples/test/greeter/DestinationGreeter.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/core/IXReceiver.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "src/contract-examples/greeter/DestinationGreeter.sol",
        "src/contract-examples/test/utils/TestHelper.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "DestinationGreeterTestUnit": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "DestinationGreeter.t.sol/DestinationGreeterTestUnit.json"
        }
      }
    },
    "src/contract-examples/test/greeter/SourceGreeter.t.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "47530fd9683522dd1fee9275056d4931",
      "sourceName": "src/contract-examples/test/greeter/SourceGreeter.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "src/contract-examples/greeter/SourceGreeter.sol",
        "src/contract-examples/test/utils/ForkTestHelper.sol",
        "src/contract-examples/test/utils/TestHelper.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "SourceGreeterTestForked": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SourceGreeter.t.sol/SourceGreeterTestForked.json"
        },
        "SourceGreeterTestUnit": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SourceGreeter.t.sol/SourceGreeterTestUnit.json"
        }
      }
    },
    "src/contract-examples/test/greeter-authenticated/DestinationGreeterAuthenticated.t.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "c7e636df1608e0b13c5a8c122a34695a",
      "sourceName": "src/contract-examples/test/greeter-authenticated/DestinationGreeterAuthenticated.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/core/IXReceiver.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "src/contract-examples/greeter-authenticated/DestinationGreeterAuthenticated.sol",
        "src/contract-examples/test/utils/TestHelper.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "DestinationGreeterAuthenticatedTestUnit": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "DestinationGreeterAuthenticated.t.sol/DestinationGreeterAuthenticatedTestUnit.json"
        }
      }
    },
    "src/contract-examples/test/greeter-authenticated/SourceGreeterAuthenticated.t.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "d1bea443e50edea9a9d8eeaad925343f",
      "sourceName": "src/contract-examples/test/greeter-authenticated/SourceGreeterAuthenticated.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "src/contract-examples/greeter-authenticated/SourceGreeterAuthenticated.sol",
        "src/contract-examples/test/utils/ForkTestHelper.sol",
        "src/contract-examples/test/utils/TestHelper.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "SourceGreeterAuthenticatedTestForked": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SourceGreeterAuthenticated.t.sol/SourceGreeterAuthenticatedTestForked.json"
        },
        "SourceGreeterAuthenticatedTestUnit": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SourceGreeterAuthenticated.t.sol/SourceGreeterAuthenticatedTestUnit.json"
        }
      }
    },
    "src/contract-examples/test/ping-pong/Ping.t.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "901a1c10fea28ed2521cd93c8f78ac58",
      "sourceName": "src/contract-examples/test/ping-pong/Ping.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/core/IXReceiver.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "src/contract-examples/ping-pong/Ping.sol",
        "src/contract-examples/test/utils/TestHelper.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "PingTestUnit": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Ping.t.sol/PingTestUnit.json"
        }
      }
    },
    "src/contract-examples/test/ping-pong/Pong.t.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "c23990f0ca630df47f7932488f40ecf9",
      "sourceName": "src/contract-examples/test/ping-pong/Pong.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/core/IXReceiver.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "src/contract-examples/ping-pong/Pong.sol",
        "src/contract-examples/test/utils/TestHelper.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "PongTestUnit": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "Pong.t.sol/PongTestUnit.json"
        }
      }
    },
    "src/contract-examples/test/simple-bridge/SimpleBridge.t.sol": {
      "lastModificationDate": 1696681015911,
      "contentHash": "3c64b0e96c631956d7c8a73a6c654e38",
      "sourceName": "src/contract-examples/test/simple-bridge/SimpleBridge.t.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "src/contract-examples/simple-bridge/SimpleBridge.sol",
        "src/contract-examples/test/utils/ForkTestHelper.sol",
        "src/contract-examples/test/utils/TestHelper.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "SimpleBridgeTestForked": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SimpleBridge.t.sol/SimpleBridgeTestForked.json"
        },
        "SimpleBridgeTestUnit": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "SimpleBridge.t.sol/SimpleBridgeTestUnit.json"
        }
      }
    },
    "src/contract-examples/test/utils/ForkTestHelper.sol": {
      "lastModificationDate": 1696681015915,
      "contentHash": "31dc12ff3eb097802df015d572e07f8c",
      "sourceName": "src/contract-examples/test/utils/ForkTestHelper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol",
        "lib/interfaces/core/IConnext.sol",
        "lib/interfaces/libraries/LibConnextStorage.sol",
        "lib/interfaces/libraries/TokenId.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol",
        "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol",
        "lib/openzeppelin-contracts/contracts/security/Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "lib/openzeppelin-contracts/contracts/utils/Context.sol",
        "lib/openzeppelin-contracts/contracts/utils/Strings.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol",
        "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "src/contract-examples/test/utils/TestHelper.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "ForkTestHelper": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "ForkTestHelper.sol/ForkTestHelper.json"
        }
      }
    },
    "src/contract-examples/test/utils/TestHelper.sol": {
      "lastModificationDate": 1696681015915,
      "contentHash": "ca39ae71da0ad33c1f1d952ee4d3686a",
      "sourceName": "src/contract-examples/test/utils/TestHelper.sol",
      "solcConfig": {
        "settings": {
          "optimizer": {
            "enabled": true,
            "runs": 1000
          },
          "metadata": {
            "useLiteralContent": false,
            "bytecodeHash": "ipfs",
            "appendCBOR": true
          },
          "outputSelection": {
            "*": {
              "": [
                "ast"
              ],
              "*": [
                "abi",
                "evm.bytecode",
                "evm.deployedBytecode",
                "evm.methodIdentifiers",
                "metadata"
              ]
            }
          },
          "evmVersion": "paris",
          "libraries": {}
        }
      },
      "imports": [
        "lib/ds-test/src/test.sol",
        "lib/forge-std/src/Base.sol",
        "lib/forge-std/src/StdAssertions.sol",
        "lib/forge-std/src/StdChains.sol",
        "lib/forge-std/src/StdCheats.sol",
        "lib/forge-std/src/StdError.sol",
        "lib/forge-std/src/StdInvariant.sol",
        "lib/forge-std/src/StdJson.sol",
        "lib/forge-std/src/StdMath.sol",
        "lib/forge-std/src/StdStorage.sol",
        "lib/forge-std/src/StdUtils.sol",
        "lib/forge-std/src/Test.sol",
        "lib/forge-std/src/Vm.sol",
        "lib/forge-std/src/console.sol",
        "lib/forge-std/src/console2.sol",
        "lib/forge-std/src/interfaces/IMulticall3.sol"
      ],
      "versionRequirement": "^0.8.15",
      "artifacts": {
        "TestHelper": {
          "0.8.17+commit.8df45f5f.Linux.gcc": "TestHelper.sol/TestHelper.json"
        }
      }
    }
  }
}