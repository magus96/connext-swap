{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ARBITRUM_GOERLI_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ARBITRUM_GOERLI_DOMAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONNEXT_ARBITRUM_GOERLI",
      "outputs": [
        {
          "internalType": "contract IConnext",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONNEXT_GOERLI",
      "outputs": [
        {
          "internalType": "contract IConnext",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONNEXT_MUMBAI",
      "outputs": [
        {
          "internalType": "contract IConnext",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "CONNEXT_OPTIMISM_GOERLI",
      "outputs": [
        {
          "internalType": "contract IConnext",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GOERLI_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GOERLI_DOMAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MOCK_CONNEXT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MOCK_ERC20",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPTIMISM_GOERLI_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPTIMISM_GOERLI_DOMAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POLYGON_MUMBAI_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POLYGON_MUMBAI_DOMAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TEST_ERC20_ARBITRUM_GOERLI",
      "outputs": [
        {
          "internalType": "contract ERC20PresetMinterPauser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TEST_ERC20_GOERLI",
      "outputs": [
        {
          "internalType": "contract ERC20PresetMinterPauser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TEST_ERC20_MUMBAI",
      "outputs": [
        {
          "internalType": "contract ERC20PresetMinterPauser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TEST_ERC20_OPTIMISM_GOERLI",
      "outputs": [
        {
          "internalType": "contract ERC20PresetMinterPauser",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USER_CHAIN_A",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USER_CHAIN_B",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "goerliFork",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optimismGoerliFork",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff191660011790557e01388100066eed000001a4000000050000270767617262676f7074676f6572601b55601c80546001600160a01b031990811673432584b89bca6cfa627794e794d5f6519df6287817909155601d805482167319385618d04c8a294cdc42af603defa985055efa179055601e80548216734226e80a951b2a4b3d85f16fdc98304a98ba3653179055601f8054821673676b53e69c58068efc40bd2be8571410303179e317905560208054821673fca08024a6d4bcc87275b1e4a1e22b71fad7f649179055602180548216735ea1bb242326044699c3d81341c5f535d5af1504179055602280548216732334937846ab2a3fce747b32587e1a1a2f6eec5a179055602380548216732075c9e31f973bb53cae5bac36a8eeb4b082adc2179055602480548216737ea6ea49b0b0ae9c5db7907d139d9cd3439862a11790556025805482167368db1c8d85c09d546097c65ec7dcbff4d6497cbf17905560268054821673edb95d8037f769b72aaab41deec92903a98c9e161790556027805490911673dc805eaaabd6f68904ca706c221c72f8a8a68f9f1790553480156101b457600080fd5b506118b0806101c46000396000f3fe608060405234801561001057600080fd5b506004361061020b5760003560e01c806385226c811161012a578063ba414fa6116100bd578063e20c9f711161008c578063f74f6e8311610071578063f74f6e83146104b5578063f8d78542146104c8578063fa7626d4146104db57600080fd5b8063e20c9f7114610491578063e5734ee61461049957600080fd5b8063ba414fa61461041e578063bcc160d214610436578063c63ca77c14610449578063d0da02ae1461046157600080fd5b8063916a17c6116100f9578063916a17c6146103f2578063a7124a3f146103fa578063b5508aa914610403578063b98f28691461040b57600080fd5b806385226c81146103965780638a97bec9146103ab5780638fd6d856146103cf57806390c55ee3146103e257600080fd5b806350d8371b116101a257806366d9a9a01161017157806366d9a9a01461033b57806371e944081461035057806372cb60cf14610370578063808da30a1461038357600080fd5b806350d8371b146102d657806352414d45146102fe578063557ce7e9146103155780635e6b9c4d1461032857600080fd5b80632e48aae0116101de5780632e48aae0146102a05780633e5e3c23146102b35780633f7286f4146102bb578063420652a0146102c357600080fd5b80630a9254e4146102105780631a0cbd4f1461021a5780631ed7831c1461026057806326f7afad14610275575b600080fd5b6102186104e8565b005b601b54610246907801000000000000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b610268610c34565b60405161025791906114fa565b602454610288906001600160a01b031681565b6040516001600160a01b039091168152602001610257565b602354610288906001600160a01b031681565b610268610c96565b610268610cf6565b601c54610288906001600160a01b031681565b601b546102469074010000000000000000000000000000000000000000900463ffffffff1681565b61030760295481565b604051908152602001610257565b601d54610288906001600160a01b031681565b602654610288906001600160a01b031681565b610343610d56565b6040516102579190611547565b601b54610246906c01000000000000000000000000900463ffffffff1681565b602154610288906001600160a01b031681565b602054610288906001600160a01b031681565b61039e610e5a565b6040516102579190611662565b601b5461024690700100000000000000000000000000000000900463ffffffff1681565b601e54610288906001600160a01b031681565b601b546102469063ffffffff1681565b610343610f2a565b61030760285481565b61039e611025565b602754610288906001600160a01b031681565b6104266110f5565b6040519015158152602001610257565b602254610288906001600160a01b031681565b601b5461024690640100000000900463ffffffff1681565b601b54610246907c0100000000000000000000000000000000000000000000000000000000900463ffffffff1681565b610268611237565b601b546102469068010000000000000000900463ffffffff1681565b602554610288906001600160a01b031681565b601f54610288906001600160a01b031681565b6000546104269060ff1681565b6104f0611297565b60405163f877cb1960e01b815260206004820152600e60248201527f474f45524c495f5250435f55524c0000000000000000000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba349890829063f877cb1990606401600060405180830381865afa158015610575573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261059d91908101906116da565b6040518263ffffffff1660e01b81526004016105b99190611787565b6020604051808303816000875af11580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc91906117a1565b60285560405163f877cb1960e01b815260206004820152601760248201527f4f5054494d49534d5f474f45524c495f5250435f55524c0000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba349890829063f877cb1990606401600060405180830381865afa158015610684573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ac91908101906116da565b6040518263ffffffff1660e01b81526004016106c89190611787565b6020604051808303816000875af11580156106e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070b91906117a1565b602955602054604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601060448201527f436f6e6e6578742028476f65726c6929000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601960448201527f436f6e6e65787420284f7074696d69736d2d476f65726c6929000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561083e57600080fd5b505af1158015610852573d6000803e3d6000fd5b5050602254604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601060448201527f436f6e6e65787420284d756d62616929000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156108e257600080fd5b505af11580156108f6573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601960448201527f436f6e6e6578742028417262697472756d2d476f65726c6929000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561098657600080fd5b505af115801561099a573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152601360448201527f546573742045524332302028476f65726c6929000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015610a2d57600080fd5b505af1158015610a41573d6000803e3d6000fd5b5050602554604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601c60448201527f5465737420455243323020284f7074696d69736d2d476f65726c6929000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015610ad157600080fd5b505af1158015610ae5573d6000803e3d6000fd5b5050602654604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601360448201527f5465737420455243323020284d756d62616929000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015610b7557600080fd5b505af1158015610b89573d6000803e3d6000fd5b5050602754604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601c60448201527f546573742045524332302028417262697472756d2d476f65726c6929000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c71891506084015b600060405180830381600087803b158015610c1a57600080fd5b505af1158015610c2e573d6000803e3d6000fd5b50505050565b6060600d805480602002602001604051908101604052809291908181526020018280548015610c8c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c6e575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015610c8c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610c6e575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610c8c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610c6e575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015610e515760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610e3957602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610de65790505b50505050508152505081526020019060010190610d7a565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610e51578382906000526020600020018054610e9d906117ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec9906117ba565b8015610f165780601f10610eeb57610100808354040283529160200191610f16565b820191906000526020600020905b815481529060010190602001808311610ef957829003601f168201915b505050505081526020019060010190610e7e565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015610e515760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561100d57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610fba5790505b50505050508152505081526020019060010190610f4e565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610e51578382906000526020600020018054611068906117ba565b80601f0160208091040260200160405190810160405280929190818152602001828054611094906117ba565b80156110e15780601f106110b6576101008083540402835291602001916110e1565b820191906000526020600020905b8154815290600101906020018083116110c457829003601f168201915b505050505081526020019060010190611049565b60008054610100900460ff16156111155750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156112325760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916111ba917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016117f4565b60408051601f19818403018152908290526111d49161183c565b6000604051808303816000865af19150503d8060008114611211576040519150601f19603f3d011682016040523d82523d6000602084013e611216565b606091505b509150508080602001905181019061122e9190611858565b9150505b919050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610c8c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610c6e575050505050905090565b601e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f4d6f636b20436f6e6e65787400000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b15801561132357600080fd5b505af1158015611337573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600a60448201527f4d6f636b204552433230000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156113c757600080fd5b505af11580156113db573d6000803e3d6000fd5b5050601c54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f5573657220436861696e204100000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561146b57600080fd5b505af115801561147f573d6000803e3d6000fd5b5050601d54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f5573657220436861696e204200000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401610c00565b6020808252825182820181905260009190848201906040850190845b8181101561153b5783516001600160a01b031683529284019291840191600101611516565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561160357898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156115ee5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906115ac565b50978a0197955050509187019160010161156f565b50919998505050505050505050565b60005b8381101561162d578181015183820152602001611615565b50506000910152565b6000815180845261164e816020860160208601611612565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156116b757603f198886030184526116a5858351611636565b94509285019290850190600101611689565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156116ec57600080fd5b815167ffffffffffffffff8082111561170457600080fd5b818401915084601f83011261171857600080fd5b81518181111561172a5761172a6116c4565b604051601f8201601f19908116603f01168101908382118183101715611752576117526116c4565b8160405282815287602084870101111561176b57600080fd5b61177c836020830160208801611612565b979650505050505050565b60208152600061179a6020830184611636565b9392505050565b6000602082840312156117b357600080fd5b5051919050565b600181811c908216806117ce57607f821691505b6020821081036117ee57634e487b7160e01b600052602260045260246000fd5b50919050565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825161182e816004850160208701611612565b919091016004019392505050565b6000825161184e818460208701611612565b9190910192915050565b60006020828403121561186a57600080fd5b8151801515811461179a57600080fdfea2646970667358221220d2328ab980899438dc9effd7bd993d4559512c676d531aa4f8d07f00c5d8637c64736f6c63430008110033",
    "sourceMap": "383:1816:65:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;516:45:66;147:43;516:45;;587:73;;-1:-1:-1;;;;;;587:73:66;;;617:43;587:73;;;;664;;;;;694:43;664:73;;;741;;;;;771:43;741:73;;;818:69;;;;;846:41;818:69;;;449:85:65;;;;;491:42;449:85;;;538:94;;;;;589:42;538:94;;;636:85;;;;;678:42;636:85;;;725:94;;;;;776:42;725:94;;;824:118;;;;;899:42;824:118;;;946:127;;;;;1030:42;946:127;;;1077:118;;;;;1152:42;1077:118;;;1199:127;;;;;;1283:42;1199:127;;;383:1816;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061020b5760003560e01c806385226c811161012a578063ba414fa6116100bd578063e20c9f711161008c578063f74f6e8311610071578063f74f6e83146104b5578063f8d78542146104c8578063fa7626d4146104db57600080fd5b8063e20c9f7114610491578063e5734ee61461049957600080fd5b8063ba414fa61461041e578063bcc160d214610436578063c63ca77c14610449578063d0da02ae1461046157600080fd5b8063916a17c6116100f9578063916a17c6146103f2578063a7124a3f146103fa578063b5508aa914610403578063b98f28691461040b57600080fd5b806385226c81146103965780638a97bec9146103ab5780638fd6d856146103cf57806390c55ee3146103e257600080fd5b806350d8371b116101a257806366d9a9a01161017157806366d9a9a01461033b57806371e944081461035057806372cb60cf14610370578063808da30a1461038357600080fd5b806350d8371b146102d657806352414d45146102fe578063557ce7e9146103155780635e6b9c4d1461032857600080fd5b80632e48aae0116101de5780632e48aae0146102a05780633e5e3c23146102b35780633f7286f4146102bb578063420652a0146102c357600080fd5b80630a9254e4146102105780631a0cbd4f1461021a5780631ed7831c1461026057806326f7afad14610275575b600080fd5b6102186104e8565b005b601b54610246907801000000000000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b610268610c34565b60405161025791906114fa565b602454610288906001600160a01b031681565b6040516001600160a01b039091168152602001610257565b602354610288906001600160a01b031681565b610268610c96565b610268610cf6565b601c54610288906001600160a01b031681565b601b546102469074010000000000000000000000000000000000000000900463ffffffff1681565b61030760295481565b604051908152602001610257565b601d54610288906001600160a01b031681565b602654610288906001600160a01b031681565b610343610d56565b6040516102579190611547565b601b54610246906c01000000000000000000000000900463ffffffff1681565b602154610288906001600160a01b031681565b602054610288906001600160a01b031681565b61039e610e5a565b6040516102579190611662565b601b5461024690700100000000000000000000000000000000900463ffffffff1681565b601e54610288906001600160a01b031681565b601b546102469063ffffffff1681565b610343610f2a565b61030760285481565b61039e611025565b602754610288906001600160a01b031681565b6104266110f5565b6040519015158152602001610257565b602254610288906001600160a01b031681565b601b5461024690640100000000900463ffffffff1681565b601b54610246907c0100000000000000000000000000000000000000000000000000000000900463ffffffff1681565b610268611237565b601b546102469068010000000000000000900463ffffffff1681565b602554610288906001600160a01b031681565b601f54610288906001600160a01b031681565b6000546104269060ff1681565b6104f0611297565b60405163f877cb1960e01b815260206004820152600e60248201527f474f45524c495f5250435f55524c0000000000000000000000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba349890829063f877cb1990606401600060405180830381865afa158015610575573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261059d91908101906116da565b6040518263ffffffff1660e01b81526004016105b99190611787565b6020604051808303816000875af11580156105d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fc91906117a1565b60285560405163f877cb1960e01b815260206004820152601760248201527f4f5054494d49534d5f474f45524c495f5250435f55524c0000000000000000006044820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906331ba349890829063f877cb1990606401600060405180830381865afa158015610684573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526106ac91908101906116da565b6040518263ffffffff1660e01b81526004016106c89190611787565b6020604051808303816000875af11580156106e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070b91906117a1565b602955602054604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601060448201527f436f6e6e6578742028476f65726c6929000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601960448201527f436f6e6e65787420284f7074696d69736d2d476f65726c6929000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561083e57600080fd5b505af1158015610852573d6000803e3d6000fd5b5050602254604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601060448201527f436f6e6e65787420284d756d62616929000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156108e257600080fd5b505af11580156108f6573d6000803e3d6000fd5b5050602354604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601960448201527f436f6e6e6578742028417262697472756d2d476f65726c6929000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561098657600080fd5b505af115801561099a573d6000803e3d6000fd5b505060248054604080516318caf8e360e31b81526001600160a01b03909216600483015291810191909152601360448201527f546573742045524332302028476f65726c6929000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015610a2d57600080fd5b505af1158015610a41573d6000803e3d6000fd5b5050602554604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601c60448201527f5465737420455243323020284f7074696d69736d2d476f65726c6929000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015610ad157600080fd5b505af1158015610ae5573d6000803e3d6000fd5b5050602654604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601360448201527f5465737420455243323020284d756d62616929000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b158015610b7557600080fd5b505af1158015610b89573d6000803e3d6000fd5b5050602754604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152601c60448201527f546573742045524332302028417262697472756d2d476f65726c6929000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c71891506084015b600060405180830381600087803b158015610c1a57600080fd5b505af1158015610c2e573d6000803e3d6000fd5b50505050565b6060600d805480602002602001604051908101604052809291908181526020018280548015610c8c57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c6e575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015610c8c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610c6e575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610c8c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610c6e575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b82821015610e515760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610e3957602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610de65790505b50505050508152505081526020019060010190610d7a565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b82821015610e51578382906000526020600020018054610e9d906117ba565b80601f0160208091040260200160405190810160405280929190818152602001828054610ec9906117ba565b8015610f165780601f10610eeb57610100808354040283529160200191610f16565b820191906000526020600020905b815481529060010190602001808311610ef957829003601f168201915b505050505081526020019060010190610e7e565b60606013805480602002602001604051908101604052809291908181526020016000905b82821015610e515760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561100d57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610fba5790505b50505050508152505081526020019060010190610f4e565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610e51578382906000526020600020018054611068906117ba565b80601f0160208091040260200160405190810160405280929190818152602001828054611094906117ba565b80156110e15780601f106110b6576101008083540402835291602001916110e1565b820191906000526020600020905b8154815290600101906020018083116110c457829003601f168201915b505050505081526020019060010190611049565b60008054610100900460ff16156111155750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156112325760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916111ba917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016117f4565b60408051601f19818403018152908290526111d49161183c565b6000604051808303816000865af19150503d8060008114611211576040519150601f19603f3d011682016040523d82523d6000602084013e611216565b606091505b509150508080602001905181019061122e9190611858565b9150505b919050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610c8c576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610c6e575050505050905090565b601e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f4d6f636b20436f6e6e65787400000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b15801561132357600080fd5b505af1158015611337573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600a60448201527f4d6f636b204552433230000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b1580156113c757600080fd5b505af11580156113db573d6000803e3d6000fd5b5050601c54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f5573657220436861696e204100000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561146b57600080fd5b505af115801561147f573d6000803e3d6000fd5b5050601d54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f5573657220436861696e204200000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401610c00565b6020808252825182820181905260009190848201906040850190845b8181101561153b5783516001600160a01b031683529284019291840191600101611516565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561160357898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156115ee5783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906115ac565b50978a0197955050509187019160010161156f565b50919998505050505050505050565b60005b8381101561162d578181015183820152602001611615565b50506000910152565b6000815180845261164e816020860160208601611612565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156116b757603f198886030184526116a5858351611636565b94509285019290850190600101611689565b5092979650505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156116ec57600080fd5b815167ffffffffffffffff8082111561170457600080fd5b818401915084601f83011261171857600080fd5b81518181111561172a5761172a6116c4565b604051601f8201601f19908116603f01168101908382118183101715611752576117526116c4565b8160405282815287602084870101111561176b57600080fd5b61177c836020830160208801611612565b979650505050505050565b60208152600061179a6020830184611636565b9392505050565b6000602082840312156117b357600080fd5b5051919050565b600181811c908216806117ce57607f821691505b6020821081036117ee57634e487b7160e01b600052602260045260246000fd5b50919050565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825161182e816004850160208701611612565b919091016004019392505050565b6000825161184e818460208701611612565b9190910192915050565b60006020828403121561186a57600080fd5b8151801515811461179a57600080fdfea2646970667358221220d2328ab980899438dc9effd7bd993d4559512c676d531aa4f8d07f00c5d8637c64736f6c63430008110033",
    "sourceMap": "383:1816:65:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:785;;;:::i;:::-;;465:47:66;;;;;;;;;;;;;;;188:10:67;176:23;;;158:42;;146:2;131:18;465:47:66;;;;;;;;2161:134:7;;;:::i;:::-;;;;;;;:::i;824:118:65:-;;;;;-1:-1:-1;;;;;824:118:65;;;;;;-1:-1:-1;;;;;1094:55:67;;;1076:74;;1064:2;1049:18;824:118:65;897:259:67;725:94:65;;;;;-1:-1:-1;;;;;725:94:65;;;2930:133:7;;;:::i;2631:141::-;;;:::i;587:73:66:-;;;;;-1:-1:-1;;;;;587:73:66;;;417:44;;;;;;;;;;;;1374:33:65;;;;;;;;;1787:25:67;;;1775:2;1760:18;1374:33:65;1641:177:67;664:73:66;;;;;-1:-1:-1;;;;;664:73:66;;;1077:118:65;;;;;-1:-1:-1;;;;;1077:118:65;;;2447:178:7;;;:::i;:::-;;;;;;;:::i;306:45:66:-;;;;;;;;;;;;538:94:65;;;;;-1:-1:-1;;;;;538:94:65;;;449:85;;;;;-1:-1:-1;;;;;449:85:65;;;2301:140:7;;;:::i;:::-;;;;;;;:::i;380:33:66:-;;;;;;;;;;;;741:73;;;;;-1:-1:-1;;;;;741:73:66;;;147:43;;;;;;;;;2778:146:7;;;:::i;1345:25:65:-;;;;;;1866:141:7;;;:::i;1199:127:65:-;;;;;-1:-1:-1;;;;;1199:127:65;;;1819:584:0;;;:::i;:::-;;;4968:14:67;;4961:22;4943:41;;4931:2;4916:18;1819:584:0;4803:187:67;636:85:65;;;;;-1:-1:-1;;;;;636:85:65;;;194:52:66;;;;;;;;;;;;516:45;;;;;;;;;;;;2013:142:7;;;:::i;250:52:66:-;;;;;;;;;;;;946:127:65;;;;;-1:-1:-1;;;;;946:127:65;;;818:69:66;;;;;-1:-1:-1;;;;;818:69:66;;;1572:26:0;;;;;;;;;1412:785:65;1459:13;:11;:13::i;:::-;1506:30;;-1:-1:-1;;;1506:30:65;;5197:2:67;1506:30:65;;;5179:21:67;5236:2;5216:18;;;5209:30;5275:16;5255:18;;;5248:44;1492:13:65;;;;;;1506:12;;5309:18:67;;1506:30:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1506:30:65;;;;;;;;;;;;:::i;:::-;1492:45;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1479:10;:58;1578:39;;-1:-1:-1;;;1578:39:65;;7045:2:67;1578:39:65;;;7027:21:67;7084:2;7064:18;;;7057:30;7123:25;7103:18;;;7096:53;1564:13:65;;;;;;1578:12;;7166:18:67;;1578:39:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1578:39:65;;;;;;;;;;;;:::i;:::-;1564:54;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1543:18;:75;1646:14;;1629:53;;;-1:-1:-1;;;1629:53:65;;-1:-1:-1;;;;;1646:14:65;;;1629:53;;;7407:74:67;7497:18;;;7490:30;7556:2;7536:18;;;7529:30;7595:18;7575;;;7568:46;1629:8:65;;;;7631:19:67;;1629:53:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1705:23:65;;1688:71;;;-1:-1:-1;;;1688:71:65;;-1:-1:-1;;;;;1705:23:65;;;1688:71;;;7873:74:67;7963:18;;;7956:30;8022:2;8002:18;;;7995:30;8061:27;8041:18;;;8034:55;1688:8:65;;-1:-1:-1;1688:8:65;;-1:-1:-1;8106:19:67;;1688:71:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1782:14:65;;1765:53;;;-1:-1:-1;;;1765:53:65;;-1:-1:-1;;;;;1782:14:65;;;1765:53;;;8348:74:67;8438:18;;;8431:30;8497:2;8477:18;;;8470:30;8536:18;8516;;;8509:46;1765:8:65;;-1:-1:-1;1765:8:65;;-1:-1:-1;8572:19:67;;1765:53:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1841:23:65;;1824:71;;;-1:-1:-1;;;1824:71:65;;-1:-1:-1;;;;;1841:23:65;;;1824:71;;;8814:74:67;8904:18;;;8897:30;8963:2;8943:18;;;8936:30;9002:27;8982:18;;;8975:55;1824:8:65;;-1:-1:-1;1824:8:65;;-1:-1:-1;9047:19:67;;1824:71:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1919:17:65;;;1902:59;;;-1:-1:-1;;;1902:59:65;;-1:-1:-1;;;;;1919:17:65;;;1902:59;;;9289:74:67;9379:18;;;9372:30;;;;9438:2;9418:18;;;9411:30;9477:21;9457:18;;;9450:49;1902:8:65;;-1:-1:-1;1902:8:65;;-1:-1:-1;9516:19:67;;1902:59:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1984:26:65;;1967:77;;;-1:-1:-1;;;1967:77:65;;-1:-1:-1;;;;;1984:26:65;;;1967:77;;;9758:74:67;9848:18;;;9841:30;9907:2;9887:18;;;9880:30;9946;9926:18;;;9919:58;1967:8:65;;-1:-1:-1;1967:8:65;;-1:-1:-1;9994:19:67;;1967:77:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2067:17:65;;2050:59;;;-1:-1:-1;;;2050:59:65;;-1:-1:-1;;;;;2067:17:65;;;2050:59;;;10236:74:67;10326:18;;;10319:30;10385:2;10365:18;;;10358:30;10424:21;10404:18;;;10397:49;2050:8:65;;-1:-1:-1;2050:8:65;;-1:-1:-1;10463:19:67;;2050:59:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2132:26:65;;2115:77;;;-1:-1:-1;;;2115:77:65;;-1:-1:-1;;;;;2132:26:65;;;2115:77;;;10705:74:67;10795:18;;;10788:30;10854:2;10834:18;;;10827:30;10893;10873:18;;;10866:58;2115:8:65;;-1:-1:-1;2115:8:65;;-1:-1:-1;10941:19:67;;2115:77:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1412:785::o;2161:134:7:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:7;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:7;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:7;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;11587:74:67;;;2221:17:0;11677:18:67;;;11670:34;2196:43:0;;;;;;;;;11560:18:67;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2013:142:7:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:7;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;892:209:66:-;939:12;;930:38;;;-1:-1:-1;;;930:38:66;;-1:-1:-1;;;;;939:12:66;;;930:38;;;12936:74:67;13026:18;;;13019:30;13085:2;13065:18;;;13058:30;13124:14;13104:18;;;13097:42;930:8:66;;;;13156:19:67;;930:38:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;983:10:66;;974:34;;;-1:-1:-1;;;974:34:66;;-1:-1:-1;;;;;983:10:66;;;974:34;;;13398:74:67;13488:18;;;13481:30;13547:2;13527:18;;;13520:30;13586:12;13566:18;;;13559:40;974:8:66;;-1:-1:-1;974:8:66;;-1:-1:-1;13616:19:67;;974:34:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1023:12:66;;1014:38;;;-1:-1:-1;;;1014:38:66;;-1:-1:-1;;;;;1023:12:66;;;1014:38;;;13858:74:67;13948:18;;;13941:30;14007:2;13987:18;;;13980:30;14046:14;14026:18;;;14019:42;1014:8:66;;-1:-1:-1;1014:8:66;;-1:-1:-1;14078:19:67;;1014:38:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1067:12:66;;1058:38;;;-1:-1:-1;;;1058:38:66;;-1:-1:-1;;;;;1067:12:66;;;1058:38;;;14320:74:67;14410:18;;;14403:30;14469:2;14449:18;;;14442:30;14508:14;14488:18;;;14481:42;1058:8:66;;-1:-1:-1;1058:8:66;;-1:-1:-1;14540:19:67;;1058:38:66;14108:457:67;211:681;382:2;434:21;;;504:13;;407:18;;;526:22;;;353:4;;382:2;605:15;;;;579:2;564:18;;;353:4;648:218;662:6;659:1;656:13;648:218;;;727:13;;-1:-1:-1;;;;;723:62:67;711:75;;841:15;;;;806:12;;;;684:1;677:9;648:218;;;-1:-1:-1;883:3:67;;211:681;-1:-1:-1;;;;;;211:681:67:o;1823:1636::-;2025:4;2054:2;2094;2083:9;2079:18;2124:2;2113:9;2106:21;2147:6;2182;2176:13;2213:6;2205;2198:22;2239:2;2229:12;;2272:2;2261:9;2257:18;2250:25;;2334:2;2324:6;2321:1;2317:14;2306:9;2302:30;2298:39;2372:2;2364:6;2360:15;2393:1;2414;2424:1006;2440:6;2435:3;2432:15;2424:1006;;;2509:22;;;-1:-1:-1;;2505:36:67;2493:49;;2565:13;;2652:9;;-1:-1:-1;;;;;2648:58:67;2633:74;;2746:11;;2740:18;2778:15;;;2771:27;;;2859:19;;2605:15;;;2891:24;;;2981:21;;;;3026:1;;2949:2;2937:15;;;3040:282;3056:8;3051:3;3048:17;3040:282;;;3137:15;;3154:66;3133:88;3119:103;;3291:17;;;;3084:1;3075:11;;;;;3248:14;;;;3040:282;;;-1:-1:-1;3408:12:67;;;;3345:5;-1:-1:-1;;;3373:15:67;;;;2466:1;2457:11;2424:1006;;;-1:-1:-1;3447:6:67;;1823:1636;-1:-1:-1;;;;;;;;;1823:1636:67:o;3464:250::-;3549:1;3559:113;3573:6;3570:1;3567:13;3559:113;;;3649:11;;;3643:18;3630:11;;;3623:39;3595:2;3588:10;3559:113;;;-1:-1:-1;;3706:1:67;3688:16;;3681:27;3464:250::o;3719:271::-;3761:3;3799:5;3793:12;3826:6;3821:3;3814:19;3842:76;3911:6;3904:4;3899:3;3895:14;3888:4;3881:5;3877:16;3842:76;:::i;:::-;3972:2;3951:15;-1:-1:-1;;3947:29:67;3938:39;;;;3979:4;3934:50;;3719:271;-1:-1:-1;;3719:271:67:o;3995:803::-;4157:4;4186:2;4226;4215:9;4211:18;4256:2;4245:9;4238:21;4279:6;4314;4308:13;4345:6;4337;4330:22;4383:2;4372:9;4368:18;4361:25;;4445:2;4435:6;4432:1;4428:14;4417:9;4413:30;4409:39;4395:53;;4483:2;4475:6;4471:15;4504:1;4514:255;4528:6;4525:1;4522:13;4514:255;;;4621:2;4617:7;4605:9;4597:6;4593:22;4589:36;4584:3;4577:49;4649:40;4682:6;4673;4667:13;4649:40;:::i;:::-;4639:50;-1:-1:-1;4747:12:67;;;;4712:15;;;;4550:1;4543:9;4514:255;;;-1:-1:-1;4786:6:67;;3995:803;-1:-1:-1;;;;;;;3995:803:67:o;5338:184::-;-1:-1:-1;;;5387:1:67;5380:88;5487:4;5484:1;5477:15;5511:4;5508:1;5501:15;5527:897;5607:6;5660:2;5648:9;5639:7;5635:23;5631:32;5628:52;;;5676:1;5673;5666:12;5628:52;5709:9;5703:16;5738:18;5779:2;5771:6;5768:14;5765:34;;;5795:1;5792;5785:12;5765:34;5833:6;5822:9;5818:22;5808:32;;5878:7;5871:4;5867:2;5863:13;5859:27;5849:55;;5900:1;5897;5890:12;5849:55;5929:2;5923:9;5951:2;5947;5944:10;5941:36;;;5957:18;;:::i;:::-;6032:2;6026:9;6000:2;6086:13;;-1:-1:-1;;6082:22:67;;;6106:2;6078:31;6074:40;6062:53;;;6130:18;;;6150:22;;;6127:46;6124:72;;;6176:18;;:::i;:::-;6216:10;6212:2;6205:22;6251:2;6243:6;6236:18;6291:7;6286:2;6281;6277;6273:11;6269:20;6266:33;6263:53;;;6312:1;6309;6302:12;6263:53;6325:68;6390:2;6385;6377:6;6373:15;6368:2;6364;6360:11;6325:68;:::i;:::-;6412:6;5527:897;-1:-1:-1;;;;;;;5527:897:67:o;6429:220::-;6578:2;6567:9;6560:21;6541:4;6598:45;6639:2;6628:9;6624:18;6616:6;6598:45;:::i;:::-;6590:53;6429:220;-1:-1:-1;;;6429:220:67:o;6654:184::-;6724:6;6777:2;6765:9;6756:7;6752:23;6748:32;6745:52;;;6793:1;6790;6783:12;6745:52;-1:-1:-1;6816:16:67;;6654:184;-1:-1:-1;6654:184:67:o;10971:437::-;11050:1;11046:12;;;;11093;;;11114:61;;11168:4;11160:6;11156:17;11146:27;;11114:61;11221:2;11213:6;11210:14;11190:18;11187:38;11184:218;;-1:-1:-1;;;11255:1:67;11248:88;11359:4;11356:1;11349:15;11387:4;11384:1;11377:15;11184:218;;10971:437;;;:::o;11715:430::-;11912:66;11904:6;11900:79;11895:3;11888:92;11870:3;12009:6;12003:13;12025:74;12092:6;12088:1;12083:3;12079:11;12072:4;12064:6;12060:17;12025:74;:::i;:::-;12119:16;;;;12137:1;12115:24;;11715:430;-1:-1:-1;;;11715:430:67:o;12150:287::-;12279:3;12317:6;12311:13;12333:66;12392:6;12387:3;12380:4;12372:6;12368:17;12333:66;:::i;:::-;12415:16;;;;;12150:287;-1:-1:-1;;12150:287:67:o;12442:277::-;12509:6;12562:2;12550:9;12541:7;12537:23;12533:32;12530:52;;;12578:1;12575;12568:12;12530:52;12610:9;12604:16;12663:5;12656:13;12649:21;12642:5;12639:32;12629:60;;12685:1;12682;12675:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ARBITRUM_GOERLI_CHAIN_ID()": "1a0cbd4f",
    "ARBITRUM_GOERLI_DOMAIN_ID()": "e5734ee6",
    "CONNEXT_ARBITRUM_GOERLI()": "2e48aae0",
    "CONNEXT_GOERLI()": "808da30a",
    "CONNEXT_MUMBAI()": "bcc160d2",
    "CONNEXT_OPTIMISM_GOERLI()": "72cb60cf",
    "GOERLI_CHAIN_ID()": "8a97bec9",
    "GOERLI_DOMAIN_ID()": "90c55ee3",
    "IS_TEST()": "fa7626d4",
    "MOCK_CONNEXT()": "8fd6d856",
    "MOCK_ERC20()": "f8d78542",
    "OPTIMISM_GOERLI_CHAIN_ID()": "50d8371b",
    "OPTIMISM_GOERLI_DOMAIN_ID()": "c63ca77c",
    "POLYGON_MUMBAI_CHAIN_ID()": "d0da02ae",
    "POLYGON_MUMBAI_DOMAIN_ID()": "71e94408",
    "TEST_ERC20_ARBITRUM_GOERLI()": "b98f2869",
    "TEST_ERC20_GOERLI()": "26f7afad",
    "TEST_ERC20_MUMBAI()": "5e6b9c4d",
    "TEST_ERC20_OPTIMISM_GOERLI()": "f74f6e83",
    "USER_CHAIN_A()": "420652a0",
    "USER_CHAIN_B()": "557ce7e9",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "goerliFork()": "a7124a3f",
    "optimismGoerliFork()": "52414d45",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARBITRUM_GOERLI_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARBITRUM_GOERLI_DOMAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONNEXT_ARBITRUM_GOERLI\",\"outputs\":[{\"internalType\":\"contract IConnext\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONNEXT_GOERLI\",\"outputs\":[{\"internalType\":\"contract IConnext\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONNEXT_MUMBAI\",\"outputs\":[{\"internalType\":\"contract IConnext\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"CONNEXT_OPTIMISM_GOERLI\",\"outputs\":[{\"internalType\":\"contract IConnext\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOERLI_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOERLI_DOMAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MOCK_CONNEXT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MOCK_ERC20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPTIMISM_GOERLI_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPTIMISM_GOERLI_DOMAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POLYGON_MUMBAI_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POLYGON_MUMBAI_DOMAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEST_ERC20_ARBITRUM_GOERLI\",\"outputs\":[{\"internalType\":\"contract ERC20PresetMinterPauser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEST_ERC20_GOERLI\",\"outputs\":[{\"internalType\":\"contract ERC20PresetMinterPauser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEST_ERC20_MUMBAI\",\"outputs\":[{\"internalType\":\"contract ERC20PresetMinterPauser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TEST_ERC20_OPTIMISM_GOERLI\",\"outputs\":[{\"internalType\":\"contract ERC20PresetMinterPauser\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER_CHAIN_A\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER_CHAIN_B\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"goerliFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimismGoerliFork\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CONNEXT_GOERLI()\":{\"notice\":\"Testnet Addresses\"},\"GOERLI_CHAIN_ID()\":{\"notice\":\"Testnet Chain IDs\"},\"GOERLI_DOMAIN_ID()\":{\"notice\":\"Testnet Domain IDs\"},\"USER_CHAIN_A()\":{\"notice\":\"Mock Addresses\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contract-examples/test/utils/ForkTestHelper.sol\":\"ForkTestHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@aave/=lib/aave-v3-core/\",\":@clones/=lib/clones-with-immutable-args/src/\",\":@connext/interfaces/=lib/interfaces/\",\":@ds/=lib/ds-test/src/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@hardhat/=lib/hardhat/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":ExcessivelySafeCall/=lib/nxtp/packages/deployments/contracts/lib/ExcessivelySafeCall/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/\",\":hardhat/=lib/hardhat/\",\":interfaces/=lib/interfaces/\",\":nxtp/=lib/nxtp/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":relay-context-contracts/=lib/nxtp/packages/deployments/contracts/lib/relay-context-contracts/contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c\",\"dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x38c788c4869b7692243c98de26857f392175ba292de160d9eac24fa34ed1d1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4b18b42ccd9f51ace79f470fe2d196974ae867667c5a7e9b7e8ddb47a5e83a6\",\"dweb:/ipfs/QmZ8AJdCrMVFLsZJsvp2d4Zi7c7wVgQh45XrVwdrzR3Vmr\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf6746576912986486f4e5eccdb6b3bbb03e47c4da75a59acc4b1c313b8d31d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01fd4243d8a85cc7f07b6c5ac9e3f5f38b2443ef82025953c3badb39099fe2e4\",\"dweb:/ipfs/QmVDUyQ3tE4a2b87wJDAkwwyFwRpUPGuy8yJDV9JgHqnrd\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x8134c22af343e12f0ee5c565a2eb0d8a5472da7f499abac7b519f634a69c7c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1552599c06a879f4938e14b1fd1e4a4a7eda097b1c984ce0a9cbca33ea64f7d6\",\"dweb:/ipfs/QmNxyLpvNX3woGMHJAQGz89dzRsMFaxT38ZmtgPVMG2DLD\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3\",\"dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/interfaces/core/IConnext.sol\":{\"keccak256\":\"0x09fe61977b64d12fcd1880b35ddf07ffa920fecd5036a7cf85df80fdf50abd2b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://041d896a16a9d76bdd677b330c8bf4a9d4dc5d22ac04824f383c1ee237674668\",\"dweb:/ipfs/Qmc75swFNvdSsNe8kf89puzFqXsdFYJ8AiZCHGVWuUpK6J\"]},\"lib/interfaces/libraries/LibConnextStorage.sol\":{\"keccak256\":\"0x95241d3704d1432575f53a8f05dab15d91e9a5511a0cf08d7ec2f91f6b951acf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2cd1eb6e0e241f8bcbdccaf9a9f51962ed230eee18657e0ded3662c58e9e6e83\",\"dweb:/ipfs/Qmbyv5tDA3cVcPjHeMd99s2LcU3vWD9RLzznC6AQemdAjD\"]},\"lib/interfaces/libraries/TokenId.sol\":{\"keccak256\":\"0x739ba51d97924bcd9465d0bd20499dcaff664e4eaaff5b730b6b93714d4844c8\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0c483b8eff1d5637ccb9180aedcaea0e44b25f3bda14661685e0fefdd843151f\",\"dweb:/ipfs/Qmd4eW4AjNAZWEeoFFopdQ8LSFf3m96iTUtCvz8yZRW4Ed\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x8d29c5ce9b0d56701c1bf9dce816baa3d8665cea300abdd65e6f16314efcebc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cfab8ea48d554b8e071cb977be570c78f95a018aa5f71401c512b2b93001b8a9\",\"dweb:/ipfs/QmP73h6SJsZ857EHM2dhUURaqXbZFaJwVESryfxufvy7Hw\"]},\"lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"lib/openzeppelin-contracts/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://21dbc5b8aede7dee8f0e3bf296a58270f376f8e40d6f8becccde5b3cf34bc8df\",\"dweb:/ipfs/QmfHPWrtGiMNhTtLDYtqSd1eVd35Zqgd4PW9bR3i23oJgg\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1\",\"dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol\":{\"keccak256\":\"0xa09b8026d2cdd778f74f2a415597b29f0f6300ea9093fb1aabd6ed83804676b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28a480dcce1f7842306d55cdda903aa73e43fcecffef85ebf99d1b9008fffa6b\",\"dweb:/ipfs/QmZPoqRJsAVRBraQmP7ReZp58A2rd3Td8XdPdwXcpbcWPs\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol\":{\"keccak256\":\"0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b\",\"dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf\",\"dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903\",\"dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xacbaaa9be521944f83d2852379e1f40b28ada61a256493474f6cdc9b59620598\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15aa625baf68ba948a074361f38f7cf0e6198ba67d1d808c43865409296f1e72\",\"dweb:/ipfs/Qmbcae8x18H5Uzp2DsQcfZH3PMxokhhVCcwks22CDqVsPQ\"]},\"src/contract-examples/test/utils/ForkTestHelper.sol\":{\"keccak256\":\"0x000c2ba571f95731c06c322a68f6809d2d7ace2c88f7c754638171e1c0519144\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ca2191e867e300c0f3f84eb9b67d601ef2c2de097de6440c063f7072da4dcf16\",\"dweb:/ipfs/QmUSXMqKH6S53bq7Bh2GmUGNcJqcxisMCixbzu4dwVQUoX\"]},\"src/contract-examples/test/utils/TestHelper.sol\":{\"keccak256\":\"0x5ad52143b6e94fb5e5f3cf5b8b857212ac9cdfe6e3e93803bec996db980bef74\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8472e7a27b8d63e5c2b2565222285b6e6efada9dc02bb844f30c8a83dd5684eb\",\"dweb:/ipfs/Qme8habJwqg82TbVCRwo8cXrCg4GDJyhRS1Fuf9QCCZNYW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ARBITRUM_GOERLI_CHAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ARBITRUM_GOERLI_DOMAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONNEXT_ARBITRUM_GOERLI",
          "outputs": [
            {
              "internalType": "contract IConnext",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONNEXT_GOERLI",
          "outputs": [
            {
              "internalType": "contract IConnext",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONNEXT_MUMBAI",
          "outputs": [
            {
              "internalType": "contract IConnext",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CONNEXT_OPTIMISM_GOERLI",
          "outputs": [
            {
              "internalType": "contract IConnext",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GOERLI_CHAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GOERLI_DOMAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MOCK_CONNEXT",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MOCK_ERC20",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPTIMISM_GOERLI_CHAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPTIMISM_GOERLI_DOMAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POLYGON_MUMBAI_CHAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POLYGON_MUMBAI_DOMAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TEST_ERC20_ARBITRUM_GOERLI",
          "outputs": [
            {
              "internalType": "contract ERC20PresetMinterPauser",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TEST_ERC20_GOERLI",
          "outputs": [
            {
              "internalType": "contract ERC20PresetMinterPauser",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TEST_ERC20_MUMBAI",
          "outputs": [
            {
              "internalType": "contract ERC20PresetMinterPauser",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TEST_ERC20_OPTIMISM_GOERLI",
          "outputs": [
            {
              "internalType": "contract ERC20PresetMinterPauser",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USER_CHAIN_A",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USER_CHAIN_B",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "goerliFork",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "optimismGoerliFork",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CONNEXT_GOERLI()": {
            "notice": "Testnet Addresses"
          },
          "GOERLI_CHAIN_ID()": {
            "notice": "Testnet Chain IDs"
          },
          "GOERLI_DOMAIN_ID()": {
            "notice": "Testnet Domain IDs"
          },
          "USER_CHAIN_A()": {
            "notice": "Mock Addresses"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=lib/aave-v3-core/",
        "@clones/=lib/clones-with-immutable-args/src/",
        "@connext/interfaces/=lib/interfaces/",
        "@ds/=lib/ds-test/src/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@gelatonetwork/=node_modules/@gelatonetwork/",
        "@hardhat/=lib/hardhat/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "ExcessivelySafeCall/=lib/nxtp/packages/deployments/contracts/lib/ExcessivelySafeCall/src/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/",
        "hardhat/=lib/hardhat/",
        "interfaces/=lib/interfaces/",
        "nxtp/=lib/nxtp/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "relay-context-contracts/=lib/nxtp/packages/deployments/contracts/lib/relay-context-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contract-examples/test/utils/ForkTestHelper.sol": "ForkTestHelper"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9",
        "urls": [
          "bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c",
          "dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x38c788c4869b7692243c98de26857f392175ba292de160d9eac24fa34ed1d1b8",
        "urls": [
          "bzz-raw://d4b18b42ccd9f51ace79f470fe2d196974ae867667c5a7e9b7e8ddb47a5e83a6",
          "dweb:/ipfs/QmZ8AJdCrMVFLsZJsvp2d4Zi7c7wVgQh45XrVwdrzR3Vmr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf6746576912986486f4e5eccdb6b3bbb03e47c4da75a59acc4b1c313b8d31d9f",
        "urls": [
          "bzz-raw://01fd4243d8a85cc7f07b6c5ac9e3f5f38b2443ef82025953c3badb39099fe2e4",
          "dweb:/ipfs/QmVDUyQ3tE4a2b87wJDAkwwyFwRpUPGuy8yJDV9JgHqnrd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x8134c22af343e12f0ee5c565a2eb0d8a5472da7f499abac7b519f634a69c7c4d",
        "urls": [
          "bzz-raw://1552599c06a879f4938e14b1fd1e4a4a7eda097b1c984ce0a9cbca33ea64f7d6",
          "dweb:/ipfs/QmNxyLpvNX3woGMHJAQGz89dzRsMFaxT38ZmtgPVMG2DLD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a",
        "urls": [
          "bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3",
          "dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/interfaces/core/IConnext.sol": {
        "keccak256": "0x09fe61977b64d12fcd1880b35ddf07ffa920fecd5036a7cf85df80fdf50abd2b",
        "urls": [
          "bzz-raw://041d896a16a9d76bdd677b330c8bf4a9d4dc5d22ac04824f383c1ee237674668",
          "dweb:/ipfs/Qmc75swFNvdSsNe8kf89puzFqXsdFYJ8AiZCHGVWuUpK6J"
        ],
        "license": "UNLICENSED"
      },
      "lib/interfaces/libraries/LibConnextStorage.sol": {
        "keccak256": "0x95241d3704d1432575f53a8f05dab15d91e9a5511a0cf08d7ec2f91f6b951acf",
        "urls": [
          "bzz-raw://2cd1eb6e0e241f8bcbdccaf9a9f51962ed230eee18657e0ded3662c58e9e6e83",
          "dweb:/ipfs/Qmbyv5tDA3cVcPjHeMd99s2LcU3vWD9RLzznC6AQemdAjD"
        ],
        "license": "UNLICENSED"
      },
      "lib/interfaces/libraries/TokenId.sol": {
        "keccak256": "0x739ba51d97924bcd9465d0bd20499dcaff664e4eaaff5b730b6b93714d4844c8",
        "urls": [
          "bzz-raw://0c483b8eff1d5637ccb9180aedcaea0e44b25f3bda14661685e0fefdd843151f",
          "dweb:/ipfs/Qmd4eW4AjNAZWEeoFFopdQ8LSFf3m96iTUtCvz8yZRW4Ed"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControl.sol": {
        "keccak256": "0x8d29c5ce9b0d56701c1bf9dce816baa3d8665cea300abdd65e6f16314efcebc6",
        "urls": [
          "bzz-raw://cfab8ea48d554b8e071cb977be570c78f95a018aa5f71401c512b2b93001b8a9",
          "dweb:/ipfs/QmP73h6SJsZ857EHM2dhUURaqXbZFaJwVESryfxufvy7Hw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/AccessControlEnumerable.sol": {
        "keccak256": "0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247",
        "urls": [
          "bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b",
          "dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControl.sol": {
        "keccak256": "0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57",
        "urls": [
          "bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a",
          "dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/IAccessControlEnumerable.sol": {
        "keccak256": "0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676",
        "urls": [
          "bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276",
          "dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xb62681ccbf84aef125665cfdfc0bf13b532925b1a520d6c935913560f539a31b",
        "urls": [
          "bzz-raw://21dbc5b8aede7dee8f0e3bf296a58270f376f8e40d6f8becccde5b3cf34bc8df",
          "dweb:/ipfs/QmfHPWrtGiMNhTtLDYtqSd1eVd35Zqgd4PW9bR3i23oJgg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x00c839ff53d07d19db2e7cfa1e5133f9ee90a8d64b0e2e57f50446a2d1a3a0e0",
        "urls": [
          "bzz-raw://3dac621d015a68a5251b1e5d41dda0faf252699bf6e8bcf46a958b29964d9dd1",
          "dweb:/ipfs/QmP9axjgZv4cezAhALoTemM62sdLtMDJ9MGTxECnNwHgSJ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
        "keccak256": "0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b",
        "urls": [
          "bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f",
          "dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/ERC20Pausable.sol": {
        "keccak256": "0xa09b8026d2cdd778f74f2a415597b29f0f6300ea9093fb1aabd6ed83804676b5",
        "urls": [
          "bzz-raw://28a480dcce1f7842306d55cdda903aa73e43fcecffef85ebf99d1b9008fffa6b",
          "dweb:/ipfs/QmZPoqRJsAVRBraQmP7ReZp58A2rd3Td8XdPdwXcpbcWPs"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol": {
        "keccak256": "0x2cd54808b851c4db22f459065af0b7a952262741a85a73923e7a660767cd7baa",
        "urls": [
          "bzz-raw://750c4a78e953fe92317bba7166afd0a4b7725723e5822ea1b92ffd4e72d2d36b",
          "dweb:/ipfs/QmZNyCSrdYXGQfmB6LkbX8R6y4gGZRNh1d2pJobYBpkaRF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x2626d8ab3dfdad0fad630c212ad146d59473d0f48b771784c61a7c1dbbea1f3f",
        "urls": [
          "bzz-raw://d7c144532f1e7c76ac95fb6a8f617c1f740d7a73442a907eb60910e99dfa1fbf",
          "dweb:/ipfs/QmZsGyooD6emxB8JCuugRjnRYS2MPZEL586uuV7dgC8Jng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x3546b156d97633f7f8cad536d5454c81d1d604687c02b2eb105fdc33cb962b41",
        "urls": [
          "bzz-raw://fc373869014f80e7ad928ae44bb7678a2d7aacf213fb0ce36bcbbb3166845903",
          "dweb:/ipfs/QmUaRPa2Nm2WfKeCq8yRCR94JZFCnfr4xw9LJADWxhTcwt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc",
        "urls": [
          "bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7",
          "dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0xacbaaa9be521944f83d2852379e1f40b28ada61a256493474f6cdc9b59620598",
        "urls": [
          "bzz-raw://15aa625baf68ba948a074361f38f7cf0e6198ba67d1d808c43865409296f1e72",
          "dweb:/ipfs/Qmbcae8x18H5Uzp2DsQcfZH3PMxokhhVCcwks22CDqVsPQ"
        ],
        "license": "MIT"
      },
      "src/contract-examples/test/utils/ForkTestHelper.sol": {
        "keccak256": "0x000c2ba571f95731c06c322a68f6809d2d7ace2c88f7c754638171e1c0519144",
        "urls": [
          "bzz-raw://ca2191e867e300c0f3f84eb9b67d601ef2c2de097de6440c063f7072da4dcf16",
          "dweb:/ipfs/QmUSXMqKH6S53bq7Bh2GmUGNcJqcxisMCixbzu4dwVQUoX"
        ],
        "license": "UNLICENSED"
      },
      "src/contract-examples/test/utils/TestHelper.sol": {
        "keccak256": "0x5ad52143b6e94fb5e5f3cf5b8b857212ac9cdfe6e3e93803bec996db980bef74",
        "urls": [
          "bzz-raw://8472e7a27b8d63e5c2b2565222285b6e6efada9dc02bb844f30c8a83dd5684eb",
          "dweb:/ipfs/Qme8habJwqg82TbVCRwo8cXrCg4GDJyhRS1Fuf9QCCZNYW"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contract-examples/test/utils/ForkTestHelper.sol",
    "id": 33890,
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "ERC20PresetMinterPauser": [
        28572
      ],
      "ForkTestHelper": [
        33889
      ],
      "IConnext": [
        26943
      ],
      "IERC20": [
        28330
      ],
      "StdAssertions": [
        3129
      ],
      "StdChains": [
        3793
      ],
      "StdCheats": [
        5754
      ],
      "StdInvariant": [
        6044
      ],
      "StdStorage": [
        6794
      ],
      "StdUtils": [
        9034
      ],
      "Test": [
        9081
      ],
      "TestBase": [
        1846
      ],
      "TestHelper": [
        33998
      ],
      "Vm": [
        10371
      ],
      "console": [
        18435
      ],
      "console2": [
        26531
      ],
      "stdError": [
        5820
      ],
      "stdJson": [
        6620
      ],
      "stdMath": [
        6762
      ],
      "stdStorage": [
        8227
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2161:65",
    "nodes": [
      {
        "id": 33714,
        "nodeType": "PragmaDirective",
        "src": "39:24:65",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 33715,
        "nodeType": "ImportDirective",
        "src": "65:23:65",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "@std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33890,
        "sourceUnit": 9082,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 33717,
        "nodeType": "ImportDirective",
        "src": "89:44:65",
        "nodes": [],
        "absolutePath": "src/contract-examples/test/utils/TestHelper.sol",
        "file": "./TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33890,
        "sourceUnit": 33999,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33716,
              "name": "TestHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33998,
              "src": "97:10:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33719,
        "nodeType": "ImportDirective",
        "src": "134:63:65",
        "nodes": [],
        "absolutePath": "lib/interfaces/core/IConnext.sol",
        "file": "@connext/interfaces/core/IConnext.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33890,
        "sourceUnit": 26944,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33718,
              "name": "IConnext",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26943,
              "src": "142:8:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33721,
        "nodeType": "ImportDirective",
        "src": "198:70:65",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33890,
        "sourceUnit": 28331,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33720,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28330,
              "src": "206:6:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33723,
        "nodeType": "ImportDirective",
        "src": "269:112:65",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "file": "@openzeppelin/contracts/token/ERC20/presets/ERC20PresetMinterPauser.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33890,
        "sourceUnit": 28573,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33722,
              "name": "ERC20PresetMinterPauser",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28572,
              "src": "277:23:65",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33889,
        "nodeType": "ContractDefinition",
        "src": "383:1816:65",
        "nodes": [
          {
            "id": 33732,
            "nodeType": "VariableDeclaration",
            "src": "449:85:65",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 33726,
              "nodeType": "StructuredDocumentation",
              "src": "425:21:65",
              "text": "Testnet Addresses"
            },
            "functionSelector": "808da30a",
            "mutability": "mutable",
            "name": "CONNEXT_GOERLI",
            "nameLocation": "465:14:65",
            "scope": 33889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConnext_$26943",
              "typeString": "contract IConnext"
            },
            "typeName": {
              "id": 33728,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33727,
                "name": "IConnext",
                "nameLocations": [
                  "449:8:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26943,
                "src": "449:8:65"
              },
              "referencedDeclaration": 26943,
              "src": "449:8:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConnext_$26943",
                "typeString": "contract IConnext"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846436130383032344136443462436338373237356231453441314532324237316641443766363439",
                  "id": 33730,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "491:42:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xFCa08024A6D4bCc87275b1E4A1E22B71fAD7f649"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33729,
                "name": "IConnext",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 26943,
                "src": "482:8:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IConnext_$26943_$",
                  "typeString": "type(contract IConnext)"
                }
              },
              "id": 33731,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "482:52:65",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConnext_$26943",
                "typeString": "contract IConnext"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33738,
            "nodeType": "VariableDeclaration",
            "src": "538:94:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "72cb60cf",
            "mutability": "mutable",
            "name": "CONNEXT_OPTIMISM_GOERLI",
            "nameLocation": "554:23:65",
            "scope": 33889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConnext_$26943",
              "typeString": "contract IConnext"
            },
            "typeName": {
              "id": 33734,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33733,
                "name": "IConnext",
                "nameLocations": [
                  "538:8:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26943,
                "src": "538:8:65"
              },
              "referencedDeclaration": 26943,
              "src": "538:8:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConnext_$26943",
                "typeString": "contract IConnext"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835456131626232343233323630343436393943336438313334316335663533356435416631353034",
                  "id": 33736,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "589:42:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x5Ea1bb242326044699C3d81341c5f535d5Af1504"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33735,
                "name": "IConnext",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 26943,
                "src": "580:8:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IConnext_$26943_$",
                  "typeString": "type(contract IConnext)"
                }
              },
              "id": 33737,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "580:52:65",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConnext_$26943",
                "typeString": "contract IConnext"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33744,
            "nodeType": "VariableDeclaration",
            "src": "636:85:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "bcc160d2",
            "mutability": "mutable",
            "name": "CONNEXT_MUMBAI",
            "nameLocation": "652:14:65",
            "scope": 33889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConnext_$26943",
              "typeString": "contract IConnext"
            },
            "typeName": {
              "id": 33740,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33739,
                "name": "IConnext",
                "nameLocations": [
                  "636:8:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26943,
                "src": "636:8:65"
              },
              "referencedDeclaration": 26943,
              "src": "636:8:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConnext_$26943",
                "typeString": "contract IConnext"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307832333334393337383436416232413346434537343762333235383765314131413266364545433561",
                  "id": 33742,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "678:42:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x2334937846Ab2A3FCE747b32587e1A1A2f6EEC5a"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33741,
                "name": "IConnext",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 26943,
                "src": "669:8:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IConnext_$26943_$",
                  "typeString": "type(contract IConnext)"
                }
              },
              "id": 33743,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "669:52:65",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConnext_$26943",
                "typeString": "contract IConnext"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33750,
            "nodeType": "VariableDeclaration",
            "src": "725:94:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "2e48aae0",
            "mutability": "mutable",
            "name": "CONNEXT_ARBITRUM_GOERLI",
            "nameLocation": "741:23:65",
            "scope": 33889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConnext_$26943",
              "typeString": "contract IConnext"
            },
            "typeName": {
              "id": 33746,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33745,
                "name": "IConnext",
                "nameLocations": [
                  "725:8:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 26943,
                "src": "725:8:65"
              },
              "referencedDeclaration": 26943,
              "src": "725:8:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConnext_$26943",
                "typeString": "contract IConnext"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307832303735633945333166393733626235334341453542414333366138656542344230383241444332",
                  "id": 33748,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "776:42:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x2075c9E31f973bb53CAE5BAC36a8eeB4B082ADC2"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33747,
                "name": "IConnext",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 26943,
                "src": "767:8:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IConnext_$26943_$",
                  "typeString": "type(contract IConnext)"
                }
              },
              "id": 33749,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "767:52:65",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConnext_$26943",
                "typeString": "contract IConnext"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33756,
            "nodeType": "VariableDeclaration",
            "src": "824:118:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "26f7afad",
            "mutability": "mutable",
            "name": "TEST_ERC20_GOERLI",
            "nameLocation": "855:17:65",
            "scope": 33889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
              "typeString": "contract ERC20PresetMinterPauser"
            },
            "typeName": {
              "id": 33752,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33751,
                "name": "ERC20PresetMinterPauser",
                "nameLocations": [
                  "824:23:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28572,
                "src": "824:23:65"
              },
              "referencedDeclaration": 28572,
              "src": "824:23:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837656136654134394230623041653963356462373930376431333944394364333433393836326131",
                  "id": 33754,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "899:42:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7ea6eA49B0b0Ae9c5db7907d139D9Cd3439862a1"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33753,
                "name": "ERC20PresetMinterPauser",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 28572,
                "src": "875:23:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$28572_$",
                  "typeString": "type(contract ERC20PresetMinterPauser)"
                }
              },
              "id": 33755,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "875:67:65",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33762,
            "nodeType": "VariableDeclaration",
            "src": "946:127:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "f74f6e83",
            "mutability": "mutable",
            "name": "TEST_ERC20_OPTIMISM_GOERLI",
            "nameLocation": "977:26:65",
            "scope": 33889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
              "typeString": "contract ERC20PresetMinterPauser"
            },
            "typeName": {
              "id": 33758,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33757,
                "name": "ERC20PresetMinterPauser",
                "nameLocations": [
                  "946:23:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28572,
                "src": "946:23:65"
              },
              "referencedDeclaration": 28572,
              "src": "946:23:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836384462316338643835433039643534363039374336356563374443424646344436343937436246",
                  "id": 33760,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1030:42:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x68Db1c8d85C09d546097C65ec7DCBFF4D6497CbF"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33759,
                "name": "ERC20PresetMinterPauser",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 28572,
                "src": "1006:23:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$28572_$",
                  "typeString": "type(contract ERC20PresetMinterPauser)"
                }
              },
              "id": 33761,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1006:67:65",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33768,
            "nodeType": "VariableDeclaration",
            "src": "1077:118:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "5e6b9c4d",
            "mutability": "mutable",
            "name": "TEST_ERC20_MUMBAI",
            "nameLocation": "1108:17:65",
            "scope": 33889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
              "typeString": "contract ERC20PresetMinterPauser"
            },
            "typeName": {
              "id": 33764,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33763,
                "name": "ERC20PresetMinterPauser",
                "nameLocations": [
                  "1077:23:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28572,
                "src": "1077:23:65"
              },
              "referencedDeclaration": 28572,
              "src": "1077:23:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307865446239354438303337663736394237324141616234316465654339323930334139384339453136",
                  "id": 33766,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1152:42:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xeDb95D8037f769B72AAab41deeC92903A98C9E16"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33765,
                "name": "ERC20PresetMinterPauser",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 28572,
                "src": "1128:23:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$28572_$",
                  "typeString": "type(contract ERC20PresetMinterPauser)"
                }
              },
              "id": 33767,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1128:67:65",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33774,
            "nodeType": "VariableDeclaration",
            "src": "1199:127:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "b98f2869",
            "mutability": "mutable",
            "name": "TEST_ERC20_ARBITRUM_GOERLI",
            "nameLocation": "1230:26:65",
            "scope": 33889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
              "typeString": "contract ERC20PresetMinterPauser"
            },
            "typeName": {
              "id": 33770,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33769,
                "name": "ERC20PresetMinterPauser",
                "nameLocations": [
                  "1199:23:65"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 28572,
                "src": "1199:23:65"
              },
              "referencedDeclaration": 28572,
              "src": "1199:23:65",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307844433830356541616142643646363839303463413730364332323163373246386138613638463966",
                  "id": 33772,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "1283:42:65",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xDC805eAaaBd6F68904cA706C221c72F8a8a68F9f"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 33771,
                "name": "ERC20PresetMinterPauser",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 28572,
                "src": "1259:23:65",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_ERC20PresetMinterPauser_$28572_$",
                  "typeString": "type(contract ERC20PresetMinterPauser)"
                }
              },
              "id": 33773,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "1259:67:65",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                "typeString": "contract ERC20PresetMinterPauser"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33776,
            "nodeType": "VariableDeclaration",
            "src": "1345:25:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "a7124a3f",
            "mutability": "mutable",
            "name": "goerliFork",
            "nameLocation": "1360:10:65",
            "scope": 33889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33775,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1345:7:65",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33778,
            "nodeType": "VariableDeclaration",
            "src": "1374:33:65",
            "nodes": [],
            "constant": false,
            "functionSelector": "52414d45",
            "mutability": "mutable",
            "name": "optimismGoerliFork",
            "nameLocation": "1389:18:65",
            "scope": 33889,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33777,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1374:7:65",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33888,
            "nodeType": "FunctionDefinition",
            "src": "1412:785:65",
            "nodes": [],
            "body": {
              "id": 33887,
              "nodeType": "Block",
              "src": "1453:744:65",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33782,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "1459:5:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ForkTestHelper_$33889_$",
                          "typeString": "type(contract super ForkTestHelper)"
                        }
                      },
                      "id": 33784,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1465:5:65",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33997,
                      "src": "1459:11:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 33785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1459:13:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33786,
                  "nodeType": "ExpressionStatement",
                  "src": "1459:13:65"
                },
                {
                  "expression": {
                    "id": 33795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33787,
                      "name": "goerliFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33776,
                      "src": "1479:10:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "474f45524c495f5250435f55524c",
                              "id": 33792,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1519:16:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_59ee4a4e71ea94bb714df1943fcbf086b1f00337792a35b21ec2c79fc81bb061",
                                "typeString": "literal_string \"GOERLI_RPC_URL\""
                              },
                              "value": "GOERLI_RPC_URL"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_59ee4a4e71ea94bb714df1943fcbf086b1f00337792a35b21ec2c79fc81bb061",
                                "typeString": "literal_string \"GOERLI_RPC_URL\""
                              }
                            ],
                            "expression": {
                              "id": 33790,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1839,
                              "src": "1506:2:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10371",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33791,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1509:9:65",
                            "memberName": "envString",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9205,
                            "src": "1506:12:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (string memory) view external returns (string memory)"
                            }
                          },
                          "id": 33793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1506:30:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 33788,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1839,
                          "src": "1492:2:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$10371",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 33789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1495:10:65",
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10239,
                        "src": "1492:13:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 33794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1492:45:65",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1479:58:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33796,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:58:65"
                },
                {
                  "expression": {
                    "id": 33805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33797,
                      "name": "optimismGoerliFork",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33778,
                      "src": "1543:18:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "4f5054494d49534d5f474f45524c495f5250435f55524c",
                              "id": 33802,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1591:25:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fd1e9ccc7f9540672b301e97ceba4d1a0d886525dfec86dda520f6ea361394b4",
                                "typeString": "literal_string \"OPTIMISM_GOERLI_RPC_URL\""
                              },
                              "value": "OPTIMISM_GOERLI_RPC_URL"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_fd1e9ccc7f9540672b301e97ceba4d1a0d886525dfec86dda520f6ea361394b4",
                                "typeString": "literal_string \"OPTIMISM_GOERLI_RPC_URL\""
                              }
                            ],
                            "expression": {
                              "id": 33800,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1839,
                              "src": "1578:2:65",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$10371",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 33801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1581:9:65",
                            "memberName": "envString",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9205,
                            "src": "1578:12:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_string_memory_ptr_$",
                              "typeString": "function (string memory) view external returns (string memory)"
                            }
                          },
                          "id": 33803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1578:39:65",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "expression": {
                          "id": 33798,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1839,
                          "src": "1564:2:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$10371",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 33799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1567:10:65",
                        "memberName": "createFork",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 10239,
                        "src": "1564:13:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$_t_uint256_$",
                          "typeString": "function (string memory) external returns (uint256)"
                        }
                      },
                      "id": 33804,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1564:54:65",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1543:75:65",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 33806,
                  "nodeType": "ExpressionStatement",
                  "src": "1543:75:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33812,
                            "name": "CONNEXT_GOERLI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33732,
                            "src": "1646:14:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConnext_$26943",
                              "typeString": "contract IConnext"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IConnext_$26943",
                              "typeString": "contract IConnext"
                            }
                          ],
                          "id": 33811,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1638:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33810,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1638:7:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1638:23:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "436f6e6e6578742028476f65726c6929",
                        "id": 33814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1663:18:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f2c08649f2ddc3c6f3a618dd8fcf09dd5776fcf2e52fdb4f4896dd8631ddf081",
                          "typeString": "literal_string \"Connext (Goerli)\""
                        },
                        "value": "Connext (Goerli)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f2c08649f2ddc3c6f3a618dd8fcf09dd5776fcf2e52fdb4f4896dd8631ddf081",
                          "typeString": "literal_string \"Connext (Goerli)\""
                        }
                      ],
                      "expression": {
                        "id": 33807,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1629:2:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10371",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33809,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1632:5:65",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9471,
                      "src": "1629:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1629:53:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33816,
                  "nodeType": "ExpressionStatement",
                  "src": "1629:53:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33822,
                            "name": "CONNEXT_OPTIMISM_GOERLI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33738,
                            "src": "1705:23:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConnext_$26943",
                              "typeString": "contract IConnext"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IConnext_$26943",
                              "typeString": "contract IConnext"
                            }
                          ],
                          "id": 33821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1697:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33820,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1697:7:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33823,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1697:32:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "436f6e6e65787420284f7074696d69736d2d476f65726c6929",
                        "id": 33824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1731:27:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cb97901f7eb1474c8b922268310ea13ad90c5c8fd7706833aebdfb907d83d880",
                          "typeString": "literal_string \"Connext (Optimism-Goerli)\""
                        },
                        "value": "Connext (Optimism-Goerli)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cb97901f7eb1474c8b922268310ea13ad90c5c8fd7706833aebdfb907d83d880",
                          "typeString": "literal_string \"Connext (Optimism-Goerli)\""
                        }
                      ],
                      "expression": {
                        "id": 33817,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1688:2:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10371",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1691:5:65",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9471,
                      "src": "1688:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33825,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:71:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33826,
                  "nodeType": "ExpressionStatement",
                  "src": "1688:71:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33832,
                            "name": "CONNEXT_MUMBAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33744,
                            "src": "1782:14:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConnext_$26943",
                              "typeString": "contract IConnext"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IConnext_$26943",
                              "typeString": "contract IConnext"
                            }
                          ],
                          "id": 33831,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1774:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33830,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1774:7:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1774:23:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "436f6e6e65787420284d756d62616929",
                        "id": 33834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1799:18:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b9547250a3e0701093f7025766d016ea06b4871de1cc4eb9394fb7be1dc03cde",
                          "typeString": "literal_string \"Connext (Mumbai)\""
                        },
                        "value": "Connext (Mumbai)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b9547250a3e0701093f7025766d016ea06b4871de1cc4eb9394fb7be1dc03cde",
                          "typeString": "literal_string \"Connext (Mumbai)\""
                        }
                      ],
                      "expression": {
                        "id": 33827,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1765:2:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10371",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33829,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1768:5:65",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9471,
                      "src": "1765:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1765:53:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33836,
                  "nodeType": "ExpressionStatement",
                  "src": "1765:53:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33842,
                            "name": "CONNEXT_ARBITRUM_GOERLI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33750,
                            "src": "1841:23:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConnext_$26943",
                              "typeString": "contract IConnext"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IConnext_$26943",
                              "typeString": "contract IConnext"
                            }
                          ],
                          "id": 33841,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1833:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33840,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1833:7:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1833:32:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "436f6e6e6578742028417262697472756d2d476f65726c6929",
                        "id": 33844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1867:27:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b80e189862ba49d15a6460e2c6c887c42e7985e8f890873a2d283dab6cd1477",
                          "typeString": "literal_string \"Connext (Arbitrum-Goerli)\""
                        },
                        "value": "Connext (Arbitrum-Goerli)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b80e189862ba49d15a6460e2c6c887c42e7985e8f890873a2d283dab6cd1477",
                          "typeString": "literal_string \"Connext (Arbitrum-Goerli)\""
                        }
                      ],
                      "expression": {
                        "id": 33837,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1824:2:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10371",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33839,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1827:5:65",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9471,
                      "src": "1824:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1824:71:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33846,
                  "nodeType": "ExpressionStatement",
                  "src": "1824:71:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33852,
                            "name": "TEST_ERC20_GOERLI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33756,
                            "src": "1919:17:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                              "typeString": "contract ERC20PresetMinterPauser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                              "typeString": "contract ERC20PresetMinterPauser"
                            }
                          ],
                          "id": 33851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1911:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33850,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1911:7:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1911:26:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "546573742045524332302028476f65726c6929",
                        "id": 33854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1939:21:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b95331cb6c5dbc47deade06c6349ea903f86225f885758f167027b3cf2e186a6",
                          "typeString": "literal_string \"Test ERC20 (Goerli)\""
                        },
                        "value": "Test ERC20 (Goerli)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b95331cb6c5dbc47deade06c6349ea903f86225f885758f167027b3cf2e186a6",
                          "typeString": "literal_string \"Test ERC20 (Goerli)\""
                        }
                      ],
                      "expression": {
                        "id": 33847,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1902:2:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10371",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1905:5:65",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9471,
                      "src": "1902:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1902:59:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33856,
                  "nodeType": "ExpressionStatement",
                  "src": "1902:59:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33862,
                            "name": "TEST_ERC20_OPTIMISM_GOERLI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33762,
                            "src": "1984:26:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                              "typeString": "contract ERC20PresetMinterPauser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                              "typeString": "contract ERC20PresetMinterPauser"
                            }
                          ],
                          "id": 33861,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1976:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33860,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1976:7:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1976:35:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5465737420455243323020284f7074696d69736d2d476f65726c6929",
                        "id": 33864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2013:30:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_240f76976796a9d11bf6752ff94f9af651c3fa7cae8de1e4f97b0b7e785ac800",
                          "typeString": "literal_string \"Test ERC20 (Optimism-Goerli)\""
                        },
                        "value": "Test ERC20 (Optimism-Goerli)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_240f76976796a9d11bf6752ff94f9af651c3fa7cae8de1e4f97b0b7e785ac800",
                          "typeString": "literal_string \"Test ERC20 (Optimism-Goerli)\""
                        }
                      ],
                      "expression": {
                        "id": 33857,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1967:2:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10371",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1970:5:65",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9471,
                      "src": "1967:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1967:77:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33866,
                  "nodeType": "ExpressionStatement",
                  "src": "1967:77:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33872,
                            "name": "TEST_ERC20_MUMBAI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33768,
                            "src": "2067:17:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                              "typeString": "contract ERC20PresetMinterPauser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                              "typeString": "contract ERC20PresetMinterPauser"
                            }
                          ],
                          "id": 33871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2059:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33870,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2059:7:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2059:26:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "5465737420455243323020284d756d62616929",
                        "id": 33874,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2087:21:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_afd0f670dd1133b2dcf63c1a14041558e40c6909e636590910b70f87bc54ec19",
                          "typeString": "literal_string \"Test ERC20 (Mumbai)\""
                        },
                        "value": "Test ERC20 (Mumbai)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_afd0f670dd1133b2dcf63c1a14041558e40c6909e636590910b70f87bc54ec19",
                          "typeString": "literal_string \"Test ERC20 (Mumbai)\""
                        }
                      ],
                      "expression": {
                        "id": 33867,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "2050:2:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10371",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2053:5:65",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9471,
                      "src": "2050:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2050:59:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33876,
                  "nodeType": "ExpressionStatement",
                  "src": "2050:59:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33882,
                            "name": "TEST_ERC20_ARBITRUM_GOERLI",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33774,
                            "src": "2132:26:65",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                              "typeString": "contract ERC20PresetMinterPauser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20PresetMinterPauser_$28572",
                              "typeString": "contract ERC20PresetMinterPauser"
                            }
                          ],
                          "id": 33881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2124:7:65",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33880,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2124:7:65",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2124:35:65",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "546573742045524332302028417262697472756d2d476f65726c6929",
                        "id": 33884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2161:30:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9175da47179ab3285fe30812a6057938f133e1ee335d2c8cae1b2f0cc4a4b27a",
                          "typeString": "literal_string \"Test ERC20 (Arbitrum-Goerli)\""
                        },
                        "value": "Test ERC20 (Arbitrum-Goerli)"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9175da47179ab3285fe30812a6057938f133e1ee335d2c8cae1b2f0cc4a4b27a",
                          "typeString": "literal_string \"Test ERC20 (Arbitrum-Goerli)\""
                        }
                      ],
                      "expression": {
                        "id": 33877,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "2115:2:65",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10371",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2118:5:65",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9471,
                      "src": "2115:8:65",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2115:77:65",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33886,
                  "nodeType": "ExpressionStatement",
                  "src": "2115:77:65"
                }
              ]
            },
            "baseFunctions": [
              33997
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1421:5:65",
            "overrides": {
              "id": 33780,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1444:8:65"
            },
            "parameters": {
              "id": 33779,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1426:2:65"
            },
            "returnParameters": {
              "id": 33781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1453:0:65"
            },
            "scope": 33889,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33724,
              "name": "TestHelper",
              "nameLocations": [
                "410:10:65"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33998,
              "src": "410:10:65"
            },
            "id": 33725,
            "nodeType": "InheritanceSpecifier",
            "src": "410:10:65"
          }
        ],
        "canonicalName": "ForkTestHelper",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33889,
          33998,
          9081,
          1846,
          1843,
          9034,
          6044,
          5754,
          5365,
          3793,
          3129,
          1786
        ],
        "name": "ForkTestHelper",
        "nameLocation": "392:14:65",
        "scope": 33890,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 65
}