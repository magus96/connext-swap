{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "ARBITRUM_GOERLI_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ARBITRUM_GOERLI_DOMAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GOERLI_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "GOERLI_DOMAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MOCK_CONNEXT",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MOCK_ERC20",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPTIMISM_GOERLI_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OPTIMISM_GOERLI_DOMAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POLYGON_MUMBAI_CHAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "POLYGON_MUMBAI_DOMAIN_ID",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USER_CHAIN_A",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USER_CHAIN_B",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "asset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ping",
      "outputs": [
        {
          "internalType": "contract Ping",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pong",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "relayerFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Ping__startPingPong_shouldRevertIfInsufficientRelayerFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "pongs",
          "type": "uint256"
        }
      ],
      "name": "test_Ping__xReceive_shouldUpdatePings",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff191660011781557e01388100066eed000001a4000000050000270767617262676f7074676f6572601b55601c80546001600160a01b031990811673432584b89bca6cfa627794e794d5f6519df6287817909155601d805482167319385618d04c8a294cdc42af603defa985055efa179055601e80548216734226e80a951b2a4b3d85f16fdc98304a98ba3653179055601f8054821673676b53e69c58068efc40bd2be8571410303179e317905560218054821673188fcd5cf9ef16dcca9118fafa7971df7a86f5b51790556022919091557f1841d653f9c4edda9d66a7e7737b39763d6bd40f569a3ec6859d3305b72310e6602355662386f26fc1000060245560258054909116905534801561011f57600080fd5b50611ec58061012f6000396000f3fe608060405234801561001057600080fd5b50600436106101e55760003560e01c80638a97bec91161010f578063ba414fa6116100a2578063e20c9f7111610071578063e20c9f7114610443578063e5734ee61461044b578063f8d7854214610467578063fa7626d41461047a57600080fd5b8063ba414fa6146103d0578063bc9748a1146103e8578063c63ca77c146103fb578063d0da02ae1461041357600080fd5b8063916a17c6116100de578063916a17c6146103ae578063aa8c217c146103b6578063b5508aa9146103bf578063b80fd822146103c757600080fd5b80638a97bec9146103545780638e5e5edc146103785780638fd6d8561461038b57806390c55ee31461039e57600080fd5b8063420652a01161018757806366d9a9a01161015657806366d9a9a01461030257806371e94408146103175780637484cbd01461033757806385226c811461033f57600080fd5b8063420652a0146102a157806350d8371b146102b4578063557ce7e9146102dc5780635c36b186146102ef57600080fd5b80632fdeb111116101c35780632fdeb1111461024f57806338d52e0f146102665780633e5e3c23146102915780633f7286f41461029957600080fd5b80630a9254e4146101ea5780631a0cbd4f146101f45780631ed7831c1461023a575b600080fd5b6101f2610487565b005b601b54610220907801000000000000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b610242610653565b6040516102319190611415565b61025860245481565b604051908152602001610231565b602554610279906001600160a01b031681565b6040516001600160a01b039091168152602001610231565b6102426106b5565b610242610715565b601c54610279906001600160a01b031681565b601b546102209074010000000000000000000000000000000000000000900463ffffffff1681565b601d54610279906001600160a01b031681565b602054610279906001600160a01b031681565b61030a610775565b6040516102319190611462565b601b54610220906c01000000000000000000000000900463ffffffff1681565b6101f2610879565b6103476109b4565b604051610231919061157d565b601b5461022090700100000000000000000000000000000000900463ffffffff1681565b6101f26103863660046115df565b610a84565b601e54610279906001600160a01b031681565b601b546102209063ffffffff1681565b61030a610be0565b61025860225481565b610347610cdb565b61025860235481565b6103d8610dab565b6040519015158152602001610231565b602154610279906001600160a01b031681565b601b5461022090640100000000900463ffffffff1681565b601b54610220907c0100000000000000000000000000000000000000000000000000000000900463ffffffff1681565b610242610ed6565b601b546102209068010000000000000000900463ffffffff1681565b601f54610279906001600160a01b031681565b6000546103d89060ff1681565b61048f610f36565b601e546040516001600160a01b03909116906104aa90611408565b6001600160a01b039091168152602001604051809103906000f0801580156104d6573d6000803e3d6000fd5b50602080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169182179055604080516318caf8e360e31b8152600480820193909352602481019190915260448101919091527f50696e67000000000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b15801561059457600080fd5b505af11580156105a8573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201527f4d6f636b20506f6e6700000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c71891506084015b600060405180830381600087803b15801561063957600080fd5b505af115801561064d573d6000803e3d6000fd5b50505050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156106ab57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161068d575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156106ab576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161068d575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156106ab576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161068d575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156108705760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561085857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116108055790505b50505050508152505081526020019060010190610799565b50505050905090565b60408051606081019091526030808252737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391611e6060208301396040518263ffffffff1660e01b81526004016108c991906115f8565b600060405180830381600087803b1580156108e357600080fd5b505af11580156108f7573d6000803e3d6000fd5b50506020546024546001600160a01b039091169250631ca2d467915061091f90600190611628565b602154601b546024805460405160e087901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b03909416600485015264010000000090920463ffffffff169083015260448201526064016000604051808303818588803b15801561099957600080fd5b505af11580156109ad573d6000803e3d6000fd5b5050505050565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156108705783829060005260206000200180546109f790611641565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2390611641565b8015610a705780601f10610a4557610100808354040283529160200191610a70565b820191906000526020600020905b815481529060010190602001808311610a5357829003601f168201915b5050505050815260200190600101906109d8565b60208054602354602254602554602154601b54604080519788018990526000976001600160a01b039788169763fd614f419796958116941692640100000000900463ffffffff1691016040516020818303038152906040526040518763ffffffff1660e01b8152600401610afd9695949392919061167b565b6000604051808303816000875af1158015610b1c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4491908101906116e1565b5060208054604080517f1e81ccb20000000000000000000000000000000000000000000000000000000081529051610bdc936001600160a01b0390931692631e81ccb292600480820193918290030181865afa158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc919061178e565b610bd78360016117a7565b611199565b5050565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156108705760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610cc357602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610c705790505b50505050508152505081526020019060010190610c04565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610870578382906000526020600020018054610d1e90611641565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4a90611641565b8015610d975780601f10610d6c57610100808354040283529160200191610d97565b820191906000526020600020905b815481529060010190602001808311610d7a57829003601f168201915b505050505081526020019060010190610cff565b60008054610100900460ff1615610dcb5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610ed15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610e59917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016117ba565b60408051601f1981840301815290829052610e7391611802565b6000604051808303816000865af19150503d8060008114610eb0576040519150601f19603f3d011682016040523d82523d6000602084013e610eb5565b606091505b5091505080806020019051810190610ecd919061181e565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156106ab576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161068d575050505050905090565b601e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f4d6f636b20436f6e6e65787400000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015610fc257600080fd5b505af1158015610fd6573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600a60448201527f4d6f636b204552433230000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561106657600080fd5b505af115801561107a573d6000803e3d6000fd5b5050601c54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f5573657220436861696e204100000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561110a57600080fd5b505af115801561111e573d6000803e3d6000fd5b5050601d54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f5573657220436861696e204200000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c718915060840161061f565b808214610bdc577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112259060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a160408051818152600a818301527f202045787065637465640000000000000000000000000000000000000000000060608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a818301527f2020202041637475616c0000000000000000000000000000000000000000000060608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610bdc737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156113f75760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261139692916020016117ba565b60408051601f19818403018152908290526113b091611802565b6000604051808303816000865af19150503d80600081146113ed576040519150601f19603f3d011682016040523d82523d6000602084013e6113f2565b606091505b505050505b6000805461ff001916610100179055565b61061f8061184183390190565b6020808252825182820181905260009190848201906040850190845b818110156114565783516001600160a01b031683529284019291840191600101611431565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561151e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156115095783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906114c7565b50978a0197955050509187019160010161148a565b50919998505050505050505050565b60005b83811015611548578181015183820152602001611530565b50506000910152565b6000815180845261156981602086016020860161152d565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156115d257603f198886030184526115c0858351611551565b945092850192908501906001016115a4565b5092979650505050505050565b6000602082840312156115f157600080fd5b5035919050565b60208152600061160b6020830184611551565b9392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561163b5761163b611612565b92915050565b600181811c9082168061165557607f821691505b60208210810361167557634e487b7160e01b600052602260045260246000fd5b50919050565b86815285602082015260006001600160a01b03808716604084015280861660608401525063ffffffff8416608083015260c060a08301526116bf60c0830184611551565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156116f357600080fd5b815167ffffffffffffffff8082111561170b57600080fd5b818401915084601f83011261171f57600080fd5b815181811115611731576117316116cb565b604051601f8201601f19908116603f01168101908382118183101715611759576117596116cb565b8160405282815287602084870101111561177257600080fd5b61178383602083016020880161152d565b979650505050505050565b6000602082840312156117a057600080fd5b5051919050565b8082018082111561163b5761163b611612565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600082516117f481600485016020870161152d565b919091016004019392505050565b6000825161181481846020870161152d565b9190910192915050565b60006020828403121561183057600080fd5b8151801515811461160b57600080fdfe60a060405234801561001057600080fd5b5060405161061f38038061061f83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161058e6100916000396000818160940152610207015261058e6000f3fe60806040526004361061003f5760003560e01c80631ca2d467146100445780631e81ccb214610059578063de4b054814610082578063fd614f41146100db575b600080fd5b61005761005236600461030b565b610108565b005b34801561006557600080fd5b5061006f60005481565b6040519081526020015b60405180910390f35b34801561008e57600080fd5b506100b67f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610079565b3480156100e757600080fd5b506100fb6100f636600461035d565b610295565b6040516100799190610498565b80341461019b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4d7573742073656e642067617320657175616c20746f2074686520737065636960448201527f666965642072656c617965722066656500000000000000000000000000000000606482015260840160405180910390fd5b6000805460408051602081019290925230908201526060810183905260800160408051601f19818403018152908290527f8aac16ba000000000000000000000000000000000000000000000000000000008252915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690638aac16ba90849061024b90879089906000903390829081908b906004016104b2565b60206040518083038185885af1158015610269573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061028e9190610518565b5050505050565b60606000828060200190518101906102ad9190610518565b60008054919250806102be83610531565b9190505550509695505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146102f257600080fd5b919050565b803563ffffffff811681146102f257600080fd5b60008060006060848603121561032057600080fd5b610329846102ce565b9250610337602085016102f7565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c0878903121561037657600080fd5b863595506020870135945061038d604088016102ce565b935061039b606088016102ce565b92506103a9608088016102f7565b915060a087013567ffffffffffffffff808211156103c657600080fd5b818901915089601f8301126103da57600080fd5b8135818111156103ec576103ec610347565b604051601f8201601f19908116603f0116810190838211818310171561041457610414610347565b816040528281528c602084870101111561042d57600080fd5b8260208601602083013760006020848301015280955050505050509295509295509295565b6000815180845260005b818110156104785760208185018101518683018201520161045c565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104ab6020830184610452565b9392505050565b63ffffffff88168152600073ffffffffffffffffffffffffffffffffffffffff808916602084015280881660408401528087166060840152508460808301528360a083015260e060c083015261050b60e0830184610452565b9998505050505050505050565b60006020828403121561052a57600080fd5b5051919050565b60006001820161055157634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122033c508cade95039a1fde498731061d693d6a66010c0b8d5f3085ff9ffd10ee1964736f6c634300081100334d7573742073656e642067617320657175616c20746f20746865207370656369666965642072656c6179657220666565a26469706673582212203426afe9c858f39a397e415963544f1f53e6066e5e685175a8238a54958f178264736f6c63430008110033",
    "sourceMap": "292:994:62:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;516:45:66;147:43;516:45;;587:73;;-1:-1:-1;;;;;;587:73:66;;;617:43;587:73;;;;664;;;;;694:43;664:73;;;741;;;;;771:43;741:73;;;818:69;;;;;846:41;818:69;;;352:57:62;;;;;374:35;352:57;;;413:25;;;;;470:18;442:46;;520:4;492:32;;528:33;;;;;;;;292:994;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101e55760003560e01c80638a97bec91161010f578063ba414fa6116100a2578063e20c9f7111610071578063e20c9f7114610443578063e5734ee61461044b578063f8d7854214610467578063fa7626d41461047a57600080fd5b8063ba414fa6146103d0578063bc9748a1146103e8578063c63ca77c146103fb578063d0da02ae1461041357600080fd5b8063916a17c6116100de578063916a17c6146103ae578063aa8c217c146103b6578063b5508aa9146103bf578063b80fd822146103c757600080fd5b80638a97bec9146103545780638e5e5edc146103785780638fd6d8561461038b57806390c55ee31461039e57600080fd5b8063420652a01161018757806366d9a9a01161015657806366d9a9a01461030257806371e94408146103175780637484cbd01461033757806385226c811461033f57600080fd5b8063420652a0146102a157806350d8371b146102b4578063557ce7e9146102dc5780635c36b186146102ef57600080fd5b80632fdeb111116101c35780632fdeb1111461024f57806338d52e0f146102665780633e5e3c23146102915780633f7286f41461029957600080fd5b80630a9254e4146101ea5780631a0cbd4f146101f45780631ed7831c1461023a575b600080fd5b6101f2610487565b005b601b54610220907801000000000000000000000000000000000000000000000000900463ffffffff1681565b60405163ffffffff90911681526020015b60405180910390f35b610242610653565b6040516102319190611415565b61025860245481565b604051908152602001610231565b602554610279906001600160a01b031681565b6040516001600160a01b039091168152602001610231565b6102426106b5565b610242610715565b601c54610279906001600160a01b031681565b601b546102209074010000000000000000000000000000000000000000900463ffffffff1681565b601d54610279906001600160a01b031681565b602054610279906001600160a01b031681565b61030a610775565b6040516102319190611462565b601b54610220906c01000000000000000000000000900463ffffffff1681565b6101f2610879565b6103476109b4565b604051610231919061157d565b601b5461022090700100000000000000000000000000000000900463ffffffff1681565b6101f26103863660046115df565b610a84565b601e54610279906001600160a01b031681565b601b546102209063ffffffff1681565b61030a610be0565b61025860225481565b610347610cdb565b61025860235481565b6103d8610dab565b6040519015158152602001610231565b602154610279906001600160a01b031681565b601b5461022090640100000000900463ffffffff1681565b601b54610220907c0100000000000000000000000000000000000000000000000000000000900463ffffffff1681565b610242610ed6565b601b546102209068010000000000000000900463ffffffff1681565b601f54610279906001600160a01b031681565b6000546103d89060ff1681565b61048f610f36565b601e546040516001600160a01b03909116906104aa90611408565b6001600160a01b039091168152602001604051809103906000f0801580156104d6573d6000803e3d6000fd5b50602080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03929092169182179055604080516318caf8e360e31b8152600480820193909352602481019190915260448101919091527f50696e67000000000000000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b15801561059457600080fd5b505af11580156105a8573d6000803e3d6000fd5b5050602154604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600960448201527f4d6f636b20506f6e6700000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c71891506084015b600060405180830381600087803b15801561063957600080fd5b505af115801561064d573d6000803e3d6000fd5b50505050565b6060600d8054806020026020016040519081016040528092919081815260200182805480156106ab57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161068d575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156106ab576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161068d575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156106ab576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161068d575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b828210156108705760008481526020908190206040805180820182526002860290920180546001600160a01b0316835260018101805483518187028101870190945280845293949193858301939283018282801561085857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116108055790505b50505050508152505081526020019060010190610799565b50505050905090565b60408051606081019091526030808252737109709ecfa91a80626ff3989d68f67f5b1dd12d9163f28dceb391611e6060208301396040518263ffffffff1660e01b81526004016108c991906115f8565b600060405180830381600087803b1580156108e357600080fd5b505af11580156108f7573d6000803e3d6000fd5b50506020546024546001600160a01b039091169250631ca2d467915061091f90600190611628565b602154601b546024805460405160e087901b7fffffffff000000000000000000000000000000000000000000000000000000001681526001600160a01b03909416600485015264010000000090920463ffffffff169083015260448201526064016000604051808303818588803b15801561099957600080fd5b505af11580156109ad573d6000803e3d6000fd5b5050505050565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156108705783829060005260206000200180546109f790611641565b80601f0160208091040260200160405190810160405280929190818152602001828054610a2390611641565b8015610a705780601f10610a4557610100808354040283529160200191610a70565b820191906000526020600020905b815481529060010190602001808311610a5357829003601f168201915b5050505050815260200190600101906109d8565b60208054602354602254602554602154601b54604080519788018990526000976001600160a01b039788169763fd614f419796958116941692640100000000900463ffffffff1691016040516020818303038152906040526040518763ffffffff1660e01b8152600401610afd9695949392919061167b565b6000604051808303816000875af1158015610b1c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610b4491908101906116e1565b5060208054604080517f1e81ccb20000000000000000000000000000000000000000000000000000000081529051610bdc936001600160a01b0390931692631e81ccb292600480820193918290030181865afa158015610ba8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bcc919061178e565b610bd78360016117a7565b611199565b5050565b60606013805480602002602001604051908101604052809291908181526020016000905b828210156108705760008481526020908190206040805180820182526002860290920180546001600160a01b03168352600181018054835181870281018701909452808452939491938583019392830182828015610cc357602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411610c705790505b50505050508152505081526020019060010190610c04565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610870578382906000526020600020018054610d1e90611641565b80601f0160208091040260200160405190810160405280929190818152602001828054610d4a90611641565b8015610d975780601f10610d6c57610100808354040283529160200191610d97565b820191906000526020600020905b815481529060010190602001808311610d7a57829003601f168201915b505050505081526020019060010190610cff565b60008054610100900460ff1615610dcb5750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610ed15760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610e59917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc4916080016117ba565b60408051601f1981840301815290829052610e7391611802565b6000604051808303816000865af19150503d8060008114610eb0576040519150601f19603f3d011682016040523d82523d6000602084013e610eb5565b606091505b5091505080806020019051810190610ecd919061181e565b9150505b919050565b6060600c8054806020026020016040519081016040528092919081815260200182805480156106ab576020028201919060005260206000209081546001600160a01b0316815260019091019060200180831161068d575050505050905090565b601e54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f4d6f636b20436f6e6e65787400000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c657c71890608401600060405180830381600087803b158015610fc257600080fd5b505af1158015610fd6573d6000803e3d6000fd5b5050601f54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600a60448201527f4d6f636b204552433230000000000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561106657600080fd5b505af115801561107a573d6000803e3d6000fd5b5050601c54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f5573657220436861696e204100000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c7189150608401600060405180830381600087803b15801561110a57600080fd5b505af115801561111e573d6000803e3d6000fd5b5050601d54604080516318caf8e360e31b81526001600160a01b0390921660048301526024820152600c60448201527f5573657220436861696e204200000000000000000000000000000000000000006064820152737109709ecfa91a80626ff3989d68f67f5b1dd12d925063c657c718915060840161061f565b808214610bdc577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516112259060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a160408051818152600a818301527f202045787065637465640000000000000000000000000000000000000000000060608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a818301527f2020202041637475616c0000000000000000000000000000000000000000000060608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1610bdc737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156113f75760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261139692916020016117ba565b60408051601f19818403018152908290526113b091611802565b6000604051808303816000865af19150503d80600081146113ed576040519150601f19603f3d011682016040523d82523d6000602084013e6113f2565b606091505b505050505b6000805461ff001916610100179055565b61061f8061184183390190565b6020808252825182820181905260009190848201906040850190845b818110156114565783516001600160a01b031683529284019291840191600101611431565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b8481101561151e57898403603f19018652825180516001600160a01b03168552880151888501889052805188860181905290890190839060608701905b808310156115095783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b01906114c7565b50978a0197955050509187019160010161148a565b50919998505050505050505050565b60005b83811015611548578181015183820152602001611530565b50506000910152565b6000815180845261156981602086016020860161152d565b601f01601f19169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156115d257603f198886030184526115c0858351611551565b945092850192908501906001016115a4565b5092979650505050505050565b6000602082840312156115f157600080fd5b5035919050565b60208152600061160b6020830184611551565b9392505050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561163b5761163b611612565b92915050565b600181811c9082168061165557607f821691505b60208210810361167557634e487b7160e01b600052602260045260246000fd5b50919050565b86815285602082015260006001600160a01b03808716604084015280861660608401525063ffffffff8416608083015260c060a08301526116bf60c0830184611551565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156116f357600080fd5b815167ffffffffffffffff8082111561170b57600080fd5b818401915084601f83011261171f57600080fd5b815181811115611731576117316116cb565b604051601f8201601f19908116603f01168101908382118183101715611759576117596116cb565b8160405282815287602084870101111561177257600080fd5b61178383602083016020880161152d565b979650505050505050565b6000602082840312156117a057600080fd5b5051919050565b8082018082111561163b5761163b611612565b7fffffffff0000000000000000000000000000000000000000000000000000000083168152600082516117f481600485016020870161152d565b919091016004019392505050565b6000825161181481846020870161152d565b9190910192915050565b60006020828403121561183057600080fd5b8151801515811461160b57600080fdfe60a060405234801561001057600080fd5b5060405161061f38038061061f83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161058e6100916000396000818160940152610207015261058e6000f3fe60806040526004361061003f5760003560e01c80631ca2d467146100445780631e81ccb214610059578063de4b054814610082578063fd614f41146100db575b600080fd5b61005761005236600461030b565b610108565b005b34801561006557600080fd5b5061006f60005481565b6040519081526020015b60405180910390f35b34801561008e57600080fd5b506100b67f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610079565b3480156100e757600080fd5b506100fb6100f636600461035d565b610295565b6040516100799190610498565b80341461019b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f4d7573742073656e642067617320657175616c20746f2074686520737065636960448201527f666965642072656c617965722066656500000000000000000000000000000000606482015260840160405180910390fd5b6000805460408051602081019290925230908201526060810183905260800160408051601f19818403018152908290527f8aac16ba000000000000000000000000000000000000000000000000000000008252915073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690638aac16ba90849061024b90879089906000903390829081908b906004016104b2565b60206040518083038185885af1158015610269573d6000803e3d6000fd5b50505050506040513d601f19601f8201168201806040525081019061028e9190610518565b5050505050565b60606000828060200190518101906102ad9190610518565b60008054919250806102be83610531565b9190505550509695505050505050565b803573ffffffffffffffffffffffffffffffffffffffff811681146102f257600080fd5b919050565b803563ffffffff811681146102f257600080fd5b60008060006060848603121561032057600080fd5b610329846102ce565b9250610337602085016102f7565b9150604084013590509250925092565b634e487b7160e01b600052604160045260246000fd5b60008060008060008060c0878903121561037657600080fd5b863595506020870135945061038d604088016102ce565b935061039b606088016102ce565b92506103a9608088016102f7565b915060a087013567ffffffffffffffff808211156103c657600080fd5b818901915089601f8301126103da57600080fd5b8135818111156103ec576103ec610347565b604051601f8201601f19908116603f0116810190838211818310171561041457610414610347565b816040528281528c602084870101111561042d57600080fd5b8260208601602083013760006020848301015280955050505050509295509295509295565b6000815180845260005b818110156104785760208185018101518683018201520161045c565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006104ab6020830184610452565b9392505050565b63ffffffff88168152600073ffffffffffffffffffffffffffffffffffffffff808916602084015280881660408401528087166060840152508460808301528360a083015260e060c083015261050b60e0830184610452565b9998505050505050505050565b60006020828403121561052a57600080fd5b5051919050565b60006001820161055157634e487b7160e01b600052601160045260246000fd5b506001019056fea264697066735822122033c508cade95039a1fde498731061d693d6a66010c0b8d5f3085ff9ffd10ee1964736f6c634300081100334d7573742073656e642067617320657175616c20746f20746865207370656369666965642072656c6179657220666565a26469706673582212203426afe9c858f39a397e415963544f1f53e6066e5e685175a8238a54958f178264736f6c63430008110033",
    "sourceMap": "292:994:62:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;566:168;;;:::i;:::-;;465:47:66;;;;;;;;;;;;;;;188:10:67;176:23;;;158:42;;146:2;131:18;465:47:66;;;;;;;;2161:134:7;;;:::i;:::-;;;;;;;:::i;492:32:62:-;;;;;;;;;1043:25:67;;;1031:2;1016:18;492:32:62;897:177:67;528:33:62;;;;;-1:-1:-1;;;;;528:33:62;;;;;;-1:-1:-1;;;;;1243:55:67;;;1225:74;;1213:2;1198:18;528:33:62;1079:226:67;2930:133:7;;;:::i;2631:141::-;;;:::i;587:73:66:-;;;;;-1:-1:-1;;;;;587:73:66;;;417:44;;;;;;;;;;;;664:73;;;;;-1:-1:-1;;;;;664:73:66;;;332:16:62;;;;;-1:-1:-1;;;;;332:16:62;;;2447:178:7;;;:::i;:::-;;;;;;;:::i;306:45:66:-;;;;;;;;;;;;1025:259:62;;;:::i;2301:140:7:-;;;:::i;:::-;;;;;;;:::i;380:33:66:-;;;;;;;;;;;;738:283:62;;;;;;:::i;:::-;;:::i;741:73:66:-;;;;;-1:-1:-1;;;;;741:73:66;;;147:43;;;;;;;;;2778:146:7;;;:::i;413:25:62:-;;;;;;1866:141:7;;;:::i;442:46:62:-;;;;;;1819:584:0;;;:::i;:::-;;;5067:14:67;;5060:22;5042:41;;5030:2;5015:18;1819:584:0;4902:187:67;352:57:62;;;;;-1:-1:-1;;;;;352:57:62;;;194:52:66;;;;;;;;;;;;516:45;;;;;;;;;;;;2013:142:7;;;:::i;250:52:66:-;;;;;;;;;;;;818:69;;;;;-1:-1:-1;;;;;818:69:66;;;1572:26:0;;;;;;;;;566:168:62;605:13;:11;:13::i;:::-;645:12;;636:22;;-1:-1:-1;;;;;645:12:62;;;;636:22;;;:::i;:::-;-1:-1:-1;;;;;1243:55:67;;;1225:74;;1213:2;1198:18;636:22:62;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;629:4:62;:29;;;;-1:-1:-1;;;;;629:29:62;;;;;;;;;665:31;;;-1:-1:-1;;;665:31:62;;;;;;5306:74:67;;;;5396:18;;;5389:30;;;;5435:18;;;5428:29;;;;5493:6;5473:18;;;5466:34;665:8:62;;;;5517:19:67;;665:31:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;711:4:62;;702:27;;;-1:-1:-1;;;702:27:62;;-1:-1:-1;;;;;711:4:62;;;702:27;;;5759:74:67;5849:18;;;5842:30;5908:1;5888:18;;;5881:29;5946:11;5926:18;;;5919:39;702:8:62;;-1:-1:-1;702:8:62;;-1:-1:-1;5975:19:67;;702:27:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;566:168::o;2161:134:7:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2253:35:7;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3021:35:7;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2726:39:7;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2563:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;1025:259:62:-;1128:57;;;;;;;;;;;;;1112:15;;;;1128:57;;;;;1112:74;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1193:4:62;;1219:10;;-1:-1:-1;;;;;1193:4:62;;;;-1:-1:-1;1193:18:62;;-1:-1:-1;1219:14:62;;1193:4;;1219:14;:::i;:::-;1235:4;;1241:25;;1268:10;;;1193:86;;;;;;;;;;-1:-1:-1;;;;;1235:4:62;;;1241:25;1193:86;;6750:74:67;1241:25:62;;;;;;6840:18:67;;;6833:51;6900:18;;;6893:34;6723:18;;1193:86:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1025:259::o;2301:140:7:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;738:283:62;837:4;;;858:10;;877:6;;892:5;;906:4;;919:25;;953:17;;;;;;1043:25:67;;;813:13:62;;-1:-1:-1;;;;;837:4:62;;;;:13;;858:10;877:6;892:5;;;906:4;;919:25;;;;;;1016:18:67;953:17:62;;;;;;;;;;;;837:139;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;837:139:62;;;;;;;;;;;;:::i;:::-;-1:-1:-1;992:4:62;;;:12;;;;;;;;983:33;;-1:-1:-1;;;;;992:4:62;;;;:10;;:12;;;;;;;;;;;:4;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1006:9;:5;1014:1;1006:9;:::i;:::-;983:8;:33::i;:::-;807:214;738:283;:::o;2778:146:7:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2878:39:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:0;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;9639:74:67;;;-1:-1:-1;;;9729:18:67;;;9722:34;2196:43:0;;;;;;;;;9612:18:67;;;2196:43:0;;;-1:-1:-1;;1671:64:0;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;2013:142:7:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2109:39:7;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;892:209:66:-;939:12;;930:38;;;-1:-1:-1;;;930:38:66;;-1:-1:-1;;;;;939:12:66;;;930:38;;;10988:74:67;11078:18;;;11071:30;11137:2;11117:18;;;11110:30;11176:14;11156:18;;;11149:42;930:8:66;;;;11208:19:67;;930:38:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;983:10:66;;974:34;;;-1:-1:-1;;;974:34:66;;-1:-1:-1;;;;;983:10:66;;;974:34;;;11450:74:67;11540:18;;;11533:30;11599:2;11579:18;;;11572:30;11638:12;11618:18;;;11611:40;974:8:66;;-1:-1:-1;974:8:66;;-1:-1:-1;11668:19:67;;974:34:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1023:12:66;;1014:38;;;-1:-1:-1;;;1014:38:66;;-1:-1:-1;;;;;1023:12:66;;;1014:38;;;11910:74:67;12000:18;;;11993:30;12059:2;12039:18;;;12032:30;12098:14;12078:18;;;12071:42;1014:8:66;;-1:-1:-1;1014:8:66;;-1:-1:-1;12130:19:67;;1014:38:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1067:12:66;;1058:38;;;-1:-1:-1;;;1058:38:66;;-1:-1:-1;;;;;1067:12:66;;;1058:38;;;12372:74:67;12462:18;;;12455:30;12521:2;12501:18;;;12494:30;12560:14;12540:18;;;12533:42;1058:8:66;;-1:-1:-1;1058:8:66;;-1:-1:-1;12592:19:67;;1058:38:66;12160:457:67;5202:262:0;5264:1;5259;:6;5255:203;;5286:41;;;;;12824:2:67;12806:21;;;12863:2;12843:18;;;12836:30;12902:34;12897:2;12882:18;;12875:62;12973:4;12968:2;12953:18;;12946:32;13010:3;12995:19;;12622:398;5286:41:0;;;;;;;;5346:31;;;13237:21:67;;;13294:2;13274:18;;;13267:30;13333:12;13328:2;13313:18;;13306:40;13413:4;13398:20;;13391:36;;;5346:31:0;;;;;;;13378:3:67;5346:31:0;;;5396;;;13650:21:67;;;13707:2;13687:18;;;13680:30;13746:12;13741:2;13726:18;;13719:40;13826:4;13811:20;;13804:36;;;5396:31:0;;;;;;;13791:3:67;5396:31:0;;;5441:6;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;14053:74:67;;;-1:-1:-1;;;14143:18:67;;;14136:34;;;;2705:4:0;14186:18:67;;;14179:34;2482:11:0;;1671:64;2579:43;;14026:18:67;;2645:67:0;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;211:681:67:-;382:2;434:21;;;504:13;;407:18;;;526:22;;;353:4;;382:2;605:15;;;;579:2;564:18;;;353:4;648:218;662:6;659:1;656:13;648:218;;;727:13;;-1:-1:-1;;;;;723:62:67;711:75;;841:15;;;;806:12;;;;684:1;677:9;648:218;;;-1:-1:-1;883:3:67;;211:681;-1:-1:-1;;;;;;211:681:67:o;1555:1636::-;1757:4;1786:2;1826;1815:9;1811:18;1856:2;1845:9;1838:21;1879:6;1914;1908:13;1945:6;1937;1930:22;1971:2;1961:12;;2004:2;1993:9;1989:18;1982:25;;2066:2;2056:6;2053:1;2049:14;2038:9;2034:30;2030:39;2104:2;2096:6;2092:15;2125:1;2146;2156:1006;2172:6;2167:3;2164:15;2156:1006;;;2241:22;;;-1:-1:-1;;2237:36:67;2225:49;;2297:13;;2384:9;;-1:-1:-1;;;;;2380:58:67;2365:74;;2478:11;;2472:18;2510:15;;;2503:27;;;2591:19;;2337:15;;;2623:24;;;2713:21;;;;2758:1;;2681:2;2669:15;;;2772:282;2788:8;2783:3;2780:17;2772:282;;;2869:15;;2886:66;2865:88;2851:103;;3023:17;;;;2816:1;2807:11;;;;;2980:14;;;;2772:282;;;-1:-1:-1;3140:12:67;;;;3077:5;-1:-1:-1;;;3105:15:67;;;;2198:1;2189:11;2156:1006;;;-1:-1:-1;3179:6:67;;1555:1636;-1:-1:-1;;;;;;;;;1555:1636:67:o;3196:250::-;3281:1;3291:113;3305:6;3302:1;3299:13;3291:113;;;3381:11;;;3375:18;3362:11;;;3355:39;3327:2;3320:10;3291:113;;;-1:-1:-1;;3438:1:67;3420:16;;3413:27;3196:250::o;3451:271::-;3493:3;3531:5;3525:12;3558:6;3553:3;3546:19;3574:76;3643:6;3636:4;3631:3;3627:14;3620:4;3613:5;3609:16;3574:76;:::i;:::-;3704:2;3683:15;-1:-1:-1;;3679:29:67;3670:39;;;;3711:4;3666:50;;3451:271;-1:-1:-1;;3451:271:67:o;3727:803::-;3889:4;3918:2;3958;3947:9;3943:18;3988:2;3977:9;3970:21;4011:6;4046;4040:13;4077:6;4069;4062:22;4115:2;4104:9;4100:18;4093:25;;4177:2;4167:6;4164:1;4160:14;4149:9;4145:30;4141:39;4127:53;;4215:2;4207:6;4203:15;4236:1;4246:255;4260:6;4257:1;4254:13;4246:255;;;4353:2;4349:7;4337:9;4329:6;4325:22;4321:36;4316:3;4309:49;4381:40;4414:6;4405;4399:13;4381:40;:::i;:::-;4371:50;-1:-1:-1;4479:12:67;;;;4444:15;;;;4282:1;4275:9;4246:255;;;-1:-1:-1;4518:6:67;;3727:803;-1:-1:-1;;;;;;;3727:803:67:o;4535:180::-;4594:6;4647:2;4635:9;4626:7;4622:23;4618:32;4615:52;;;4663:1;4660;4653:12;4615:52;-1:-1:-1;4686:23:67;;4535:180;-1:-1:-1;4535:180:67:o;6005:218::-;6152:2;6141:9;6134:21;6115:4;6172:45;6213:2;6202:9;6198:18;6190:6;6172:45;:::i;:::-;6164:53;6005:218;-1:-1:-1;;;6005:218:67:o;6228:184::-;-1:-1:-1;;;6277:1:67;6270:88;6377:4;6374:1;6367:15;6401:4;6398:1;6391:15;6417:128;6484:9;;;6505:11;;;6502:37;;;6519:18;;:::i;:::-;6417:128;;;;:::o;6938:437::-;7017:1;7013:12;;;;7060;;;7081:61;;7135:4;7127:6;7123:17;7113:27;;7081:61;7188:2;7180:6;7177:14;7157:18;7154:38;7151:218;;-1:-1:-1;;;7222:1:67;7215:88;7326:4;7323:1;7316:15;7354:4;7351:1;7344:15;7151:218;;6938:437;;;:::o;7380:671::-;7665:6;7654:9;7647:25;7708:6;7703:2;7692:9;7688:18;7681:34;7628:4;-1:-1:-1;;;;;7824:2:67;7816:6;7812:15;7807:2;7796:9;7792:18;7785:43;7876:2;7868:6;7864:15;7859:2;7848:9;7844:18;7837:43;;7929:10;7921:6;7917:23;7911:3;7900:9;7896:19;7889:52;7978:3;7972;7961:9;7957:19;7950:32;7999:46;8040:3;8029:9;8025:19;8017:6;7999:46;:::i;:::-;7991:54;7380:671;-1:-1:-1;;;;;;;;7380:671:67:o;8056:184::-;-1:-1:-1;;;8105:1:67;8098:88;8205:4;8202:1;8195:15;8229:4;8226:1;8219:15;8245:896;8324:6;8377:2;8365:9;8356:7;8352:23;8348:32;8345:52;;;8393:1;8390;8383:12;8345:52;8426:9;8420:16;8455:18;8496:2;8488:6;8485:14;8482:34;;;8512:1;8509;8502:12;8482:34;8550:6;8539:9;8535:22;8525:32;;8595:7;8588:4;8584:2;8580:13;8576:27;8566:55;;8617:1;8614;8607:12;8566:55;8646:2;8640:9;8668:2;8664;8661:10;8658:36;;;8674:18;;:::i;:::-;8749:2;8743:9;8717:2;8803:13;;-1:-1:-1;;8799:22:67;;;8823:2;8795:31;8791:40;8779:53;;;8847:18;;;8867:22;;;8844:46;8841:72;;;8893:18;;:::i;:::-;8933:10;8929:2;8922:22;8968:2;8960:6;8953:18;9008:7;9003:2;8998;8994;8990:11;8986:20;8983:33;8980:53;;;9029:1;9026;9019:12;8980:53;9042:68;9107:2;9102;9094:6;9090:15;9085:2;9081;9077:11;9042:68;:::i;:::-;9129:6;8245:896;-1:-1:-1;;;;;;;8245:896:67:o;9146:184::-;9216:6;9269:2;9257:9;9248:7;9244:23;9240:32;9237:52;;;9285:1;9282;9275:12;9237:52;-1:-1:-1;9308:16:67;;9146:184;-1:-1:-1;9146:184:67:o;9335:125::-;9400:9;;;9421:10;;;9418:36;;;9434:18;;:::i;9767:430::-;9964:66;9956:6;9952:79;9947:3;9940:92;9922:3;10061:6;10055:13;10077:74;10144:6;10140:1;10135:3;10131:11;10124:4;10116:6;10112:17;10077:74;:::i;:::-;10171:16;;;;10189:1;10167:24;;9767:430;-1:-1:-1;;;9767:430:67:o;10202:287::-;10331:3;10369:6;10363:13;10385:66;10444:6;10439:3;10432:4;10424:6;10420:17;10385:66;:::i;:::-;10467:16;;;;;10202:287;-1:-1:-1;;10202:287:67:o;10494:277::-;10561:6;10614:2;10602:9;10593:7;10589:23;10585:32;10582:52;;;10630:1;10627;10620:12;10582:52;10662:9;10656:16;10715:5;10708:13;10701:21;10694:5;10691:32;10681:60;;10737:1;10734;10727:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "ARBITRUM_GOERLI_CHAIN_ID()": "1a0cbd4f",
    "ARBITRUM_GOERLI_DOMAIN_ID()": "e5734ee6",
    "GOERLI_CHAIN_ID()": "8a97bec9",
    "GOERLI_DOMAIN_ID()": "90c55ee3",
    "IS_TEST()": "fa7626d4",
    "MOCK_CONNEXT()": "8fd6d856",
    "MOCK_ERC20()": "f8d78542",
    "OPTIMISM_GOERLI_CHAIN_ID()": "50d8371b",
    "OPTIMISM_GOERLI_DOMAIN_ID()": "c63ca77c",
    "POLYGON_MUMBAI_CHAIN_ID()": "d0da02ae",
    "POLYGON_MUMBAI_DOMAIN_ID()": "71e94408",
    "USER_CHAIN_A()": "420652a0",
    "USER_CHAIN_B()": "557ce7e9",
    "amount()": "aa8c217c",
    "asset()": "38d52e0f",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "ping()": "5c36b186",
    "pong()": "bc9748a1",
    "relayerFee()": "2fdeb111",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_Ping__startPingPong_shouldRevertIfInsufficientRelayerFee()": "7484cbd0",
    "test_Ping__xReceive_shouldUpdatePings(uint256)": "8e5e5edc",
    "transferId()": "b80fd822"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ARBITRUM_GOERLI_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ARBITRUM_GOERLI_DOMAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOERLI_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GOERLI_DOMAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MOCK_CONNEXT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MOCK_ERC20\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPTIMISM_GOERLI_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OPTIMISM_GOERLI_DOMAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POLYGON_MUMBAI_CHAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"POLYGON_MUMBAI_DOMAIN_ID\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER_CHAIN_A\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USER_CHAIN_B\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"asset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ping\",\"outputs\":[{\"internalType\":\"contract Ping\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pong\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"relayerFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_Ping__startPingPong_shouldRevertIfInsufficientRelayerFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"pongs\",\"type\":\"uint256\"}],\"name\":\"test_Ping__xReceive_shouldUpdatePings\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"PingTestUnit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"GOERLI_CHAIN_ID()\":{\"notice\":\"Testnet Chain IDs\"},\"GOERLI_DOMAIN_ID()\":{\"notice\":\"Testnet Domain IDs\"},\"USER_CHAIN_A()\":{\"notice\":\"Mock Addresses\"}},\"notice\":\"Unit tests for Ping.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contract-examples/test/ping-pong/Ping.t.sol\":\"PingTestUnit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":@aave/=lib/aave-v3-core/\",\":@clones/=lib/clones-with-immutable-args/src/\",\":@connext/interfaces/=lib/interfaces/\",\":@ds/=lib/ds-test/src/\",\":@eth-optimism/=node_modules/@eth-optimism/\",\":@gelatonetwork/=node_modules/@gelatonetwork/\",\":@hardhat/=lib/hardhat/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@std/=lib/forge-std/src/\",\":ExcessivelySafeCall/=lib/nxtp/packages/deployments/contracts/lib/ExcessivelySafeCall/src/\",\":ds-test/=lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/\",\":hardhat/=lib/hardhat/\",\":interfaces/=lib/interfaces/\",\":nxtp/=lib/nxtp/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":relay-context-contracts/=lib/nxtp/packages/deployments/contracts/lib/relay-context-contracts/contracts/\"]},\"sources\":{\"lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c\",\"dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x38c788c4869b7692243c98de26857f392175ba292de160d9eac24fa34ed1d1b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4b18b42ccd9f51ace79f470fe2d196974ae867667c5a7e9b7e8ddb47a5e83a6\",\"dweb:/ipfs/QmZ8AJdCrMVFLsZJsvp2d4Zi7c7wVgQh45XrVwdrzR3Vmr\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf6746576912986486f4e5eccdb6b3bbb03e47c4da75a59acc4b1c313b8d31d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01fd4243d8a85cc7f07b6c5ac9e3f5f38b2443ef82025953c3badb39099fe2e4\",\"dweb:/ipfs/QmVDUyQ3tE4a2b87wJDAkwwyFwRpUPGuy8yJDV9JgHqnrd\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0x8134c22af343e12f0ee5c565a2eb0d8a5472da7f499abac7b519f634a69c7c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1552599c06a879f4938e14b1fd1e4a4a7eda097b1c984ce0a9cbca33ea64f7d6\",\"dweb:/ipfs/QmNxyLpvNX3woGMHJAQGz89dzRsMFaxT38ZmtgPVMG2DLD\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3\",\"dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/interfaces/core/IConnext.sol\":{\"keccak256\":\"0x09fe61977b64d12fcd1880b35ddf07ffa920fecd5036a7cf85df80fdf50abd2b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://041d896a16a9d76bdd677b330c8bf4a9d4dc5d22ac04824f383c1ee237674668\",\"dweb:/ipfs/Qmc75swFNvdSsNe8kf89puzFqXsdFYJ8AiZCHGVWuUpK6J\"]},\"lib/interfaces/core/IXReceiver.sol\":{\"keccak256\":\"0xf9c2399a4e0a3191c1a3a56e979ae2fffe88c9f90ce7c011bcfe2cb1300999a4\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://0f63caa00ef751f7e55fa5988e4912734da531e010cd20d99f5f0405213cd063\",\"dweb:/ipfs/QmNRHkKTc1QtHQM9tXypRhcjjqJP7ThJ4NPVJFN7MTM1ZN\"]},\"lib/interfaces/libraries/LibConnextStorage.sol\":{\"keccak256\":\"0x95241d3704d1432575f53a8f05dab15d91e9a5511a0cf08d7ec2f91f6b951acf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://2cd1eb6e0e241f8bcbdccaf9a9f51962ed230eee18657e0ded3662c58e9e6e83\",\"dweb:/ipfs/Qmbyv5tDA3cVcPjHeMd99s2LcU3vWD9RLzznC6AQemdAjD\"]},\"lib/interfaces/libraries/TokenId.sol\":{\"keccak256\":\"0x739ba51d97924bcd9465d0bd20499dcaff664e4eaaff5b730b6b93714d4844c8\",\"license\":\"MIT OR Apache-2.0\",\"urls\":[\"bzz-raw://0c483b8eff1d5637ccb9180aedcaea0e44b25f3bda14661685e0fefdd843151f\",\"dweb:/ipfs/Qmd4eW4AjNAZWEeoFFopdQ8LSFf3m96iTUtCvz8yZRW4Ed\"]},\"src/contract-examples/ping-pong/Ping.sol\":{\"keccak256\":\"0x17885fc1c565f49125760bdab7096d879b4a763e4e5f7dde18d656815dd407d6\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://f133fad4424d088a5acb5c67a168681e3238b2a86a42fdc4950fccda47f120b1\",\"dweb:/ipfs/Qma2bMegdo533LeA5YwxHtE7kXEG7xMoc33WZX4ua2bBJC\"]},\"src/contract-examples/test/ping-pong/Ping.t.sol\":{\"keccak256\":\"0xcd7a2b75ff9122e28be58786d6ce676bf72550903d022f9f9f3a72876be53df8\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4268e8efbc75b4bbc59740a662b13be247171b99a897fd8a47145347f6b711ce\",\"dweb:/ipfs/QmYHsVdZka3m7fjFzvwo7EcFqj5HUrM8DaSeZU2CzHHyQW\"]},\"src/contract-examples/test/utils/TestHelper.sol\":{\"keccak256\":\"0x5ad52143b6e94fb5e5f3cf5b8b857212ac9cdfe6e3e93803bec996db980bef74\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://8472e7a27b8d63e5c2b2565222285b6e6efada9dc02bb844f30c8a83dd5684eb\",\"dweb:/ipfs/Qme8habJwqg82TbVCRwo8cXrCg4GDJyhRS1Fuf9QCCZNYW\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ARBITRUM_GOERLI_CHAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ARBITRUM_GOERLI_DOMAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GOERLI_CHAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GOERLI_DOMAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MOCK_CONNEXT",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MOCK_ERC20",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPTIMISM_GOERLI_CHAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OPTIMISM_GOERLI_DOMAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POLYGON_MUMBAI_CHAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "POLYGON_MUMBAI_DOMAIN_ID",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "",
              "type": "uint32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USER_CHAIN_A",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "USER_CHAIN_B",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "amount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "asset",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ping",
          "outputs": [
            {
              "internalType": "contract Ping",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pong",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "relayerFee",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_Ping__startPingPong_shouldRevertIfInsufficientRelayerFee"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pongs",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_Ping__xReceive_shouldUpdatePings"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "transferId",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "GOERLI_CHAIN_ID()": {
            "notice": "Testnet Chain IDs"
          },
          "GOERLI_DOMAIN_ID()": {
            "notice": "Testnet Domain IDs"
          },
          "USER_CHAIN_A()": {
            "notice": "Mock Addresses"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/=lib/aave-v3-core/",
        "@clones/=lib/clones-with-immutable-args/src/",
        "@connext/interfaces/=lib/interfaces/",
        "@ds/=lib/ds-test/src/",
        "@eth-optimism/=node_modules/@eth-optimism/",
        "@gelatonetwork/=node_modules/@gelatonetwork/",
        "@hardhat/=lib/hardhat/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@std/=lib/forge-std/src/",
        "ExcessivelySafeCall/=lib/nxtp/packages/deployments/contracts/lib/ExcessivelySafeCall/src/",
        "ds-test/=lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat-diamond-abi/=node_modules/hardhat-diamond-abi/",
        "hardhat/=lib/hardhat/",
        "interfaces/=lib/interfaces/",
        "nxtp/=lib/nxtp/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "relay-context-contracts/=lib/nxtp/packages/deployments/contracts/lib/relay-context-contracts/contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contract-examples/test/ping-pong/Ping.t.sol": "PingTestUnit"
      },
      "libraries": {}
    },
    "sources": {
      "lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xf5ee6ffdf800ff79b630415dec6257dd930ee8a9b5b17996a2ee2e841d3afcc9",
        "urls": [
          "bzz-raw://978647b43acaf65a9c1c1c583c028fc534c42a219d5f8857c146fba6682aa90c",
          "dweb:/ipfs/QmNNkThmMkjtw8ArYJRTqy2h6axfsZPE67XZe5zRnWViur"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x38c788c4869b7692243c98de26857f392175ba292de160d9eac24fa34ed1d1b8",
        "urls": [
          "bzz-raw://d4b18b42ccd9f51ace79f470fe2d196974ae867667c5a7e9b7e8ddb47a5e83a6",
          "dweb:/ipfs/QmZ8AJdCrMVFLsZJsvp2d4Zi7c7wVgQh45XrVwdrzR3Vmr"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf6746576912986486f4e5eccdb6b3bbb03e47c4da75a59acc4b1c313b8d31d9f",
        "urls": [
          "bzz-raw://01fd4243d8a85cc7f07b6c5ac9e3f5f38b2443ef82025953c3badb39099fe2e4",
          "dweb:/ipfs/QmVDUyQ3tE4a2b87wJDAkwwyFwRpUPGuy8yJDV9JgHqnrd"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0x8134c22af343e12f0ee5c565a2eb0d8a5472da7f499abac7b519f634a69c7c4d",
        "urls": [
          "bzz-raw://1552599c06a879f4938e14b1fd1e4a4a7eda097b1c984ce0a9cbca33ea64f7d6",
          "dweb:/ipfs/QmNxyLpvNX3woGMHJAQGz89dzRsMFaxT38ZmtgPVMG2DLD"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xe0cfe5ca62fb9d9366be870999bd82802d6b913c1f960f67b8f17060008f2d1a",
        "urls": [
          "bzz-raw://ddadc1e899953cb26e7d87c0f27284d02f09b611cfd3300e321c33dc2c65d0b3",
          "dweb:/ipfs/Qmbmrdph3D5YweihJSPM6sopZcSKWMox2ZM89dyonfhrq8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/interfaces/core/IConnext.sol": {
        "keccak256": "0x09fe61977b64d12fcd1880b35ddf07ffa920fecd5036a7cf85df80fdf50abd2b",
        "urls": [
          "bzz-raw://041d896a16a9d76bdd677b330c8bf4a9d4dc5d22ac04824f383c1ee237674668",
          "dweb:/ipfs/Qmc75swFNvdSsNe8kf89puzFqXsdFYJ8AiZCHGVWuUpK6J"
        ],
        "license": "UNLICENSED"
      },
      "lib/interfaces/core/IXReceiver.sol": {
        "keccak256": "0xf9c2399a4e0a3191c1a3a56e979ae2fffe88c9f90ce7c011bcfe2cb1300999a4",
        "urls": [
          "bzz-raw://0f63caa00ef751f7e55fa5988e4912734da531e010cd20d99f5f0405213cd063",
          "dweb:/ipfs/QmNRHkKTc1QtHQM9tXypRhcjjqJP7ThJ4NPVJFN7MTM1ZN"
        ],
        "license": "UNLICENSED"
      },
      "lib/interfaces/libraries/LibConnextStorage.sol": {
        "keccak256": "0x95241d3704d1432575f53a8f05dab15d91e9a5511a0cf08d7ec2f91f6b951acf",
        "urls": [
          "bzz-raw://2cd1eb6e0e241f8bcbdccaf9a9f51962ed230eee18657e0ded3662c58e9e6e83",
          "dweb:/ipfs/Qmbyv5tDA3cVcPjHeMd99s2LcU3vWD9RLzznC6AQemdAjD"
        ],
        "license": "UNLICENSED"
      },
      "lib/interfaces/libraries/TokenId.sol": {
        "keccak256": "0x739ba51d97924bcd9465d0bd20499dcaff664e4eaaff5b730b6b93714d4844c8",
        "urls": [
          "bzz-raw://0c483b8eff1d5637ccb9180aedcaea0e44b25f3bda14661685e0fefdd843151f",
          "dweb:/ipfs/Qmd4eW4AjNAZWEeoFFopdQ8LSFf3m96iTUtCvz8yZRW4Ed"
        ],
        "license": "MIT OR Apache-2.0"
      },
      "src/contract-examples/ping-pong/Ping.sol": {
        "keccak256": "0x17885fc1c565f49125760bdab7096d879b4a763e4e5f7dde18d656815dd407d6",
        "urls": [
          "bzz-raw://f133fad4424d088a5acb5c67a168681e3238b2a86a42fdc4950fccda47f120b1",
          "dweb:/ipfs/Qma2bMegdo533LeA5YwxHtE7kXEG7xMoc33WZX4ua2bBJC"
        ],
        "license": "UNLICENSED"
      },
      "src/contract-examples/test/ping-pong/Ping.t.sol": {
        "keccak256": "0xcd7a2b75ff9122e28be58786d6ce676bf72550903d022f9f9f3a72876be53df8",
        "urls": [
          "bzz-raw://4268e8efbc75b4bbc59740a662b13be247171b99a897fd8a47145347f6b711ce",
          "dweb:/ipfs/QmYHsVdZka3m7fjFzvwo7EcFqj5HUrM8DaSeZU2CzHHyQW"
        ],
        "license": "UNLICENSED"
      },
      "src/contract-examples/test/utils/TestHelper.sol": {
        "keccak256": "0x5ad52143b6e94fb5e5f3cf5b8b857212ac9cdfe6e3e93803bec996db980bef74",
        "urls": [
          "bzz-raw://8472e7a27b8d63e5c2b2565222285b6e6efada9dc02bb844f30c8a83dd5684eb",
          "dweb:/ipfs/Qme8habJwqg82TbVCRwo8cXrCg4GDJyhRS1Fuf9QCCZNYW"
        ],
        "license": "UNLICENSED"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contract-examples/test/ping-pong/Ping.t.sol",
    "id": 33146,
    "exportedSymbols": {
      "IConnext": [
        26943
      ],
      "Ping": [
        31561
      ],
      "PingTestUnit": [
        33145
      ],
      "TestHelper": [
        33998
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:1248:62",
    "nodes": [
      {
        "id": 33011,
        "nodeType": "PragmaDirective",
        "src": "39:24:62",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 33013,
        "nodeType": "ImportDirective",
        "src": "65:51:62",
        "nodes": [],
        "absolutePath": "src/contract-examples/test/utils/TestHelper.sol",
        "file": "../utils/TestHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33146,
        "sourceUnit": 33999,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33012,
              "name": "TestHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33998,
              "src": "73:10:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33015,
        "nodeType": "ImportDirective",
        "src": "117:46:62",
        "nodes": [],
        "absolutePath": "src/contract-examples/ping-pong/Ping.sol",
        "file": "../../ping-pong/Ping.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33146,
        "sourceUnit": 31562,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33014,
              "name": "Ping",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31561,
              "src": "125:4:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33017,
        "nodeType": "ImportDirective",
        "src": "164:63:62",
        "nodes": [],
        "absolutePath": "lib/interfaces/core/IConnext.sol",
        "file": "@connext/interfaces/core/IConnext.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 33146,
        "sourceUnit": 26944,
        "symbolAliases": [
          {
            "foreign": {
              "id": 33016,
              "name": "IConnext",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 26943,
              "src": "172:8:62",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 33145,
        "nodeType": "ContractDefinition",
        "src": "292:994:62",
        "nodes": [
          {
            "id": 33023,
            "nodeType": "VariableDeclaration",
            "src": "332:16:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "5c36b186",
            "mutability": "mutable",
            "name": "ping",
            "nameLocation": "344:4:62",
            "scope": 33145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Ping_$31561",
              "typeString": "contract Ping"
            },
            "typeName": {
              "id": 33022,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33021,
                "name": "Ping",
                "nameLocations": [
                  "332:4:62"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31561,
                "src": "332:4:62"
              },
              "referencedDeclaration": 31561,
              "src": "332:4:62",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ping_$31561",
                "typeString": "contract Ping"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33034,
            "nodeType": "VariableDeclaration",
            "src": "352:57:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "bc9748a1",
            "mutability": "mutable",
            "name": "pong",
            "nameLocation": "367:4:62",
            "scope": 33145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33024,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "352:7:62",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "arguments": [
                        {
                          "hexValue": "706f6e67",
                          "id": 33030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "400:6:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_188fcd5cf9ef16dcca9118fafa7971df7a86f5b5762c15c204d6a3d29f4e6e8d",
                            "typeString": "literal_string \"pong\""
                          },
                          "value": "pong"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_188fcd5cf9ef16dcca9118fafa7971df7a86f5b5762c15c204d6a3d29f4e6e8d",
                            "typeString": "literal_string \"pong\""
                          }
                        ],
                        "id": 33029,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "390:9:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 33031,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "390:17:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    ],
                    "id": 33028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "ElementaryTypeNameExpression",
                    "src": "382:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_type$_t_bytes20_$",
                      "typeString": "type(bytes20)"
                    },
                    "typeName": {
                      "id": 33027,
                      "name": "bytes20",
                      "nodeType": "ElementaryTypeName",
                      "src": "382:7:62",
                      "typeDescriptions": {}
                    }
                  },
                  "id": 33032,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "typeConversion",
                  "lValueRequested": false,
                  "nameLocations": [],
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "382:26:62",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes20",
                    "typeString": "bytes20"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes20",
                    "typeString": "bytes20"
                  }
                ],
                "id": 33026,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "374:7:62",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 33025,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "374:7:62",
                  "typeDescriptions": {}
                }
              },
              "id": 33033,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "374:35:62",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33037,
            "nodeType": "VariableDeclaration",
            "src": "413:25:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "aa8c217c",
            "mutability": "mutable",
            "name": "amount",
            "nameLocation": "428:6:62",
            "scope": 33145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33035,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "413:7:62",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 33036,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "437:1:62",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "id": 33042,
            "nodeType": "VariableDeclaration",
            "src": "442:46:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "b80fd822",
            "mutability": "mutable",
            "name": "transferId",
            "nameLocation": "457:10:62",
            "scope": 33145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 33038,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "442:7:62",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "3132333435",
                  "id": 33040,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "480:7:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_1841d653f9c4edda9d66a7e7737b39763d6bd40f569a3ec6859d3305b72310e6",
                    "typeString": "literal_string \"12345\""
                  },
                  "value": "12345"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_1841d653f9c4edda9d66a7e7737b39763d6bd40f569a3ec6859d3305b72310e6",
                    "typeString": "literal_string \"12345\""
                  }
                ],
                "id": 33039,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "470:9:62",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 33041,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "470:18:62",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33045,
            "nodeType": "VariableDeclaration",
            "src": "492:32:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "2fdeb111",
            "mutability": "mutable",
            "name": "relayerFee",
            "nameLocation": "507:10:62",
            "scope": 33145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 33043,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "492:7:62",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653136",
              "id": 33044,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "520:4:62",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_10000000000000000_by_1",
                "typeString": "int_const 10000000000000000"
              },
              "value": "1e16"
            },
            "visibility": "public"
          },
          {
            "id": 33051,
            "nodeType": "VariableDeclaration",
            "src": "528:33:62",
            "nodes": [],
            "constant": false,
            "functionSelector": "38d52e0f",
            "mutability": "mutable",
            "name": "asset",
            "nameLocation": "543:5:62",
            "scope": 33145,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33046,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "528:7:62",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "30",
                  "id": 33049,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "559:1:62",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  },
                  "value": "0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_0_by_1",
                    "typeString": "int_const 0"
                  }
                ],
                "id": 33048,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "551:7:62",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 33047,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "551:7:62",
                  "typeDescriptions": {}
                }
              },
              "id": 33050,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "551:10:62",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 33086,
            "nodeType": "FunctionDefinition",
            "src": "566:168:62",
            "nodes": [],
            "body": {
              "id": 33085,
              "nodeType": "Block",
              "src": "599:135:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 33055,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "605:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_PingTestUnit_$33145_$",
                          "typeString": "type(contract super PingTestUnit)"
                        }
                      },
                      "id": 33057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "611:5:62",
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 33997,
                      "src": "605:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 33058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:13:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33059,
                  "nodeType": "ExpressionStatement",
                  "src": "605:13:62"
                },
                {
                  "expression": {
                    "id": 33066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33060,
                      "name": "ping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33023,
                      "src": "629:4:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ping_$31561",
                        "typeString": "contract Ping"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 33064,
                          "name": "MOCK_CONNEXT",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33954,
                          "src": "645:12:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 33063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "636:8:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_Ping_$31561_$",
                          "typeString": "function (address) returns (contract Ping)"
                        },
                        "typeName": {
                          "id": 33062,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 33061,
                            "name": "Ping",
                            "nameLocations": [
                              "640:4:62"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 31561,
                            "src": "640:4:62"
                          },
                          "referencedDeclaration": 31561,
                          "src": "640:4:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ping_$31561",
                            "typeString": "contract Ping"
                          }
                        }
                      },
                      "id": 33065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "636:22:62",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Ping_$31561",
                        "typeString": "contract Ping"
                      }
                    },
                    "src": "629:29:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Ping_$31561",
                      "typeString": "contract Ping"
                    }
                  },
                  "id": 33067,
                  "nodeType": "ExpressionStatement",
                  "src": "629:29:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 33073,
                            "name": "ping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33023,
                            "src": "682:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Ping_$31561",
                              "typeString": "contract Ping"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Ping_$31561",
                              "typeString": "contract Ping"
                            }
                          ],
                          "id": 33072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "674:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 33071,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "674:7:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "674:13:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "50696e67",
                        "id": 33075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "689:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d82b52fab44f1875d8593df3ebdd8213fce8e21b7ad89169e51edeaff11fb7ff",
                          "typeString": "literal_string \"Ping\""
                        },
                        "value": "Ping"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d82b52fab44f1875d8593df3ebdd8213fce8e21b7ad89169e51edeaff11fb7ff",
                          "typeString": "literal_string \"Ping\""
                        }
                      ],
                      "expression": {
                        "id": 33068,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "665:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10371",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "668:5:62",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9471,
                      "src": "665:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "665:31:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33077,
                  "nodeType": "ExpressionStatement",
                  "src": "665:31:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33081,
                        "name": "pong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33034,
                        "src": "711:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "4d6f636b20506f6e67",
                        "id": 33082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "717:11:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_04de41af412556c0288591a06709af36650679c8153f7e637f8b56ca5d513801",
                          "typeString": "literal_string \"Mock Pong\""
                        },
                        "value": "Mock Pong"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_04de41af412556c0288591a06709af36650679c8153f7e637f8b56ca5d513801",
                          "typeString": "literal_string \"Mock Pong\""
                        }
                      ],
                      "expression": {
                        "id": 33078,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "702:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10371",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "705:5:62",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9471,
                      "src": "702:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 33083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "702:27:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33084,
                  "nodeType": "ExpressionStatement",
                  "src": "702:27:62"
                }
              ]
            },
            "baseFunctions": [
              33997
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "575:5:62",
            "overrides": {
              "id": 33053,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "590:8:62"
            },
            "parameters": {
              "id": 33052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "580:2:62"
            },
            "returnParameters": {
              "id": 33054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "599:0:62"
            },
            "scope": 33145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33119,
            "nodeType": "FunctionDefinition",
            "src": "738:283:62",
            "nodes": [],
            "body": {
              "id": 33118,
              "nodeType": "Block",
              "src": "807:214:62",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    33092
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 33092,
                      "mutability": "mutable",
                      "name": "pings",
                      "nameLocation": "821:5:62",
                      "nodeType": "VariableDeclaration",
                      "scope": 33118,
                      "src": "813:13:62",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 33091,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "813:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 33094,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 33093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "829:1:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "813:17:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33098,
                        "name": "transferId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33042,
                        "src": "858:10:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 33099,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33037,
                        "src": "877:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 33100,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33051,
                        "src": "892:5:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33101,
                        "name": "pong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33034,
                        "src": "906:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33102,
                        "name": "OPTIMISM_GOERLI_DOMAIN_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33901,
                        "src": "919:25:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 33105,
                            "name": "pongs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33088,
                            "src": "964:5:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 33103,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "953:3:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 33104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "957:6:62",
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "953:10:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 33106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "953:17:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 33095,
                        "name": "ping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33023,
                        "src": "837:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Ping_$31561",
                          "typeString": "contract Ping"
                        }
                      },
                      "id": 33097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "842:8:62",
                      "memberName": "xReceive",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31560,
                      "src": "837:13:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$_t_uint256_$_t_address_$_t_address_$_t_uint32_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes32,uint256,address,address,uint32,bytes memory) external returns (bytes memory)"
                      }
                    },
                    "id": 33107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "837:139:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 33108,
                  "nodeType": "ExpressionStatement",
                  "src": "837:139:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 33110,
                            "name": "ping",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33023,
                            "src": "992:4:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Ping_$31561",
                              "typeString": "contract Ping"
                            }
                          },
                          "id": 33111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "997:5:62",
                          "memberName": "pings",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 31467,
                          "src": "992:10:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 33112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "992:12:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 33115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33113,
                          "name": "pings",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33092,
                          "src": "1006:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 33114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1014:1:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1006:9:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 33109,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2014,
                        2039,
                        2052,
                        2068,
                        2110,
                        2152,
                        2194,
                        2231,
                        2268,
                        2305,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "983:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 33116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "983:33:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33117,
                  "nodeType": "ExpressionStatement",
                  "src": "983:33:62"
                }
              ]
            },
            "functionSelector": "8e5e5edc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Ping__xReceive_shouldUpdatePings",
            "nameLocation": "747:37:62",
            "parameters": {
              "id": 33089,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33088,
                  "mutability": "mutable",
                  "name": "pongs",
                  "nameLocation": "793:5:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 33119,
                  "src": "785:13:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 33087,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "784:15:62"
            },
            "returnParameters": {
              "id": 33090,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "807:0:62"
            },
            "scope": 33145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33144,
            "nodeType": "FunctionDefinition",
            "src": "1025:259:62",
            "nodes": [],
            "body": {
              "id": 33143,
              "nodeType": "Block",
              "src": "1105:179:62",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "4d7573742073656e642067617320657175616c20746f20746865207370656369666965642072656c6179657220666565",
                            "id": 33127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1134:50:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_b8b318f2539cc77c4bb43786f4b40767dcb60c6252e3c902fae61853e5483c3f",
                              "typeString": "literal_string \"Must send gas equal to the specified relayer fee\""
                            },
                            "value": "Must send gas equal to the specified relayer fee"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_b8b318f2539cc77c4bb43786f4b40767dcb60c6252e3c902fae61853e5483c3f",
                              "typeString": "literal_string \"Must send gas equal to the specified relayer fee\""
                            }
                          ],
                          "id": 33126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1128:5:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 33125,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1128:5:62",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 33128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1128:57:62",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 33122,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1839,
                        "src": "1112:2:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$10371",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 33124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1115:12:62",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10135,
                      "src": "1112:15:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 33129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1112:74:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33130,
                  "nodeType": "ExpressionStatement",
                  "src": "1112:74:62"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 33138,
                        "name": "pong",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33034,
                        "src": "1235:4:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 33139,
                        "name": "OPTIMISM_GOERLI_DOMAIN_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33901,
                        "src": "1241:25:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 33140,
                        "name": "relayerFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 33045,
                        "src": "1268:10:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 33131,
                          "name": "ping",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33023,
                          "src": "1193:4:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Ping_$31561",
                            "typeString": "contract Ping"
                          }
                        },
                        "id": 33133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1198:13:62",
                        "memberName": "startPingPong",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 31528,
                        "src": "1193:18:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint32_$_t_uint256_$returns$__$",
                          "typeString": "function (address,uint32,uint256) payable external"
                        }
                      },
                      "id": 33137,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 33136,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 33134,
                            "name": "relayerFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 33045,
                            "src": "1219:10:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 33135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1232:1:62",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "1219:14:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "1193:41:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint32_$_t_uint256_$returns$__$value",
                        "typeString": "function (address,uint32,uint256) payable external"
                      }
                    },
                    "id": 33141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1193:86:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33142,
                  "nodeType": "ExpressionStatement",
                  "src": "1193:86:62"
                }
              ]
            },
            "functionSelector": "7484cbd0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Ping__startPingPong_shouldRevertIfInsufficientRelayerFee",
            "nameLocation": "1034:61:62",
            "parameters": {
              "id": 33120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1095:2:62"
            },
            "returnParameters": {
              "id": 33121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1105:0:62"
            },
            "scope": 33145,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 33019,
              "name": "TestHelper",
              "nameLocations": [
                "317:10:62"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 33998,
              "src": "317:10:62"
            },
            "id": 33020,
            "nodeType": "InheritanceSpecifier",
            "src": "317:10:62"
          }
        ],
        "canonicalName": "PingTestUnit",
        "contractDependencies": [
          31561
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 33018,
          "nodeType": "StructuredDocumentation",
          "src": "229:62:62",
          "text": " @title PingTestUnit\n @notice Unit tests for Ping."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33145,
          33998,
          9081,
          1846,
          1843,
          9034,
          6044,
          5754,
          5365,
          3793,
          3129,
          1786
        ],
        "name": "PingTestUnit",
        "nameLocation": "301:12:62",
        "scope": 33146,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 62
}